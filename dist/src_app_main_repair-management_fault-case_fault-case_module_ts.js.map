{"version":3,"file":"src_app_main_repair-management_fault-case_fault-case_module_ts.js","mappings":"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","sources":["./src/app/main/repair-management/fault-case/fault-bulk-upload/fault-bulk-upload.component.ts","./src/app/main/repair-management/fault-case/fault-bulk-upload/fault-bulk-upload.component.html","./src/app/main/repair-management/fault-case/fault-bulk-upload/fault-bulk-upload.module.ts","./src/app/main/repair-management/fault-case/fault-bulk-upload/fault-bulk-upload.service.ts","./src/app/main/repair-management/fault-case/fault-case.module.ts","./src/app/main/repair-management/fault-case/fault-edit/fault-edit.component.ts","./src/app/main/repair-management/fault-case/fault-edit/fault-edit.component.html","./src/app/main/repair-management/fault-case/fault-edit/fault-edit.service.ts","./src/app/main/repair-management/fault-case/fault-list/edit-fault-sidebar/edit-fault-sidebar.component.ts","./src/app/main/repair-management/fault-case/fault-list/edit-fault-sidebar/edit-fault-sidebar.component.html","./src/app/main/repair-management/fault-case/fault-list/fault-list.component.ts","./src/app/main/repair-management/fault-case/fault-list/fault-list.component.html","./src/app/main/repair-management/fault-case/fault-list/fault-list.service.ts","./src/app/main/repair-management/fault-case/fault-list/new-fault-sidebar/new-fault-sidebar.component.ts","./src/app/main/repair-management/fault-case/fault-list/new-fault-sidebar/new-fault-sidebar.component.html"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { cloneDeep } from 'lodash';\nimport { repeaterAnimation } from 'app/main/forms/form-repeater/form-repeater.animation';\nimport { GlobalConfig, ToastrService, Toast, ToastPackage } from 'ngx-toastr';\nimport { rmaFaultSelectionService } from '../../repair-fault-selection';\nimport { CustomToastrComponent } from 'app/main/extensions/toastr/custom-toastr/custom-toastr.component';\nimport { RepairDevice } from '../fault-list/fault-list.service';\nimport { FaultBulkUploadService } from './fault-bulk-upload.service';\n\n@Component({\n  selector: 'app-fault-bulk-upload',\n  templateUrl: './fault-bulk-upload.component.html',\n  styleUrls: ['./fault-bulk-upload.component.scss'],\n  animations: [repeaterAnimation],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FaultBulkUploadComponent implements OnInit {\n  public contentHeader: object;\n  public items = [{ itemId: '', serialNumber: '', assetCode: '', customer: '', faultCategory: '', faultSubCategory: '', faultDescription: '' }];\n\n  public item = {\n    serialNumber: '',\n    assetCode: '', customer: '', faultCategory: '', faultSubCategory: '', faultDescription: ''\n  };\n\n  public serialNos = [];\n  public assetNos = [];\n\n  public bulkValues = { itemId: '', serialNumber: '', assetCode: '', customer: '', faultCategory: '', faultSubCategory: '', faultDescription: '' };\n\n  public bulkTempValues = { serialNumbers: '', assetCodes: '', customer: '' };\n  public rmaFaultSelectionService = new rmaFaultSelectionService;\n  private toastRef: any;\n  private options: GlobalConfig;\n  public repairDevice: RepairDevice = new RepairDevice;\n  public uniqueCustomerCodes = [];\n  // snippet code variable\n  // public _snippetCodeInvoiceRepeater = snippet.snippetCodeInvoiceRepeater;\n\n  constructor(private _coreSidebarService: CoreSidebarService, private _faultbulkuploadService: FaultBulkUploadService, private toastr: ToastrService) {\n    this.options = this.toastr.toastrConfig;\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '', serialNumber: '', assetCode: '', customer: '', faultCategory: '', faultSubCategory: '', faultDescription: ''\n    });\n  }\n\n  filterSubById(id) {\n    console.log(\"IDDDDDDDDDD \" + id)\n    return this.rmaFaultSelectionService.subCategories.filter(item => item.parent === id);\n  }\n\n  addBulkItems() {\n\n    console.log(this.bulkTempValues.serialNumbers.split('\\n').map(e => {\n      if (`${e}` != '') { this.serialNos.push(`${e}`) } else {\n        console.log(\"Empty Found .........\");\n      }\n    }));\n    console.log(this.bulkTempValues.assetCodes.split('\\n').map(e => {\n      if (`${e}` != '') { this.assetNos.push(`${e}`) } else {\n        console.log(\"Empty Found .........\");\n      }\n    }));\n    console.log(this.serialNos);\n    console.log(this.assetNos);\n    console.log(this.bulkTempValues.customer);\n\n    // this.bulkTempValues.serialNumbers.split('\\n').map(e => `'${e}'`)\n\n    if (this.serialNos.length == this.assetNos.length) {\n\n      if (this.items.indexOf(this.items[0]) === 0 && this.items[0].serialNumber === '') {\n        this.items.splice(0, 1);\n      }\n      for (let i = 0; i < this.serialNos.length; i++) {\n        this.items.push({\n          itemId: '' + i,\n          serialNumber: this.serialNos[i], assetCode: this.assetNos[i], customer: this.bulkTempValues.customer, faultCategory: '', faultSubCategory: '', faultDescription: ''\n        });\n\n        // this.item.\n        //   serialNumber = this.serialNos[i];\n      }\n\n\n\n      console.log(this.items);\n\n    } else {\n\n      console.log(\"Not Matching....\" + this.items);\n\n\n\n\n      this.toastr.error(\n        'No\\'s of Serial doesn\\'t match No\\'s of Asset Code',\n        'Invalid Data Format',\n        { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n      );\n    }\n\n  }\n\n\n  toastrError(title: string, message: string) {\n    this.toastRef = this.toastr.error(message, title, {\n      toastClass: 'toast ngx-toastr',\n      closeButton: true\n    });\n  }\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  bulkUploadFaultCases() {\n\n    for (let i = 0; i <= this.items.length; i++) {\n\n      this.repairDevice.serialNumber = this.items[i].serialNumber;\n      this.repairDevice.assetCode = this.items[i].assetCode;\n      this.repairDevice.customer = this.items[i].customer;\n      this.repairDevice.rmaFaultCategory = this.items[i].faultCategory;\n      this.repairDevice.rmaFaultSubCategory = this.items[i].faultSubCategory;\n      this.repairDevice.rmaFaultDescription = this.items[i].faultDescription;\n      this.repairDevice.faultDescription = this.items[i].faultDescription;\n      this.repairDevice.repairedByUs = true;\n      this.repairDevice.assetCorrect = true;\n      this.repairDevice.serialCorrect = true;\n\n      if (this.repairDevice.rmaFaultCategory.length > 0) {\n        this.repairDevice.repairedByUs = false;\n      }\n      // this.repairDevice.rmaFaultCategory = this.items[i].faultCategory;\n\n      this._faultbulkuploadService\n        .addNewFaultCase(this.repairDevice)\n        .pipe()\n        .subscribe(\n          data => {\n            console.log(data);\n\n            setTimeout(() => {\n              this.toastr.success(\n                'If don\\'t see updated information. Please contact admin',\n                'Repair Case Added Successfully',\n                { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n              );\n            }, 1000);\n            // this.deleteItem()\n\n          },\n          error => {\n            console.log(error)\n            setTimeout(() => {\n              this.toastr.success(\n                'Failed to add ' + this.repairDevice.serialNumber,\n                'Error',\n                { toastClass: 'toast ngx-toastr', closeButton: true }\n              );\n            }, 1000);\n\n\n          }\n        );\n    }\n\n  }\n\n  ngOnInit(): void {\n\n    this.uniqueCustomerCodes = [];\n\n    this._faultbulkuploadService\n      .getCustomerUniqueCode()\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.uniqueCustomerCodes = data;\n        },\n        error => {\n\n\n\n        }\n      );\n  }\n\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n        <!-- content-header component -->\n        <!-- <app-content-header [contentHeader]=\"contentHeader\"></app-content-header> -->\n\n        <section class=\"form-control-repeater\">\n            <div class=\"row\">\n                <!-- Invoice repeater -->\n                <div class=\"col-12\">\n                    <!-- <core-card-snippet [snippetCode]=\"_snippetCodeInvoiceRepeater\"> -->\n                    <core-card>\n\n                        <h4 class=\"card-title\">Bulk Fault Case</h4>\n\n                        <div class=\"card-body\">\n\n                            <div class=\"row\">\n\n                                <div class=\"col-12  mt-75\">\n\n                                    <button class=\"btn btn-icon btn-primary ml-1 float-right\" (click)=\"addItem()\"\n                                        rippleEffect>\n                                        <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i>\n                                        <span class=\"d-none d-sm-inline-block\">Add New</span>\n                                    </button>\n\n\n                                    <a routerLink=\"/repair/fault-case/fault-bulk\" class=\"font-weight-bold\">\n                                        <button class=\"btn btn-icon btn-primary ml-1 float-right\"\n                                            (click)=\"bulkUploadFaultCases()\" rippleEffect>\n                                            <i data-feather=\"upload\"\n                                                class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                                class=\"d-none d-sm-inline-block\">Import All</span>\n                                        </button>\n                                    </a>\n\n                                </div>\n\n                            </div>\n\n                            <!-- <div class=\"row\">\n                                <div class=\"col-12 mb-50\">\n\n                                    <div class=\"row\">\n                                        <div class=\"col-12\">\n\n                                            <button class=\"btn btn-icon btn-primary float-right mr-50\" type=\"button\"\n                                                (click)=\"addItem()\" rippleEffect>\n                                                <i data-feather=\"navigation\" class=\"mr-25\"></i>\n                                                <span>Import All</span>\n                                            </button>\n\n                                            <button class=\"btn btn-icon btn-primary float-right mr-50\" type=\"button\"\n                                                (click)=\"addItem()\" rippleEffect>\n                                                <i data-feather=\"plus\" class=\"mr-50\"></i>\n                                                <span>Add New</span>\n                                            </button>\n\n\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </div> -->\n                            <form action=\"#\" class=\"add-new-user\">\n                                <!-- <div *ngFor=\"let item of items; let i = index\" @heightIn> -->\n                                <div class=\"row d-flex align-items-end\">\n\n\n                                    <div class=\"col-md-3 col-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"serialNos\">Serial Number</label>\n                                            <fieldset class=\"form-group\">\n                                                <textarea type=\"text\" class=\"form-control\"\n                                                    [(ngModel)]=\"bulkTempValues.serialNumbers\" name=\"serialNos\"\n                                                    id=\"serialNos\" placeholder=\"Serial Numbers (separated by commas)\"\n                                                    rows=\"5\"></textarea>\n                                            </fieldset>\n\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-3 col-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"assetCodes\">Asset Code</label>\n                                            <fieldset class=\"form-group\">\n                                                <textarea type=\"text\" class=\"form-control\"\n                                                    [(ngModel)]=\"bulkTempValues.assetCodes\" name=\"assetCodes\"\n                                                    id=\"assetCodes\" placeholder=\"Asset Codes (separated by commas)\"\n                                                    rows=\"5\"></textarea>\n                                            </fieldset>\n                                            <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]=\"bulkValues.assetCode\"\n                                                name=\"assetCodes\" id=\"assetCodes\"\n                                                placeholder=\"Asset Codes (separated by commas)\" /> -->\n                                        </div>\n                                    </div>\n\n                                    <div class=\"col-md-2 col-12\">\n                                        <div class=\"form-group\">\n                                            <!-- <label for=\"customer\">Customer</label>\n                                            <input type=\"text\" class=\"form-control\"\n                                                [(ngModel)]=\"bulkTempValues.customer\" name=\"customer\" id=\"customer\"\n                                                placeholder=\"Customer\" /> -->\n\n                                            <label for=\"customer\">Customer</label>\n                                            <select [(ngModel)]=\"bulkTempValues.customer\" class=\"form-control\"\n                                                name=\"customer\" id=\"customer\" placeholder=\"Customer\">\n\n                                                <option [ngValue]=\"category\"\n                                                    *ngFor=\"let category of uniqueCustomerCodes\">{{category}}\n                                                </option>\n\n                                            </select>\n                                        </div>\n                                    </div>\n\n\n                                    <div class=\"col-md-2 col-12 mr-25\">\n                                        <div class=\"form-group\">\n                                            <button class=\"btn btn-success text-nowrap px-1\" (click)=\"addBulkItems()\"\n                                                rippleEffect>\n                                                <i data-feather=\"hash\" class=\"mr-25\"></i>\n                                                <span>Run Script</span>\n                                            </button>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                                <hr />\n                                <!-- </div> -->\n                            </form>\n\n                            <form action=\"#\" class=\"invoice-repeater\" *ngIf=\" items.length>1\">\n                                <div *ngFor=\"let item of items; let i = index\" @heightIn>\n                                    <div class=\"row d-flex align-items-end\">\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"serialNumber{{ i }}\">Serial Number</label>\n                                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.serialNumber\"\n                                                    name=\"serialNumber{{ i }}\" id=\"serialNumber{{ i }}\"\n                                                    placeholder=\"Serial Number\" />\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"assetCode{{ i }}\">Asset Code</label>\n                                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.assetCode\"\n                                                    name=\"assetCode{{ i }}\" id=\"assetCode{{ i }}\"\n                                                    placeholder=\"Asset Code\" />\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"customer{{ i }}\">Customer</label>\n                                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.customer\"\n                                                    name=\"customer{{ i }}\" id=\"customer{{ i }}\" placeholder=\"Customer\"\n                                                    disabled />\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"faultCategory{{ i }}\">Fault Category</label>\n                                                <!-- <input type=\"text\" class=\"form-control\" [(ngModel)]=\"item.faultCategory\"\n                                                    name=\"faultCategory{{ i }}\" id=\"faultCategory{{ i }}\"\n                                                    placeholder=\"Fault Category\" /> -->\n                                                <select class=\"form-control\" [(ngModel)]=\"item.faultCategory\"\n                                                    name=\"faultCategory{{ i }}\" id=\"faultCategory{{ i }}\">\n                                                    <option disabled [ngValue]=\"null\">-/-</option>\n                                                    <option [ngValue]=\"category.title\"\n                                                        *ngFor=\"let category of rmaFaultSelectionService.mainGroups\">\n                                                        {{category.title}}\n                                                    </option>\n                                                </select>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"faultSubCategory{{ i }}\">Fault Sub Category</label>\n                                                <select class=\"form-control\" [(ngModel)]=\"item.faultSubCategory\"\n                                                    name=\"faultSubCategory{{ i }}\" id=\"faultSubCategory{{ i }}\">\n                                                    <option [ngValue]=\"subcategory.title\"\n                                                        *ngFor=\"let subcategory of filterSubById(item.faultCategory)\">\n                                                        {{subcategory.title}}\n                                                    </option>\n                                                </select>\n                                                <!-- <input type=\"text\" class=\"form-control\"\n                                                    [(ngModel)]=\"item.faultSubCategory\" name=\"faultSubCategory{{ i }}\"\n                                                    id=\"faultSubCategory{{ i }}\" placeholder=\"Fault SubCategory\" /> -->\n                                            </div>\n                                        </div>\n\n                                        <div class=\"col-md-2 col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"Description{{ i }}\">Fault Description</label>\n                                                <fieldset class=\"form-group\">\n                                                    <textarea type=\"text\" class=\"form-control\"\n                                                        [(ngModel)]=\"item.faultDescription\" name=\"Description{{ i }}\"\n                                                        id=\"Description{{ i }}\" rows=\"1\"\n                                                        placeholder=\"Fault Description\"></textarea>\n                                                </fieldset>\n\n                                                <!-- <textarea type=\"text\" class=\"form-control\"\n                                                    [(ngModel)]=\"item.Description\" name=\"itemName{{ i }}\"\n                                                    id=\"itemName{{ i }}\" placeholder=\"Fault Description\" /> -->\n                                            </div>\n                                        </div>\n\n                                        <!-- <div class=\"col-md-2 col-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"itemCost\">Cost</label>\n                                            <input type=\"number\" class=\"form-control\" id=\"itemcost\"\n                                                [(ngModel)]=\"item.itemCost\" name=\"itemCost{{ i }}\" id=\"itemCost{{ i }}\"\n                                                placeholder=\"32\" />\n                                        </div>\n                                    </div> -->\n\n                                        <!-- <div class=\"col-md-2 col-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"itemQuantity{{ i }}\">Quantity</label>\n                                            <input type=\"number\" class=\"form-control\" id=\"itemQuantity{{ i }}\"\n                                                name=\"itemQuantity{{ i }}\" [(ngModel)]=\"item.itemQuantity\"\n                                                placeholder=\"1\" />\n                                        </div>\n                                    </div> -->\n\n                                        <!-- <div class=\"col-md-2 col-12\">\n                                        <div class=\"form-group\">\n                                            <label for=\"staticPrice\">Price</label>\n                                            <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\"\n                                                value=\"$32\" />\n                                        </div>\n                                    </div> -->\n\n                                        <div class=\"col-md-2 col-12 mb-30\">\n                                            <div class=\"form-group\">\n                                                <button class=\"btn btn-outline-danger text-nowrap px-1\"\n                                                    (click)=\"deleteItem(i)\" rippleEffect>\n                                                    <i data-feather=\"x\" class=\"mr-25\"></i>\n                                                    <span>Delete</span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </div>\n                            </form>\n\n                            <pre class=\"p-1 text-white mt-1\">\n\n                <div  *ngFor=\"let item of items; let i = index\">\n    Item: {{ i+1 }}\n    Serial Number: {{ item.serialNumber }}\n    Asset Code: {{ item.assetCode }}\n    Customer: {{ item.customer }}\n    Fault Category: {{ item.faultCategory }}\n    Fault SubCategory: {{ item.faultSubCategory }}\n    Fault Description: {{ item.faultDescription }}</div>\n              </pre>\n                        </div>\n                        <!-- </core-card-snippet> -->\n                    </core-card>\n                </div>\n                <!--/ Invoice repeater -->\n            </div>\n        </section>\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FaultBulkUploadComponent } from './fault-bulk-upload.component';\nimport { CoreCommonModule } from '@core/common.module';\nimport { FormsModule } from '@angular/forms';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CoreCardModule } from '@core/components/core-card/core-card.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nconst routes: Routes = [\n  {\n    path: 'fault-bulk-loader',\n    component: FaultBulkUploadComponent,\n    data: { animation: 'toastr' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    FaultBulkUploadComponent\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, CoreCommonModule, ContentHeaderModule, NgbModule, CoreCardModule, ToastrModule]\n})\nexport class FaultBulkUploadModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RepairDevice } from '../fault-list/fault-list.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaultBulkUploadService {\n\n  constructor(private _httpClient: HttpClient, private _toastrService: ToastrService) { }\n\n  addNewFaultCase(repairDevice: RepairDevice) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/repairDevice`, repairDevice)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n\n          return user;\n        })\n      );\n\n    // this._httpClient.post<any>(`${environment.apiUrl}/api/v1/repairDevice`, formCaseData)\n    //   .subscribe(data => {\n    //     console.log(data);\n    //   });\n\n  }\n\n  getCustomerUniqueCode() {\n\n\n    return this._httpClient\n      .get<any>(`${environment.apiUrl}/api/v1/uniqueCustomers`)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n\n          return user;\n        })\n      );\n\n\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FaultListComponent } from './fault-list/fault-list.component';\nimport { NewFaultSidebarComponent } from './fault-list/new-fault-sidebar/new-fault-sidebar.component';\nimport { FaultEditComponent } from './fault-edit/fault-edit.component';\n\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { InvoiceListService } from 'app/main/apps/invoice/invoice-list/invoice-list.service';\nimport { InvoiceModule } from 'app/main/apps/invoice/invoice.module';\n\nimport { UserEditComponent } from 'app/main/apps/user/user-edit/user-edit.component';\nimport { UserEditService } from 'app/main/apps/user/user-edit/user-edit.service';\n\nimport { UserListComponent } from 'app/main/apps/user/user-list/user-list.component';\nimport { UserListService } from 'app/main/apps/user/user-list/user-list.service';\n\nimport { UserViewComponent } from 'app/main/apps/user/user-view/user-view.component';\nimport { UserViewService } from 'app/main/apps/user/user-view/user-view.service';\nimport { NewUserSidebarComponent } from 'app/main/apps/user/user-list/new-user-sidebar/new-user-sidebar.component';\nimport { FaultListService } from './fault-list/fault-list.service';\nimport { FaultEditService } from './fault-edit/fault-edit.service';\nimport { CoreCardModule } from '@core/components/core-card/core-card.module';\nimport { CsvModule } from '@ctrl/ngx-csv';\nimport { FaultBulkUploadComponent } from './fault-bulk-upload/fault-bulk-upload.component';\nimport { FaultBulkUploadModule } from './fault-bulk-upload/fault-bulk-upload.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { EditFaultSidebarComponent } from './fault-list/edit-fault-sidebar/edit-fault-sidebar.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'fault-list',\n    component: FaultListComponent,\n    resolve: {\n      uls: FaultListService\n    },\n    data: { animation: 'FaultListComponent' }\n  },\n  {\n    path: 'fault-bulk',\n    component: FaultBulkUploadComponent,\n    resolve: {\n      uls: FaultListService\n    },\n    data: { animation: 'FaultListComponent' }\n  },\n  {\n    path: 'user-view/:id',\n    component: UserViewComponent,\n    resolve: {\n      data: UserViewService,\n      InvoiceListService\n    },\n    data: { path: 'view/:id', animation: 'UserViewComponent' }\n  },\n  {\n    path: 'user-edit/:id',\n    component: FaultEditComponent,\n    resolve: {\n      ues: FaultEditService\n    },\n    data: { animation: 'UserEditComponent' }\n  },\n  // {\n  //   path: 'user-view',\n  //   redirectTo: '/apps/user/user-view/2' // Redirection\n  // },\n  {\n    path: 'fault-edit',\n    redirectTo: '/repair/fault-edit/2' // Redirection\n  }\n];\n\n\n\n\n\n@NgModule({\n  declarations: [\n    FaultListComponent,\n    NewFaultSidebarComponent,\n    FaultEditComponent,\n    EditFaultSidebarComponent,\n\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Ng2FlatpickrModule,\n    NgxDatatableModule,\n    CorePipesModule,\n    CoreDirectivesModule,\n    InvoiceModule,\n    CoreSidebarModule,\n    CoreCardModule,\n    CsvModule, FaultBulkUploadModule, ToastrModule,\n    FileUploadModule\n  ],\n  providers: [FaultListService, FaultEditService]\n})\nexport class FaultCaseModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-fault-edit',\n  templateUrl: './fault-edit.component.html',\n  styleUrls: ['./fault-edit.component.scss']\n})\nexport class FaultEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>fault-edit works!</p>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaultEditService {\n\n  constructor() { }\n}\n","import { Component, Input, OnInit, Output, ViewEncapsulation } from '@angular/core'\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { FaultListService, RepairDevice } from '../fault-list.service';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ContractListService } from 'app/main/repair-management/contract-check/contract-list/contract-list.service';\nimport { rmaFaultSelectionService } from 'app/main/repair-management/repair-fault-selection';\n\nimport { delay, tap } from 'rxjs/operators';\nimport { EventEmitter } from '@angular/core';\nimport { NgbDateStructAdapter } from '@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter';\n\n@Component({\n  selector: 'app-edit-fault-sidebar',\n  templateUrl: './edit-fault-sidebar.component.html',\n  styleUrls: ['./edit-fault-sidebar.component.scss']\n})\nexport class EditFaultSidebarComponent implements OnInit {\n\n  public fullname;\n  public username;\n  public email;\n  public selectFaultCategory: any;\n  public selectFaultCategoryLoading = false;\n  public selectFaultSubCategory: any;\n  public selectFaultSubCategoryLoading = false;\n\n  public contractCheckValidation = { isValid: 0, message: \"\" };\n  public item = {\n    id: 0,\n    emailDate: '',\n    collectionDate: '',\n    deviceModel: '',\n    customer: '',\n    serialNumber: '',\n    assetCode: '',\n    faultDescription: '',\n    rmaStatus: '',\n    correctSerialNo: '',\n    correctAssetCode: '',\n    rmaFaultCategory: '',\n    rmaFaultSubCategory: '',\n    rmaFaultDescription: '',\n    repairStatus: '',\n    replacementSerialNo: '',\n    createdDate: '',\n    deliveryDate: '',\n    rmaNumber: '',\n    lastUpdated: '',\n    updatedBy: '',\n    createdBy: '',\n    isInContract: '',\n    customerNote: '',\n    accessoryNote: '',\n    extraNotes: '',\n    deliveryNoteId: '',\n    replacement: false,\n    assetCorrect: true,\n    serialCorrect: true,\n    repairedByUs: true,\n    replacementByUs: false,\n  };\n  public form: UntypedFormGroup;\n\n  @Input()\n  public emailDPdata: NgbDateStruct;\n\n  @Input()\n  public collectionDPdata: NgbDateStruct;\n\n  public rmaFaultSelectionService = new rmaFaultSelectionService;\n\n  public uniqueEditCustomerCodes = [];\n\n  @Input()\n  public editRepairDevice: RepairDevice = new RepairDevice;\n\n  @Output()\n  public visibleChange: EventEmitter<any> = new EventEmitter();\n\n  filterSubById(id) {\n    // console.log(\"IDDDDDDDDDD \" + id)\n    return this.rmaFaultSelectionService.subCategories.filter(item => item.parent === id);\n  }\n\n  // public _faultService: FaultListService;\n  // Private\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _coreSidebarService: CoreSidebarService,\n    private _faultListService: FaultListService,\n    private _coreConfigService: CoreConfigService,\n    private _contractListService: ContractListService,\n    private _formBuilder: UntypedFormBuilder, private _toastrService: ToastrService) {\n\n    this.toDateStructure(this.editRepairDevice.emailDate);\n  }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // get f() {\n  //   return this.loginForm.controls;\n  // }\n  // submit(form) {\n  //   if (form.valid) {\n  //     this.toggleSidebar('new-user-sidebar');\n  //   }\n  // }\n\n  /**\n   * Submit\n   *\n   * @param form\n   */\n\n  // private selectcategoryMethod() {\n  //   this.selectFaultCategoryLoading = true;\n  //   this.selectFaultCategory = this.getFaultCategory().subscribe(x => {\n  //     this.selectFaultCategory = x;\n  //     this.selectFaultCategoryLoading = false;\n  //   });;\n\n  // }\n\n  // private selectSubCategoryMethod() {\n  //   this.selectFaultSubCategoryLoading = true;\n  //   this.selectFaultSubCategory = this.getFaultSubCategory().subscribe(x => {\n  //     this.selectFaultSubCategory = x;\n  //     this.selectFaultSubCategoryLoading = false;\n  //   });;\n\n  // }\n\n\n  // getFaultCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   if (term) {\n  //     items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n  // }\n\n  // getFaultSubCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   // items.forEach(x => name)\n  //   if (term) {\n  //     items = items.filter(x => x.name === \"Battery\");\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n\n  // }\n\n  onSwitchChange(event: any) {\n    console.log(\"Switch Event Clicked \" + event);\n    this.visibleChange.emit(this.editRepairDevice);\n\n\n  }\n  // onSerialNumberEvent(event: any) {\n\n  //   console.log(event.target.value);\n  //   if (event.target.value.length > 10) {\n\n  //     this.validateContractForEvent(event.target.value);\n  //     console.log(\"CHECKING FOR CONTRACT\");\n  //   } else {\n  //     console.log(\"NOT CHECKING\");\n  //   }\n\n  // }\n\n  getValidationServiceDateStatus(startDate: string, endDate: string) {\n    const date = new Date();\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (date > start && date < end) {\n      console.log('✅ date is between the 2 dates');\n      return true;\n    } else {\n      console.log('⛔️ date is not in the range');\n      return false;\n    }\n  }\n\n  public validateContractForEvent(serialNumber: string) {\n\n    this._contractListService\n      .getValidityCheck(serialNumber)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data.actions[0].returnValue);\n\n          if (!data.actions[0].returnValue.ListOfZEBSerialNumber?.Asset[0]) {\n\n            // this.onDatatablessChanged.next(this.rows);\n            console.log(\"EMPTY NOT FOUND\");\n          } else {\n            if ((data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].ListOfServiceDetails.ServiceDetails).length > 0) {\n              console.log(\"IN CONTRACTTTTTTTT....\");\n              this.contractCheckValidation = { isValid: 1, message: \"In Contract\" };\n            } else {\n\n              //Checking for Warranty\n              const inWarranty = this.getValidationServiceDateStatus(data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyStartDate, data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyEndDate);\n              if (inWarranty) {\n                this.contractCheckValidation = { isValid: 1, message: \"In Warranty\" };\n              } else {\n                this.contractCheckValidation = { isValid: 2, message: \"Billable\" };\n              }\n\n            }\n            this.editRepairDevice.deviceModel = data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].Product;\n            console.log(\"FOUND\");\n          }\n\n\n        },\n        error => {\n\n          console.log(error)\n\n        }\n      );\n  }\n\n  submit() {\n    // this.submitted = true;\n\n    // stop here if form is invalid\n    // if (form.invalid) {\n    //   console.log(\"Invalid Form\");\n    //   this._toastrService.error(\n    //     'Please check data before submitting.',\n    //     'Invalid Data',\n    //     { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n    //   );\n    //   return;\n    // }\n\n    this.editRepairDevice.replacement;\n\n    if (this.emailDPdata == null || this.collectionDPdata == null) {\n      // this._toastrService.error(\n      //   'Email and Collection Date null.',\n      //   'Invalid Data',\n      //   { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n      // );\n    } else {\n      this.editRepairDevice.emailDate = this.emailDPdata.year + \"-\" + this.emailDPdata.month + \"-\" + this.emailDPdata.day;\n      this.editRepairDevice.collectionDate = this.collectionDPdata.year + \"-\" + this.collectionDPdata.month + \"-\" + this.collectionDPdata.day;\n      console.log(\"Email Date :\" + this.editRepairDevice.emailDate);\n    }\n\n    // Login\n    // this.loading = true;\n    this._faultListService\n      .updateFaultCase(this.editRepairDevice)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n          this.toggleSidebar('edit-fault-sidebar');\n\n          // location.reload();\n        },\n        error => {\n          console.log(error)\n\n\n          this.toggleSidebar('edit-fault-sidebar');\n        }\n      );\n\n\n    // this.toggleSidebar('new-user-sidebar');\n  }\n\n  resetForm() {\n    // this.repairDevice = new RepairDevice;\n    // this.repairDevice.repairedByUs = true;\n    // this.repairDevice.assetCorrect = true;\n    // this.repairDevice.serialCorrect = true;\n    // this.repairDevice.replacement = false;\n  }\n\n  ngOnInit(): void {\n\n    this.uniqueEditCustomerCodes = [];\n\n    this._faultListService\n      .getCustomerUniqueCode()\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.uniqueEditCustomerCodes = data;\n        },\n        error => {\n\n          // this.toggleSidebar('new-user-sidebar');\n        }\n      );\n\n    // this.toDateStructure(this.editRepairDevice.emailDate);\n    // this.editRepairDevice.emailDate = this.emailDPdata.year + \"-\" + this.emailDPdata.month + \"-\" + this.emailDPdata.day;\n    // this.editRepairDevice.collectionDate = this.collectionDPdata.year + \"-\" + this.collectionDPdata.month + \"-\" + this.collectionDPdata.day;\n\n  }\n\n  toDateStructure(dateAsString: string): NgbDateStruct {\n\n    console.log(dateAsString);\n\n    if (!dateAsString) {\n      this.emailDPdata = null;\n      console.log(\"null\");\n    }\n    else {\n      const parts = dateAsString.split('-');\n      let newValue = {\n        year: +parts[0],\n        month: +parts[1],\n        day: +parts[2],\n      };\n\n      console.log(\"new Value : \" + newValue.year);\n\n      this.emailDPdata = { year: newValue.year, month: newValue.month, day: newValue.day };\n      // { year: newValue.year, month: newValue.month, day: newValue.day };\n      // if (this.emailDPdata != newValue) {\n      // this.emailDPdata.year = newValue.year;\n      // this.emailDPdata.month = newValue.month;\n      // this.emailDPdata.day = newValue.day;\n      console.log(\"email Value : \" + this.emailDPdata.year);\n      // }\n    }\n    return this.emailDPdata;\n  }\n\n  fromDateStructure(t: NgbDateStruct): string {\n    return t && `${pad(t.year)}-${pad(t.month)}-${pad(t.day)}`;\n  }\n\n  getMockSelection() {\n    return [\n      {\n        name: \"Battery\",\n        children: [\n          \"Battery TC2x change request\",\n          \"Battery backup\",\n          \"Battery broken conn or wire\",\n          \"Battery drain problem\",\n          \"Battery general problem\",\n          \"Battery won't charge\",\n          \"Battery won't hold charge\",\n\n\n        ]\n      },\n      {\n        name: \"Cable\",\n        children: [\n          \"Cable connector\",\n          \"Cable cut\",\n          \"Cable general problem\",\n          \"Cable intermittent\",\n          \"Cable loose\",\n          \"Cable worn\"\n\n\n        ]\n      },\n      {\n        name: \"Camera\",\n        children: [\n          \"Camera error message\",\n          \"Camera image failure\",\n          \"Camera no decode\"\n\n\n        ]\n      }\n    ];\n  }\n\n\n}\n\n\n\nfunction pad(hour: any) {\n  throw new Error('Function not implemented.');\n}\n\nfunction equal(emailDPdata: NgbDateStruct, newValue: { year: number; month: number; day: number; }) {\n  throw new Error('Function not implemented.');\n}\n\n","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n        <div class=\"modal-dialog\">\n            <form class=\"add-new-user modal-content pt-0\" (ngSubmit)=\"(editCaseForm.form.valid)\" #editCaseForm=\"ngForm\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                    (click)=\"toggleSidebar('edit-fault-sidebar')\">\n                    ×\n                </button>\n                <div class=\"modal-header mb-1\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Fault Case</h5>\n                </div>\n                <div class=\"modal-body flex-grow-1\">\n                    <div class=\"form-group\">\n                        <label for=\"editedSerialNumber\">Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.serialNumber\" class=\"form-control\" [ngClass]=\"{\n                            'is-valid': contractCheckValidation.isValid == 1,\n                            'is-invalid': contractCheckValidation.isValid == 2\n                        }\" name=\"editedSerialNumber\" placeholder=\"Enter Serial Number\" required disabled />\n                        <div class=\"valid-feedback\">{{contractCheckValidation.message}}</div>\n                        <div class=\"invalid-feedback\">{{contractCheckValidation.message}}</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"editedAssetCode\">Asset Code</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.assetCode\" class=\"form-control\"\n                            name=\"editedAssetCode\" placeholder=\"Enter Asset Code\" disabled />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"editedDeviceModel\">Device Model</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.deviceModel\" class=\"form-control\"\n                            name=\"editedDeviceModel\" placeholder=\"Enter Product Code\" disabled />\n                        <!-- <select class=\"form-control\" [(ngModel)]=\"editRepairDevice.deviceModel\" name=\"deviceModel\">\n                            <option>Zebra TC56</option>\n                            <option>Zebra TC77</option>\n                            <option>QLN420</option>\n                        </select> -->\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"editedEmailDatePicker\">Email Date</label>\n                        <div class=\"input-group\">\n\n                            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"editedEmailDatePicker\"\n                                [(ngModel)]=\"emailDPdata\" ngbDatepicker #emailDP=\"ngbDatepicker\" />\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary feather icon-calendar\"\n                                    (click)=\"emailDP.toggle()\" type=\"button\" rippleEffect></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"editedCollectionDatePicker\">Collection Date</label>\n                        <div class=\"input-group\">\n\n                            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"editedCollectionDatePicker\"\n                                [(ngModel)]=\"collectionDPdata\" ngbDatepicker #collectionDP=\"ngbDatepicker\" />\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary feather icon-calendar\"\n                                    (click)=\"collectionDP.toggle()\" type=\"button\" rippleEffect></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"editedCustomer\">Customer</label>\n\n                        <select [(ngModel)]=\"editRepairDevice.customer\" class=\"form-control\" name=\"editedCustomer\">\n                            <!-- <option disabled [ngValue]=\"null\">-/-</option> -->\n                            <option [ngValue]=\"category\" *ngFor=\"let category of uniqueEditCustomerCodes\">{{category}}\n                            </option>\n                        </select>\n\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"editedFaultDescription\">Fault Description</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.faultDescription\" class=\"form-control\"\n                            name=\"editedFaultDescription\" placeholder=\"Enter description given by customer\" />\n                    </div>\n\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Repaired By Us</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.repairedByUs\" class=\"custom-control-input\"\n                            id=\"isEditReparedByUsSwitch\" name=\"isEditReparedByUsSwitch\" checked\n                            (ngModelChange)=\"onSwitchChange($event)\" />\n                        <label class=\"custom-control-label\" for=\"isEditReparedByUsSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <!-- <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Repaired By Us</p>\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"isReparedByUsSwitch\"\n                            name=\"isReparedByUsSwitch\" checked (click)=\"onSwitchChange($event)\" />\n                        <label class=\"custom-control-label\" for=\"isReparedByUsSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div> -->\n\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.repairedByUs\">\n                        <label for=\"editedFaultCategory\">Fault Category</label>\n\n                        <select class=\"form-control\" [(ngModel)]=\"editRepairDevice.rmaFaultCategory\"\n                            name=\"editedFaultCategory\">\n                            <option disabled [ngValue]=\"null\">-/-</option>\n                            <option [ngValue]=\"category.title\"\n                                *ngFor=\"let category of rmaFaultSelectionService.mainGroups\">{{category.title}}\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.repairedByUs\">\n                        <label for=\"editedFaultSubCategory\">Fault Sub-Category</label>\n\n                        <select class=\"form-control\" [(ngModel)]=\"editRepairDevice.rmaFaultSubCategory\"\n                            name=\"editedFaultSubCategory\">\n                            <option [ngValue]=\"subcategory.title\"\n                                *ngFor=\"let subcategory of filterSubById(editRepairDevice.rmaFaultCategory)\">\n                                {{subcategory.title}}\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.repairedByUs\">\n                        <label for=\"editedRMAFaultDescription\">RMA Fault Description</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.rmaFaultDescription\" class=\"form-control\"\n                            name=\"editedRMAFaultDescription\" placeholder=\"Enter description for RMA\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Serial Correct?</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.serialCorrect\" class=\"custom-control-input\"\n                            name=\"isEditedSerialCorrectSwitch\" id=\"isEditedSerialCorrectSwitch\" checked\n                            (click)=\"onSwitchChange($event)\" />\n                        <label class=\"custom-control-label\" for=\"isEditedSerialCorrectSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.serialCorrect\">\n                        <label for=\"editedCorrectSerialNumber\">Correct Serial Number</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"editRepairDevice.correctSerialNo\"\n                            name=\"editedCorrectSerialNumber\" placeholder=\"Enter Correct Serial Number\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Asset Correct?</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.assetCorrect\" class=\"custom-control-input\"\n                            name=\"isEditedAssetCorrectSwitch\" id=\"isEditedAssetCorrectSwitch\" checked\n                            (click)=\"onSwitchChange($event)\" />\n                        <label class=\"custom-control-label\" for=\"isEditedAssetCorrectSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.assetCorrect\">\n                        <label for=\"correctEditedAssetCode\">Correct Asset Code</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.correctAssetCode\" class=\"form-control\"\n                            name=\"correctEditedAssetCode\" placeholder=\"Enter Correct Asset Code\" />\n                    </div>\n                    <!-- NEW CHANGES -->\n\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Is Replacement Given?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.replacement\" class=\"custom-control-input\"\n                            id=\"isEditedReplacementSwitch\" name=\"isEditedReplacementSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isEditedReplacementSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\"\n                        *ngIf=\"editRepairDevice.replacement\">\n                        <p class=\"mb-50\">Is Replacement by Zebra?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.replacementByZebra\"\n                            class=\"custom-control-input\" id=\"isEditedReplacementZebraSwitch\"\n                            name=\"isEditedReplacementZebraSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isEditedReplacementZebraSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"editRepairDevice.replacementByZebra\">\n                        <label for=\"EditedreplacementSerial\">Replacement Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.replacementSerialNo\" class=\"form-control\"\n                            name=\"EditedreplacementSerial\" placeholder=\"Enter Replacement Serial Number\" />\n                    </div>\n\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\"\n                        *ngIf=\"editRepairDevice.replacement\">\n                        <p class=\"mb-50\">Is Replacement by MGC?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.replacementByUs\"\n                            class=\"custom-control-input\" id=\"isEditedReplacementByUsSwitch\"\n                            name=\"isEditedReplacementByUsSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isEditedReplacementByUsSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"editRepairDevice.replacementByUs\">\n                        <label for=\"EditedreplacementSerial\">Replacement Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.replacementSerialNoByUs\" class=\"form-control\"\n                            name=\"EditedreplacementSerial\" placeholder=\"Enter Replacement Serial Number\" />\n                    </div>\n\n                    <!-- END NEW CHANGES -->\n                    <!-- <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Is Replacement?</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"editRepairDevice.replacement\" class=\"custom-control-input\"\n                            id=\"isEditedReplacementSwitch\" name=\"isEditedReplacementSwitch\"\n                            (visibleChange)=\"onSwitchChange($event)\" />\n                        <label class=\"custom-control-label\" for=\"isEditedReplacementSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"editRepairDevice.replacement\">\n                        <label for=\"editedReplacementSerial\">Replacement Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.replacementSerialNo\" class=\"form-control\"\n                            name=\"editedReplacementSerial\" placeholder=\"Enter Replacement Serial Number\" />\n                    </div> -->\n                    <div class=\"form-group\" *ngIf=\"!editRepairDevice.repairedByUs\">\n                        <label for=\"editedRmaNumber\">RMA Number</label>\n                        <input type=\"text\" [(ngModel)]=\"editRepairDevice.rmaNumber\" class=\"form-control\"\n                            name=\"editedRmaNumber\" placeholder=\"Enter RMA Number\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Customer Note</p> -->\n                        <label for=\"editedCustomerNotes\">Customer Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"editRepairDevice.customerNote\"\n                                name=\"editedCustomerNotes\" rows=\"3\" placeholder=\"Customer notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Accessory Note</p> -->\n                        <label for=\"editedAccessoryNotes\">Accessory Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"editRepairDevice.accessoryNote\"\n                                name=\"editedAccessoryNotes\" rows=\"3\" placeholder=\"Accessory notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Additional Note</p> -->\n                        <label for=\"editedAdditionalNotes\">Additional Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"editRepairDevice.extraNotes\"\n                                name=\"editedAdditionalNotes\" rows=\"3\"\n                                placeholder=\"Additional notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit()\" rippleEffect>Update</button>\n                    <button type=\"reset\" class=\"btn btn-outline-secondary\" (click)=\"toggleSidebar('edit-fault-sidebar')\"\n                        rippleEffect>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Modal to add new user Ends-->\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ColumnMode, DatatableComponent, SelectionType } from '@swimlane/ngx-datatable';\n\nimport { CoreConfigService } from '@core/services/config.service';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { UserListService } from 'app/main/apps/user/user-list/user-list.service';\nimport { FaultListService, RepairCaseStatus, RepairDevice, ReplacementCaseStatusByUs, ReplacementCaseStatusByZebra } from './fault-list.service';\nimport { FileUploader } from 'ng2-file-upload';\nimport { NgbDateStruct, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-fault-list',\n  templateUrl: './fault-list.component.html',\n  styleUrls: ['./fault-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FaultListComponent implements OnInit {\n  // Public\n  private _unsubscribeAll: Subject<any>;\n  private tempData = [];\n  public sidebarToggleRef = false;\n\n  // public\n  public contentHeader: object;\n  public rows: any;\n  public selected = [];\n  public kitchenSinkRows: any;\n  public basicSelectedOption: number = 25;\n  public ColumnMode = ColumnMode;\n  public expanded = {};\n  public editingName = {};\n  public editingStatus = {};\n  public editingAge = {};\n  public editingSalary = {};\n  public chkBoxSelected = [];\n  public SelectionType = SelectionType;\n  public exportCSVData;\n  public repairDevice: RepairDevice = new RepairDevice;\n  public repairCaseStatus: RepairCaseStatus = new RepairCaseStatus;\n  public replacementByUsCaseStatus: ReplacementCaseStatusByUs = new ReplacementCaseStatusByUs;\n  public replacementByZebraCaseStatus: ReplacementCaseStatusByZebra = new ReplacementCaseStatusByZebra;\n  public emailDPdata: NgbDateStruct;\n  public collectionDPdata: NgbDateStruct;\n\n  public editCustomerItem = {\n    id: 0,\n    customerName: '',\n    customerEmail: '',\n    companyName: '',\n    companyCode: '',\n    deliveryAddressLine1: '',\n    deliveryAddressLine2: '',\n    deliveryAddressLine3: ''\n  };\n  public loading = false;\n\n  // public updaterModalRMANumber = {\n  //   rmaNumber: ''\n  // };\n  public rmaDetailUpdaterModel = { rmaNumber: '', emailAddress: '' };\n\n  public replacementDetailUpdaterModel = { id: '', emailAddress: '' };\n\n  // public faultListItem = {\n  //   id: 0,\n  //   emailDate: '',\n  //   collectionDate: '',\n  //   deviceModel: '',\n  //   customer: '',\n  //   serirepairDevice\n  //   assetCode: '',\n  //   faultDescription: '',\n  //   rmaStatus: '',\n  //   correctSerialNo: '',\n  //   correctAssetCode: '',\n  //   rmaFaultCategory: '',\n  //   rmaFaultSubCategory: '',\n  //   rmaFaultDescription: '',\n  //   repairStatus: '',\n  //   replacementSerialNo: '',\n  //   createdDate: '',\n  //   deliveryDate: '',\n  //   rmaNumber: '',\n  //   lastUpdated: '',\n  //   updatedBy: '',\n  //   createdBy: '',\n  //   isInContract: '',\n  //   customerNote: '',\n  //   accessoryNote: '',\n  //   extraNotes: '',\n  //   deliveryNoteId: '',\n  //   replacement: false,\n  //   assetCorrect: true,\n  //   serialCorrect: true,\n  //   repairedByUs: true,\n  //   replacementByUs: false,\n  // };\n\n  // public contentHeader: object;\n  public isReload = false;\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  @ViewChild('tableRowDetails') tableRowDetails: any;\n\n  public convertedDate: NgbDateStruct;\n\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Inline editing Name\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateName(event, cell, rowIndex) {\n    this.editingName[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  onFileInput(event) {\n    console.log('File Upload : ', event);\n\n    const file: File = event.target.files[0];\n\n    if (file) {\n\n      // this.fileName = file.name;\n\n      const formData = new FormData();\n\n      formData.append(\"file\", file);\n\n\n\n      this._datatablesService\n        .importCSVFile(formData)\n        .pipe()\n        .subscribe(\n          data => {\n            console.log(data);\n\n          },\n          error => {\n\n            console.log(error)\n\n          }\n        );\n    }\n  }\n\n  // modal Open Form\n  modalOpenForm(modalForm) {\n    this.rmaDetailUpdaterModel.rmaNumber = '';\n    this.modalService.open(modalForm);\n  }\n\n  updateorAddRMANumber() {\n    console.log(\"Modal RMA Number : \" + this.rmaDetailUpdaterModel.rmaNumber);\n    if (this.rmaDetailUpdaterModel.rmaNumber != null || this.rmaDetailUpdaterModel.rmaNumber.length > 0) {\n\n      if (this.rmaDetailUpdaterModel.emailAddress !== null || this.rmaDetailUpdaterModel.emailAddress.length > 2) {\n        console.log(\"Modal Email address : \" + this.rmaDetailUpdaterModel.emailAddress);\n        this.updateRMADetails();\n\n\n      } else {\n\n      }\n    }\n  }\n\n  public updateRMADetails() {\n    this.loading = true;\n    this._datatablesService\n      .getRMALookup(this.rmaDetailUpdaterModel.rmaNumber, this.rmaDetailUpdaterModel.emailAddress)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data.actions[0].returnValue);\n\n          this.loading = false;\n          this.modalService.dismissAll();\n\n        },\n        error => {\n          this.loading = false;\n          console.log(error)\n        }\n      );\n  }\n\n  public getUpdatedRMAStatus(rmaNumber: string, emailAddress: string) {\n\n    this._datatablesService\n      .getRMALookup(rmaNumber, emailAddress)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n\n\n\n        },\n        error => {\n\n          console.log(error)\n        }\n      );\n  }\n\n  public getUpdatedContractStatus(id: string) {\n\n    this._datatablesService\n      .updateContractStatus(id)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n\n\n\n        },\n        error => {\n\n          console.log(error)\n        }\n      );\n  }\n\n\n\n  public updateReplacementSerialByUs(repairStatus: any) {\n\n    this.replacementByUsCaseStatus.repairStatus = repairStatus;\n\n    this.loading = true;\n    this._datatablesService\n      .updateFaultCaseReplacementByUsStatus(this.replacementByUsCaseStatus)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n          this.loading = false;\n          this.modalService.dismissAll();\n\n        },\n        error => {\n          this.loading = false;\n          console.log(error)\n        }\n      );\n  }\n\n  public updateReplacementSerialByZebra(repairStatus: any) {\n\n    this.replacementByZebraCaseStatus.repairStatus = repairStatus;\n\n    this.loading = true;\n    this._datatablesService\n      .updateFaultCaseReplacementByZebraStatus(this.replacementByZebraCaseStatus)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n          this.loading = false;\n          this.modalService.dismissAll();\n\n        },\n        error => {\n          this.loading = false;\n          console.log(error)\n        }\n      );\n  }\n\n  modalOpenReplacementByUsForm(modalForm, id: any) {\n    this.replacementByUsCaseStatus.id = id;\n    this.modalService.open(modalForm);\n  }\n\n  modalOpenReplacementByZebraForm(modalForm, id: any) {\n    this.replacementByZebraCaseStatus.id = id;\n    this.modalService.open(modalForm);\n  }\n\n\n  updateFaultCaseStatus(id: any, status: string) {\n\n    this.repairCaseStatus.id = id;\n    this.repairCaseStatus.repairStatus = status;\n\n    this._datatablesService\n      .updateFaultCaseStatus(this.repairCaseStatus)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n          // this.toggleSidebar('edit-fault-sidebar');\n\n          // location.reload();\n          // this._unsubscribeAll = new Subject();\n\n\n        },\n        error => {\n          console.log(error)\n\n\n          // this.toggleSidebar('edit-fault-sidebar');\n        }\n      );\n  }\n\n  emittedEvents($event) {\n    console.log('Action : ', $event);\n  }\n\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n\n  toggleEditSidebar(name, row: any): void {\n\n    // this.repairDevice = row;\n\n    console.log(row)\n    this.repairDevice.id = row.id;\n    this.repairDevice.emailDate = row.emailDate;\n    this.repairDevice.collectionDate = row.collectionDate;\n    this.repairDevice.deviceModel = row.deviceModel;\n    this.repairDevice.customer = row.customer;\n    this.repairDevice.serialNumber = row.serialNumber;\n    this.repairDevice.assetCode = row.assetCode;\n    this.repairDevice.faultDescription = row.faultDescription;\n    this.repairDevice.rmaStatus = row.rmaStatus;\n    this.repairDevice.correctSerialNo = row.correctSerialNo;\n    this.repairDevice.correctAssetCode = row.correctAssetCode;\n    this.repairDevice.rmaFaultCategory = row.rmaFaultCategory;\n    this.repairDevice.rmaFaultSubCategory = row.rmaFaultSubCategory;\n    this.repairDevice.rmaFaultDescription = row.rmaFaultDescription;\n    this.repairDevice.repairStatus = row.repairStatus;\n    this.repairDevice.replacementSerialNo = row.replacementSerialNo;\n    this.repairDevice.createdDate = row.createdDate;\n    this.repairDevice.deliveryDate = row.deliveryDate;\n    this.repairDevice.rmaNumber = row.rmaNumber;\n    this.repairDevice.lastUpdated = row.lastUpdated;\n    this.repairDevice.updatedBy = row.updatedBy;\n    this.repairDevice.createdBy = row.createdBy;\n    this.repairDevice.isInContract = row.isInContract;\n    this.repairDevice.customerNote = row.customerNote;\n    this.repairDevice.accessoryNote = row.accessoryNote;\n    this.repairDevice.extraNotes = row.extraNotes;\n    this.repairDevice.deliveryNoteId = row.deliveryNoteId;\n    this.repairDevice.replacement = row.replacement;\n    this.repairDevice.assetCorrect = row.assetCorrect;\n    this.repairDevice.serialCorrect = row.serialCorrect;\n    this.repairDevice.repairedByUs = row.repairedByUs;\n    this.repairDevice.replacementByUs = row.replacementByUs;\n\n    this.emailDPdata = this.toDateStructure(row.emailDate);\n    this.collectionDPdata = this.toDateStructure(row.collectionDate);\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n  /**\n   * Reload\n   *\n   * @param $event\n   */\n  reload($event) {\n    // This is fake API call example for reload\n    if ($event === 'reload') {\n      console.log($event, ': Start');\n      this.isReload = true;\n      setTimeout(() => {\n        this.isReload = false;\n        console.log($event, ': End');\n      }, 5000);\n    }\n  }\n\n  /**\n   * Inline editing Age\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateAge(event, cell, rowIndex) {\n    this.editingAge[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Inline editing Salary\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateSalary(event, cell, rowIndex) {\n    this.editingSalary[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Inline editing Status\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateStatus(event, cell, rowIndex) {\n    this.editingStatus[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Search (filter)\n   *\n   * @param event\n   */\n  filterUpdate(event) {\n    const val = event.target.value;\n\n    console.log(\"|-\" + val + \"-|\");\n\n    if (val == \"\") {\n      console.log(\"Val empty\");\n\n      this.flag = true;\n      this.onTimeOut();\n    } else {\n      this.flag = false;\n\n    }\n\n    // filter our data\n    const temp = this.tempData.filter(function (d) {\n      if (d.rmaNumber != null && d.assetCode != null && d.repairStatus != null && d.deviceModel != null) {\n        return (d.serialNumber.toLowerCase().indexOf(val) !== -1 || !val) || (d.deviceModel.indexOf(val) !== -1 || !val) || (d.assetCode.indexOf(val) !== -1 || !val) || (d.rmaNumber.indexOf(val) !== -1 || !val) || (d.repairStatus.indexOf(val) !== -1 || !val);\n      } else if (d.assetCode != null && d.repairStatus != null && d.deviceModel != null) {\n        return (d.serialNumber.toLowerCase().indexOf(val) !== -1 || !val) || (d.deviceModel.indexOf(val) !== -1 || !val) || (d.assetCode.indexOf(val) !== -1 || !val) || (d.repairStatus.indexOf(val) !== -1 || !val);\n      } else if (d.assetCode != null && d.deviceModel != null) {\n        return (d.serialNumber.toLowerCase().indexOf(val) !== -1 || !val) || (d.deviceModel.indexOf(val) !== -1 || !val) || (d.assetCode.indexOf(val) !== -1 || !val);\n      }\n\n    }\n    );\n\n    // const temp2 = this.tempData.filter(function (d) {\n    //   return d.repairStatus.indexOf(val) !== -1 || !val;\n    // });\n\n    // const temp3 = this.tempData.filter(function (d) {\n    //   return d.rmaNumber.includes(val) !== -1 || !val;\n    // });\n\n    // const temp4 = this.tempData.filter(function (d) {\n    //   return d.assetCode.toLowerCase().indexOf(val) !== -1 || !val;\n    // });\n\n    // update the rows\n    this.kitchenSinkRows = temp;\n    // this.kitchenSinkRows.append = temp2;\n    // this.kitchenSinkRows.append = temp3;\n    // this.kitchenSinkRows.append = temp4;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  toDateStructure(dateAsString: string): NgbDateStruct {\n\n    // let convertedDate: NgbDateStruct\n    console.log(dateAsString);\n\n    if (!dateAsString) {\n      this.convertedDate = null;\n      console.log(\"null\");\n    }\n    else {\n      const parts = dateAsString.split('-');\n      let newValue = {\n        year: +parts[0],\n        month: +parts[1],\n        day: +parts[2],\n      };\n\n      console.log(\"new Value : \" + newValue.year);\n\n      this.convertedDate = { year: newValue.year, month: newValue.month, day: newValue.day };\n      // { year: newValue.year, month: newValue.month, day: newValue.day };\n      // if (this.emailDPdata != newValue) {\n      // this.emailDPdata.year = newValue.year;\n      // this.emailDPdata.month = newValue.month;\n      // this.emailDPdata.day = newValue.day;\n      console.log(\"email Value : \" + this.convertedDate.year);\n      // }\n    }\n    return this.convertedDate;\n  }\n\n  /**\n   * Row Details Toggle\n   *\n   * @param row\n   */\n  rowDetailsToggleExpand(row) {\n    this.tableRowDetails.rowDetail.toggleExpandRow(row);\n  }\n\n  /**\n   * For ref only, log selected values\n   *\n   * @param selected\n   */\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    if (this.selected.length > 0) {\n      this.flag = false;\n    } else {\n      this.flag = true;\n      this.onTimeOut();\n    }\n  }\n\n  exportForCSV() {\n\n    let repairDevices: RepairDevice[];\n    repairDevices = this.selected;\n\n    console.log(\"After Click on Export\" + repairDevices[0].id);\n\n\n    this._datatablesService\n      .getCSVFileForRMA(repairDevices)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n\n  /**\n   * For ref only, log activate events\n   *\n   * @param selected\n   */\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  /**\n   * Custom Chkbox On Select\n   *\n   * @param { selected }\n   */\n  customChkboxOnSelect({ selected }) {\n    this.chkBoxSelected.splice(0, this.chkBoxSelected.length);\n    this.chkBoxSelected.push(...selected);\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {DatatablesService} _datatablesService\n   * @param {CoreTranslationService} _coreTranslationService\n   */\n  constructor(private _datatablesService: FaultListService, private _coreSidebarService: CoreSidebarService, private modalService: NgbModal) {\n    this._unsubscribeAll = new Subject();\n    // this._coreTranslationService.translate(english, french, german, portuguese);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this._datatablesService.onDatatablessChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.rows = response;\n      this.tempData = this.rows;\n      this.kitchenSinkRows = this.rows;\n      this.exportCSVData = this.rows;\n    });\n    this.flag = true;\n    this.onTimeOut();\n  }\n\n  private flag: boolean;\n\n\n  ngOnDestroy() {\n    this.flag = false;\n  }\n\n  onTimeOut() {\n\n    this._datatablesService.getDataTableRows();\n\n    setTimeout(() => {\n      if (this.flag) {\n        this.onTimeOut();\n      }\n    }, 10000);\n  }\n}\n\n","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n\n        <section id=\"ngx-datatable-kitchen-sink\">\n            <core-card (events)=\"emittedEvents($event)\" [actions]=\"[ 'expand', 'reload']\">\n                <h4 class=\"card-title\">Fault Cases</h4>\n                <div class=\"row\">\n                    <div class=\"col-12 mb-50\">\n\n\n                        <button class=\"btn btn-primary ml-1\" rippleEffect (click)=\"toggleSidebar('new-user-sidebar')\">\n                            <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">New\n                                Case</span>\n                        </button>\n\n\n                        <a routerLink=\"/repair/fault-case/fault-bulk\" class=\"font-weight-bold\">\n                            <button class=\"btn btn-primary ml-1\" rippleEffect>\n                                <i data-feather=\"upload\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                    class=\"d-none d-sm-inline-block\">New Bulk\n                                    Cases</span>\n                            </button>\n                        </a>\n\n                        <button class=\"btn btn-primary ml-1\" rippleEffect (click)=\"modalOpenForm(modalForm)\">\n                            <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Update RMA</span>\n                        </button>\n\n                        <!-- <button class=\"btn btn-danger ml-1\" rippleEffect (click)=\"toggleSidebar('new-user-sidebar')\">\n                            <i data-feather=\"trash\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Delete</span>\n                        </button> -->\n\n                        <!-- <a ng2FileSelect [uploader]=\"uploader\" class=\"btn btn-primary float-right mr-1\" rippleEffect>\n                            <i data-feather=\"download\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Import\n                                CSV</span>\n                        </a> -->\n                        <button type=\"button\" class=\"btn btn-primary float-right mr-1\" rippleEffect\n                            (click)=\"fileInput.click()\">\n                            <i data-feather=\"upload\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Import CSV</span>\n                            <input #fileInput type=\"file\" (change)=\"onFileInput($event)\" style=\"display:none;\" />\n                        </button>\n                        <!-- <input class=\"custom-file-input float-right mr-1\" rippleEffect type=\"file\" ng2FileSelect\n                            [uploader]=\"uploader\" id=\"file-upload-single\" /> -->\n\n                        <!-- <div class=\"custom-file\">\n                            <input type=\"button\" class=\"custom-file-input\" type=\"file\" ng2FileSelect\n                                [uploader]=\"uploader\" id=\"file-upload-single\" />\n                            <i data-feather=\"upload\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">\n                                Import CSV</span>\n                        </div> -->\n\n                        <button type=\"button\" class=\"btn btn-primary float-right mr-1\" rippleEffect\n                            (click)=\"exportForCSV()\">\n                            <i data-feather=\"download\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Export [ RMA ]</span>\n                        </button>\n\n                        <!-- <a csvLink [data]=\"exportCSVData\" class=\"btn btn-primary float-right mr-1\" rippleEffect>\n                            <i data-feather=\"download\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">Export\n                                CSV</span>\n                        </a> -->\n                    </div>\n                    <div class=\"col-md-6 col-12\">\n                        <div class=\"d-flex justify-content-between align-items-center m-1\">\n                            <label class=\"d-flex align-items-center\">Show\n                                <select class=\"form-control mx-25\" [(ngModel)]=\"basicSelectedOption\">\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                                entries</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-12 d-flex justify-content-md-end\">\n                        <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pl-1 pl-md-0 pb-md-0\">\n                            <label class=\"d-flex align-items-center\"><input type=\"search\" placeholder=\"Search\"\n                                    class=\"form-control ml-25\" (keyup)=\"filterUpdate($event)\"\n                                    (search)=\"filterUpdate($event)\" /></label>\n                        </div>\n                    </div>\n                </div>\n                <ngx-datatable [rows]=\"kitchenSinkRows\" [rowHeight]=\"100\" class=\"bootstrap core-bootstrap\" [limit]=\"10\"\n                    [columnMode]=\"ColumnMode.force\" [headerHeight]=\"40\" [footerHeight]=\"50\" [scrollbarH]=\"true\"\n                    [selectionType]=\"SelectionType.checkbox\" [limit]=\"basicSelectedOption\"\n                    (activate)=\"onActivate($event)\" (select)=\"onSelect($event)\">\n                    <ngx-datatable-column [width]=\"50\" [sortable]=\"false\" [canAutoResize]=\"false\" [draggable]=\"false\"\n                        [resizeable]=\"false\">\n                        <ng-template ngx-datatable-header-template let-value=\"value\"\n                            let-allRowsSelected=\"allRowsSelected\" let-selectFn=\"selectFn\">\n                            <div class=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"allRowsSelected\"\n                                    (change)=\"selectFn(!allRowsSelected)\" id=\"headerChkbxRef\" />\n                                <label class=\"custom-control-label\" for=\"headerChkbxRef\"></label>\n                            </div>\n                        </ng-template>\n                        <ng-template let-row=\"row\" ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                            let-isSelected=\"isSelected\" let-onCheckboxChangeFn=\"onCheckboxChangeFn\">\n                            <div class=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"isSelected\"\n                                    (change)=\"onCheckboxChangeFn($event)\" id=\"rowChkbxRef{{ row.id }}\" />\n                                <label class=\"custom-control-label\" for=\"rowChkbxRef{{ row.id }}\"></label>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Device Details\" prop=\"full_name\" [width]=\"150\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\">\n                                    <!-- <p class=\"font-medium-1 font-weight-bold line-height-1 mb-25\">\n                                        {{ row.deviceModel}}\n                                    </p> -->\n                                    <div class=\"badge badge-light-warning mb-25\">\n                                        <span class=\"text font-small-5 \">{{ row.deviceModel}}</span>\n                                    </div>\n                                    <!-- <p class=\"font-medium-2 font-weight-bold line-height-1 mb-25\">\n                                        {{ row.serialNumber }}\n                                    </p> -->\n                                    <br />\n                                    <div class=\"badge badge-light-secondary mb-25 mr-25\">\n                                        <span class=\"text font-small-5\">{{ row.serialNumber }} </span>\n                                    </div>\n                                    <!-- <div class=\"badge badge-light-secondary mb-25 mr-25\" *ngIf=\"row.replacementByUs\">\n                                        <span class=\"text font-small-5\">{{ row.replacementSerialNoByUs }} </span>\n                                    </div>\n                                    <div class=\"badge badge-light-secondary mb-25 mr-25\" *ngIf=\"row.replacementByZebra\">\n                                        <span class=\"text font-small-5\">{{ row.replacementSerialNo }} </span>\n                                    </div> -->\n                                    <br />\n                                    <div class=\"badge badge-light-secondary mb-25 mr-25\">\n                                        <!-- *ngIf=\" row.deviceModel.length> 0\" -->\n                                        <span class=\"text font-small-5\">{{ row.assetCode }} </span>\n                                    </div>\n\n                                    <!-- <div class=\"badge badge-glow \" [ngClass]=\"{\n                                                      'badge-light-success': row.isInContract == 'true',\n                                                      'badge-light-danger': row.isInContract == 'false',\n                                                      'badge-light-danger': row.isInContract == null\n                                                    }\">\n                                        {{ row.isInContract == \"true\" ? 'Active' : row.isInContract == \"false\" ? 'Billable' : 'Pending' }}\n                                    </div> -->\n\n                                    <!-- <div class=\"badge \" [ngClass]=\"{'badge-light-danger': row.isInContract === '0',\n                                    'badge-light-success': row.isInContract === '2',\n                                    'badge-light-success': row.isInContract === '1',\n                                    'badge-light-danger': row.isInContract === '3',\n                                    'badge-light-danger': row.isInContract === null}\">\n\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 1\">Contract</span>\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 2\">Warranty</span>\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 0\">Billable</span>\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 3\">Unavailable</span>\n                                    </div> -->\n                                    <br />\n                                    <div class=\"badge badge-light-danger\" *ngIf=\"row.isInContract == 0\">\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 0\">Billable</span>\n                                    </div>\n                                    <div class=\"badge badge-light-success\" *ngIf=\"row.isInContract == 1\">\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 1\">Contract</span>\n                                    </div>\n                                    <div class=\"badge badge-light-success\" *ngIf=\"row.isInContract == 2\">\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 2\">Warranty</span>\n                                    </div>\n                                    <div class=\"badge badge-light-secondary\" *ngIf=\"row.isInContract == null\">\n                                        <span class=\"text font-small-5\" *ngIf=\"row.isInContract == 3\">Unavailable</span>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Customer\" prop=\"email\" [width]=\"150\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\">\n                                    <p class=\"font-medium-1 font-weight-bold line-height-1 mb-25\">\n                                        Belongs to: {{ row.customer }}\n                                    </p>\n                                    <span class=\"text font-small-10\">Email Date: {{ row.emailDate }}</span>\n                                    <br>\n                                    <span class=\"text font-small-10\">Collection Date: {{ row.collectionDate }}</span>\n                                    <br>\n                                    <span class=\"text font-small-5 text-wrap\"\n                                        *ngIf=\"row.rmaFaultSubCategory!=null && row.rmaFaultSubCategory.length>0\">\n                                        {{ row.rmaFaultSubCategory }}</span>\n                                    <span class=\"text font-small-5 text-wrap\"\n                                        *ngIf=\"row.rmaFaultCategory!=null && row.rmaFaultCategory.length==0\">\n                                        {{ row.faultDescription }}</span>\n\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"RMA\" prop=\"start_date\" [width]=\"120\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\" *ngIf=\"!row.repairedByUs\">\n                                    <p class=\"font-medium-1 font-weight-bold line-height-1 mb-25\">\n                                        {{ row.rmaNumber }}\n                                    </p>\n\n                                    <!-- <div class=\"badge badge-success\" *ngIf=\"row.rmaStatus.\">\n                                        {{ row.rmaStatus }}\n                                    </div> -->\n\n\n                                    <div *ngIf=\"!(row.rmaStatus == null)\">\n\n\n                                        <div class=\"badge badge-light-success\" *ngIf=\"row.rmaStatus == 'RMA Closed'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n                                        <div class=\"badge badge-light-primary\"\n                                            *ngIf=\"row.rmaStatus == 'Repair Completed'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n\n                                        <div class=\"badge badge-light-primary\"\n                                            *ngIf=\"row.rmaStatus == 'Repair Started'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n                                        <div class=\"badge badge-light-danger\" *ngIf=\"row.rmaStatus == 'Open'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n                                        <div class=\"badge badge-light-danger\" *ngIf=\"row.rmaStatus == 'Pending'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n                                        <div class=\"badge badge-light-warning\" *ngIf=\"row.rmaStatus == 'Shipping'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n                                        <div class=\"badge badge-light-warning\" *ngIf=\"row.rmaStatus == 'Received'\">\n                                            <span class=\"font-small-7\">\n                                                {{ row.rmaStatus }}\n                                            </span>\n                                        </div>\n\n                                    </div>\n\n                                </div>\n\n\n\n                                <div class=\"cell-line-height\"\n                                    *ngIf=\"row.repairedByUs && (row.rmaFaultCategory!=null  )\">\n                                    <!-- row.repairedByUs && (row.rmaFaultCategory!=null ) &&  -->\n\n                                    <div class=\"badge badge-glow badge-light-warning\" *ngIf=\"!row.notRepaired\">\n                                        Repaired by us\n                                    </div>\n\n                                    <div *ngIf=\"row.notRepaired\" class=\"badge badge-glow badge-light-danger\">\n                                        Not Repaired\n                                    </div>\n\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Status\" prop=\"status\" [width]=\"120\">\n                        <ng-template let-row=\"row\" let-status=\"value\" ngx-datatable-cell-template>\n                            <div *ngIf=\"!(row.repairStatus == null)\">\n\n                                <div class=\"badge badge-light-success\" *ngIf=\"row.repairStatus == 'Ready for Delivery'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-success\"\n                                    *ngIf=\"row.repairStatus == 'Delivery note Generated'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n\n                                    </span>\n\n\n                                </div>\n\n                                <div class=\"badge badge-light-success\"\n                                    *ngIf=\"row.repairStatus == 'Delivery note Generated'\">\n\n\n                                </div>\n\n                                <div class=\"badge badge-light-success\" *ngIf=\"row.repairStatus == 'Delivered'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-warning\" *ngIf=\"row.repairStatus == 'Repaired'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-warning\" *ngIf=\"row.repairStatus == 'Replacement by MGC'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-warning\"\n                                    *ngIf=\"row.repairStatus == 'Replacement by Zebra'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-warning\" *ngIf=\"row.repairStatus == 'Quote Sent'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-success\" *ngIf=\"row.repairStatus == 'Returned'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n\n                                <div class=\"badge badge-light-warning\" *ngIf=\"row.repairStatus == 'On Hold'\">\n                                    <span class=\"font-small-7\">\n                                        {{ row.repairStatus }}\n                                    </span>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Delivery\" prop=\"salary\" [width]=\"120\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\"\n                                    *ngIf=\"(row.repairStatus == 'Delivery note Generated')||(row.repairStatus == 'Delivered')\">\n\n                                    <span class=\"font-small-7\">\n\n                                        <a routerLink=\"/repair/delivery-note/dn-preview/{{ row.deliveryNoteId }}\"\n                                            class=\"font-weight-bold\">#{{ row.deliveryNoteId }}</a>\n                                    </span>\n\n                                </div>\n\n                            </div>\n\n                            <div class=\"d-flex align-items-center\">\n\n\n                                <div class=\"cell-line-height\" *ngIf=\"!(row.deliveryDate== null)\">\n                                    <p class=\"font-small-5 font-weight-bold line-height-1 mb-25\">\n                                        {{ row.deliveryDate }}\n                                    </p>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Actions\" [width]=\"120\" [sortable]=\"false\">\n                        <ng-template let-row=\"row\" ngx-datatable-cell-template>\n\n\n\n                            <div class=\"avatar avatar-status bg-light-warning\">\n                                <ng-template #tipEditContent>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Edit\" placement=\"top\"\n                                    [ngbPopover]=\"tipEditContent\" triggers=\"mouseenter:mouseleave\" container=\"body\"\n                                    (click)=\"toggleEditSidebar('edit-fault-sidebar',row)\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-edit-2\"></i></span>\n                            </div>\n\n                            <!-- <div class=\"avatar avatar-status bg-light-primary\"\n                                *ngIf=\"((row.repairStatus !== 'Quote Sent') && (row.isInContract== '0') && (row.repairStatus !== 'Closed') && (row.repairStatus !== 'Returned')) \">\n                                \n                                <ng-template #tipQuoteSentContent>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Quote Sent\" placement=\"top\"\n                                    [ngbPopover]=\"tipQuoteSentContent\" triggers=\"mouseenter:mouseleave\"\n                                    container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-send\"></i></span>\n                            </div> -->\n\n                            <!-- <div class=\"avatar avatar-status bg-light-secondary\"\n                                *ngIf=\"((row.rmaStatus=='RMA Closed') && (row.repairStatus === 'Repaired') || ((row.repairStatus !== 'Returned'))) \">\n                                \n                                <ng-template #tipCloseCaseContent>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Close Case\" placement=\"top\"\n                                    [ngbPopover]=\"tipCloseCaseContent\" triggers=\"mouseenter:mouseleave\"\n                                    container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-delete\"></i></span>\n                            </div> -->\n\n                            <!-- <div class=\"avatar avatar-status bg-light-primary\"\n                                *ngIf=\"(((row.rmaStatus=='RMA Closed') && ((row.repairStatus === 'Repaired')||(row.repairStatus === 'Replaced'))) || ((row.repairStatus !== 'Returned'))) \">\n                                <ng-template #tipRFDContent>\n                                    \n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Ready for Delivery\" placement=\"top\"\n                                    [ngbPopover]=\"tipRFDContent\" container=\"body\" triggers=\"mouseenter:mouseleave\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-check-circle\"></i></span>\n                            </div> -->\n\n                            <div class=\"avatar avatar-status bg-light-primary\" ngbDropdown container=\"body\">\n                                <!-- <button ngbDropdownToggle type=\"button\" class=\"btn icon-btn btn-sm hide-arrow\"\n                                    rippleEffect>\n                                    <span [data-feather]=\"'more-vertical'\" [class]=\"'cursor-pointer'\"></span>\n                                </button> -->\n\n\n                                <span class=\"avatar-content hide-arrow\" container=\"body\" ngbDropdownToggle>\n                                    <i class=\"feather avatar-icon font-medium-1 icon-more-vertical\"></i>\n                                </span>\n                                <div ngbDropdownMenu>\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"updateFaultCaseStatus(row.id,'Ready for Delivery')\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Ready for Delivery\n                                    </button>\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"updateFaultCaseStatus(row.id,'Repaired')\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Repaired\n                                    </button>\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"modalOpenReplacementByUsForm(modalReplacementByUsForm, row.id)\"\n                                        ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Replacement By MGC\n                                    </button>\n\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"modalOpenReplacementByZebraForm(modalReplacementByZebraForm, row.id)\"\n                                        ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Replacement By Zebra\n                                    </button>\n                                    <button (click)=\"getUpdatedContractStatus(this.row.id)\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Check Contract Status\n                                    </button>\n                                    <button *ngIf=\"!(row.rmaNumber== null)\"\n                                        (click)=\"getUpdatedRMAStatus(this.row.rmaNumber, this.row.rmaEmailAddress)\"\n                                        ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Check RMA Status\n                                    </button>\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"updateFaultCaseStatus(row.id,'Returned')\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Returned (Only Unrepaired)\n                                    </button>\n                                    <button\n                                        *ngIf=\"!(row.repairStatus == 'Delivery note Generated' || row.repairStatus == 'Delivered')\"\n                                        (click)=\"updateFaultCaseStatus(row.id,'Quote Sent')\" ngbDropdownItem>\n                                        <span [data-feather]=\"'send'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Quote Sent\n                                    </button>\n\n                                    <!-- <button  *ngIf=\"(row.repairStatus == 'Delivery note Generated')\"\n                                        (click)=\"updateFaultCaseStatus(row.id,'Delivered')\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Delivered\n                                    </button> -->\n\n                                    <!-- <button routerLink=\"/apps/user/user-edit/{{ row.id }}\" ngbDropdownItem>\n                                        <span [data-feather]=\"'edit'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Edit\n                                    </button>\n                                    <button href=\"javascript:;\" ngbDropdownItem><span [data-feather]=\"'trash'\"\n                                            [size]=\"16\" [class]=\"'mr-50'\">\n                                        </span>\n                                        Delete\n                                    </button> -->\n                                </div>\n                            </div>\n\n\n\n                            <!-- <div class=\"avatar avatar-status bg-light-danger\">\n                                <ng-template #tipDeleteContent><span>{{ row.id }}<br />\n                                        <span class=\"font-weight-bold\">Delete\n                                        </span>\n                                    </span>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Delete\" placement=\"top\"\n                                    [ngbPopover]=\"tipDeleteContent\" triggers=\"mouseenter:mouseleave\" container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-trash\"></i></span>\n                            </div> -->\n\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </core-card>\n        </section>\n\n    </div>\n\n    <core-sidebar class=\"modal modal-slide-in sidebar-todo-modal fade\" name=\"new-user-sidebar\"\n        overlayClass=\"modal-backdrop\">\n        <app-new-fault-sidebar></app-new-fault-sidebar>\n    </core-sidebar>\n\n    <core-sidebar class=\"modal modal-slide-in sidebar-todo-modal fade\" name=\"edit-fault-sidebar\"\n        overlayClass=\"modal-backdrop\">\n        <app-edit-fault-sidebar [editRepairDevice]=\"(repairDevice)\" [emailDPdata]=\"(emailDPdata)\"\n            [collectionDPdata]=\"(collectionDPdata)\"></app-edit-fault-sidebar>\n    </core-sidebar>\n\n    <div class=\"login-form\">\n        <!-- Button trigger modal -->\n        <!-- <button type=\"button\"  class=\"btn btn-outline-primary\" rippleEffect>\n            Login Form\n        </button> -->\n\n        <!-- Modal -->\n        <ng-template #modalForm let-modal>\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" id=\"myModalLabel1\">Provide RMA Number</h4>\n                <!-- <h5>This will update status and other information of all the serial number includes in the RMA</h5> -->\n                <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                <form action=\"#\">\n                    <label>RMA Number: </label>\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"RMA NUMBER XXXXXXX\"\n                            [(ngModel)]=\"rmaDetailUpdaterModel.rmaNumber\" class=\"form-control\" name=\"RmaUpdater\" />\n                    </div>\n\n                    <label>Email Address: </label>\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"vikas@menagalaxy.com\"\n                            [(ngModel)]=\"rmaDetailUpdaterModel.emailAddress\" class=\"form-control\" name=\"emailAddress\" />\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"updateorAddRMANumber()\" rippleEffect>\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    <span *ngIf=\"loading == false\">Update</span>\n                    <span *ngIf=\"loading\">Updating</span>\n                </button>\n                <!-- (click)=\"modal.close('Accept click')\" -->\n            </div>\n        </ng-template>\n        <!-- / Modal -->\n    </div>\n\n    <div class=\"login-form\">\n        <!-- Button trigger modal -->\n        <!-- <button type=\"button\"  class=\"btn btn-outline-primary\" rippleEffect>\n                Login Form\n            </button> -->\n\n        <!-- Modal -->\n        <ng-template #modalReplacementByUsForm let-modal>\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" id=\"myModalLabel1\">Provide Replacement Details (By MGC)</h4>\n                <!-- <h5>This will update status and other information of all the serial number includes in the RMA</h5> -->\n                <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                <form action=\"#\">\n                    <label>Replacement Serial Number: </label>\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"XXXXXXX\"\n                            [(ngModel)]=\"replacementByUsCaseStatus.replacementSerialNoByUs\" class=\"form-control\"\n                            name=\"RmaUpdater\" />\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\"\n                    (click)=\"updateReplacementSerialByUs('Replacement by MGC')\" rippleEffect>\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    <span *ngIf=\"loading == false\">Update</span>\n                    <span *ngIf=\"loading\">Updating</span>\n                </button>\n                <!-- (click)=\"modal.close('Accept click')\" -->\n            </div>\n        </ng-template>\n        <!-- / Modal -->\n    </div>\n\n    <div class=\"login-form\">\n        <!-- Button trigger modal -->\n        <!-- <button type=\"button\"  class=\"btn btn-outline-primary\" rippleEffect>\n                    Login Form\n                </button> -->\n\n        <!-- Modal -->\n        <ng-template #modalReplacementByZebraForm let-modal>\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" id=\"myModalLabel1\">Provide Replacement Details (By Zebra)</h4>\n                <!-- <h5>This will update status and other information of all the serial number includes in the RMA</h5> -->\n                <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                <form action=\"#\">\n                    <label>Replacement Serial Number: </label>\n                    <div class=\"form-group\">\n                        <input type=\"text\" placeholder=\"XXXXXXX\"\n                            [(ngModel)]=\"replacementByZebraCaseStatus.replacementSerialNo\" class=\"form-control\"\n                            name=\"RmaUpdater\" />\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\"\n                    (click)=\"updateReplacementSerialByZebra('Replacement by Zebra')\" rippleEffect>\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    <span *ngIf=\"loading == false\">Update</span>\n                    <span *ngIf=\"loading\">Updating</span>\n                </button>\n                <!-- (click)=\"modal.close('Accept click')\" -->\n            </div>\n        </ng-template>\n        <!-- / Modal -->\n    </div>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { environment } from 'environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FaultListService {\n\n  // public rows: any;\n  // public onUserListChanged: BehaviorSubject<any>;\n  rows: any;\n  onDatatablessChanged: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  //private\n  private currentUserSubject: BehaviorSubject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {HttpClient} _httpClient\n   */\n  constructor(private _httpClient: HttpClient, private _toastrService: ToastrService) {\n    // Set the defaults\n    this.onDatatablessChanged = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getDataTableRows()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get rows\n   */\n  getDataTableRows(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n\n\n\n      this._httpClient.get(`${environment.apiUrl}/api/v1/repairDevices`).subscribe((response: any) => {\n        this.rows = response;\n\n\n        this.onDatatablessChanged.next(this.rows);\n        resolve(this.rows);\n      }, reject);\n    });\n  }\n\n\n\n\n  addNewFaultCase(repairDevice: RepairDevice) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/repairDevice`, repairDevice)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n          setTimeout(() => {\n            this._toastrService.success(\n              'Please proceed with the RMA.',\n              'Case Added Successfully.',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.getDataTableRows();\n          return user;\n        })\n      );\n\n\n  }\n\n\n  updateFaultCase(repairDevice: RepairDevice) {\n\n\n    return this._httpClient\n      .put<any>(`${environment.apiUrl}/api/v1/repairDevice`, repairDevice)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Please proceed with the RMA.',\n              'Case Updated Successfully.',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.getDataTableRows();\n\n          return user;\n        })\n      );\n\n  }\n\n\n\n\n  updateFaultCaseStatus(repairCaseStatus: RepairCaseStatus) {\n\n    return this._httpClient\n      .put<any>(`${environment.apiUrl}/api/v1/repairDevice/updateCaseStatus`, repairCaseStatus)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Fault Case Status updated',\n              'Updated to ' + repairCaseStatus.repairStatus,\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n\n          this.getDataTableRows();\n\n          return user;\n        })\n      );\n  }\n\n  updateFaultCaseReplacementByUsStatus(repairCaseStatus: RepairCaseStatus) {\n\n    return this._httpClient\n      .put<any>(`${environment.apiUrl}/api/v1/repairDevice/updateReplacementByUs`, repairCaseStatus)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Fault Case Status updated',\n              'Updated to ' + repairCaseStatus.repairStatus,\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.getDataTableRows();\n\n          return user;\n        })\n      );\n\n\n  }\n\n  updateFaultCaseReplacementByZebraStatus(repairCaseStatus: RepairCaseStatus) {\n\n\n    return this._httpClient\n      .put<any>(`${environment.apiUrl}/api/v1/repairDevice/updateReplacementByZebra`, repairCaseStatus)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Fault Case Status updated',\n              'Updated to ' + repairCaseStatus.repairStatus,\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.getDataTableRows();\n\n          return user;\n        })\n      );\n\n\n  }\n\n  getCustomerUniqueCode() {\n\n\n    return this._httpClient\n      .get<any>(`${environment.apiUrl}/api/v1/uniqueCustomers`)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n\n          return user;\n        })\n      );\n\n\n  }\n\n  getRMALookup(rmaNumber: string, emailAddress: string) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/updateRMADetails`, { rmaNumber, emailAddress })\n      .pipe(\n        map(data => {\n          console.log(data);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'If don\\'t see updated information. Please contact admin',\n              'RMA Status updated',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n          // this.rows = user.actions[0].returnValue;\n          // this.onDatatablessChanged.next(this.rows);\n          // resolve(this.rows);\n          this.getDataTableRows();\n          return data;\n        }),\n      );\n\n\n  }\n\n  updateContractStatus(id: any) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/repairDevice/updateContractStatus/` + id, '')\n      .pipe(\n        map(data => {\n          console.log(data);\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'If don\\'t see updated information. Please contact admin',\n              'Contract Status updated',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n          // this.rows = user.actions[0].returnValue;\n          // this.onDatatablessChanged.next(this.rows);\n          // resolve(this.rows);\n          this.getDataTableRows();\n          return data;\n        }),\n      );\n\n\n  }\n\n\n\n  getCSVFileForRMA(repairDevices: any) {\n\n    console.log(\"Repair Device ... Calling under Csv File for RMA\" + repairDevices[0]);\n\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/export-rma`, repairDevices, { observe: 'body', responseType: 'text' as 'json' })\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          const a = document.createElement(\"a\");\n          a.href = \"data:text/csv,\" + user;\n          let filename = \"Bulk Load V6\";\n          a.setAttribute(\"download\", filename + \".csv\");\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n          return user;\n        })\n      );\n\n\n  }\n\n  importCSVFile(formData: FormData) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/repairDevice/upload`, formData)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n          setTimeout(() => {\n            this._toastrService.success(\n              'Please proceed with the RMA.',\n              'CSV Imported Successfully.',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.getDataTableRows();\n          return user;\n        })\n      );\n\n\n  }\n\n}\n\nexport class RepairDevice {\n  id: any;\n  emailDate: string;\n  collectionDate: string;\n  deviceModel: string;\n  customer: string;\n  serialNumber: string;\n  assetCode: string;\n  faultDescription: string;\n  rmaStatus: string;\n  correctSerialNo: string;\n  correctAssetCode: string;\n  rmaFaultCategory: string;\n  rmaFaultSubCategory: string;\n  rmaFaultDescription: string;\n  repairStatus: string;\n  replacementSerialNo: string;\n  replacementSerialNoByUs: string;\n  createdDate: string;\n  deliveryDate: string;\n  rmaNumber: string;\n  lastUpdated: string;\n  updatedBy: string;\n  createdBy: string;\n  isInContract: string;\n  notRepaired: boolean\n  customerNote: string;\n  accessoryNote: string;\n  extraNotes: string;\n  deliveryNoteId: string;\n  replacement: boolean;\n  assetCorrect: boolean;\n  serialCorrect: boolean;\n  repairedByUs: boolean;\n  replacementByUs: boolean;\n  replacementByZebra: boolean;\n}\n\nexport class RepairCaseStatus {\n  id: any;\n  repairStatus: string;\n}\n\nexport class ReplacementCaseStatusByUs {\n  id: any;\n  repairStatus: string;\n  replacementSerialNoByUs: string;\n\n}\n\nexport class ReplacementCaseStatusByZebra {\n  id: any;\n  repairStatus: string;\n  replacementSerialNo: string;\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core'\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { FaultListService, RepairDevice } from '../fault-list.service';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ContractListService } from 'app/main/repair-management/contract-check/contract-list/contract-list.service';\nimport { rmaFaultSelectionService } from 'app/main/repair-management/repair-fault-selection';\n\nimport { delay, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-fault-sidebar',\n  templateUrl: './new-fault-sidebar.component.html',\n  styleUrls: ['./new-fault-sidebar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewFaultSidebarComponent implements OnInit {\n\n  public fullname;\n  public username;\n  public email;\n  public selectFaultCategory: any;\n  public selectFaultCategoryLoading = false;\n  public selectFaultSubCategory: any;\n  public selectFaultSubCategoryLoading = false;\n\n  public contractCheckValidation = { isValid: 0, message: \"\" };\n\n  public form: UntypedFormGroup;\n  public emailDPdata: NgbDateStruct;\n  public collectionDPdata: NgbDateStruct;\n  public rmaFaultSelectionService = new rmaFaultSelectionService;\n  public repairDevice = new RepairDevice;\n  public uniqueCustomerCodes = [];\n\n  filterSubById(id) {\n\n    return this.rmaFaultSelectionService.subCategories.filter(item => item.parent === id);\n  }\n\n  // public _faultService: FaultListService;\n  // Private\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _coreSidebarService: CoreSidebarService,\n    private _faultListService: FaultListService,\n    private _coreConfigService: CoreConfigService,\n    private _contractListService: ContractListService,\n    private _formBuilder: UntypedFormBuilder, private _toastrService: ToastrService) { }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // get f() {\n  //   return this.loginForm.controls;\n  // }\n  // submit(form) {\n  //   if (form.valid) {\n  //     this.toggleSidebar('new-user-sidebar');\n  //   }\n  // }\n\n  /**\n   * Submit\n   *\n   * @param form\n   */\n\n  // private selectcategoryMethod() {\n  //   this.selectFaultCategoryLoading = true;\n  //   this.selectFaultCategory = this.getFaultCategory().subscribe(x => {\n  //     this.selectFaultCategory = x;\n  //     this.selectFaultCategoryLoading = false;\n  //   });;\n\n  // }\n\n  // private selectSubCategoryMethod() {\n  //   this.selectFaultSubCategoryLoading = true;\n  //   this.selectFaultSubCategory = this.getFaultSubCategory().subscribe(x => {\n  //     this.selectFaultSubCategory = x;\n  //     this.selectFaultSubCategoryLoading = false;\n  //   });;\n\n  // }\n\n\n  // getFaultCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   if (term) {\n  //     items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n  // }\n\n  // getFaultSubCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   // items.forEach(x => name)\n  //   if (term) {\n  //     items = items.filter(x => x.name === \"Battery\");\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n\n  // }\n\n  onSerialNumberEvent(event: any) {\n\n    console.log(event.target.value);\n    if (event.target.value.length > 10) {\n\n      this.validateContractForEvent(event.target.value);\n      console.log(\"CHECKING FOR CONTRACT\");\n    } else {\n      console.log(\"NOT CHECKING\");\n    }\n\n  }\n\n  getValidationServiceDateStatus(startDate: string, endDate: string) {\n    const date = new Date();\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (date > start && date < end) {\n      console.log('✅ date is between the 2 dates');\n      return true;\n    } else {\n      console.log('⛔️ date is not in the range');\n      return false;\n    }\n  }\n\n  public validateContractForEvent(serialNumber: string) {\n\n    this._contractListService\n      .getValidityCheck(serialNumber)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data.actions[0].returnValue);\n\n          if (!data.actions[0].returnValue.ListOfZEBSerialNumber?.Asset[0]) {\n\n            // this.onDatatablessChanged.next(this.rows);\n            console.log(\"EMPTY NOT FOUND\");\n          } else {\n            if ((data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].ListOfServiceDetails.ServiceDetails).length > 0) {\n              console.log(\"IN CONTRACTTTTTTTT....\");\n              this.contractCheckValidation = { isValid: 1, message: \"In Contract\" };\n            } else {\n\n              //Checking for Warranty\n              const inWarranty = this.getValidationServiceDateStatus(data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyStartDate, data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyEndDate);\n              if (inWarranty) {\n                this.contractCheckValidation = { isValid: 1, message: \"In Warranty\" };\n              } else {\n                this.contractCheckValidation = { isValid: 2, message: \"Billable\" };\n              }\n\n            }\n            this.repairDevice.deviceModel = data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].Product;\n            console.log(\"FOUND\");\n          }\n\n\n        },\n        error => {\n\n          console.log(error)\n\n        }\n      );\n  }\n\n  submit(form) {\n    // this.submitted = true;\n\n    // stop here if form is invalid\n    if (form.invalid) {\n      console.log(\"Invalid Form\");\n      this._toastrService.error(\n        'Please check data before submitting.',\n        'Invalid Data',\n        { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n      );\n      return;\n    }\n\n    this.repairDevice.replacement;\n\n    if (this.emailDPdata == null || this.collectionDPdata == null) {\n      this._toastrService.error(\n        'Email and Collection Date null.',\n        'Invalid Data',\n        { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n      );\n    } else {\n      this.repairDevice.emailDate = this.emailDPdata.year + \"-\" + this.emailDPdata.month + \"-\" + this.emailDPdata.day;\n      this.repairDevice.collectionDate = this.collectionDPdata.year + \"-\" + this.collectionDPdata.month + \"-\" + this.collectionDPdata.day;\n      console.log(\"Email Date :\" + this.repairDevice.emailDate);\n    }\n\n    // Login\n    // this.loading = true;\n    this._faultListService\n      .addNewFaultCase(this.repairDevice)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'You have added a new case. Please proceed with the RMA.',\n              'Case Added Successfully.',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('new-user-sidebar');\n\n          this.resetForm();\n\n        },\n        error => {\n          console.log(error)\n          setTimeout(() => {\n            this._toastrService.success(\n              'You have added a new case. Please proceed with the RMA.',\n              'Case Added Successfully.',\n              { toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('new-user-sidebar');\n        }\n      );\n\n\n    // this.toggleSidebar('new-user-sidebar');\n  }\n\n  resetForm() {\n    this.repairDevice = new RepairDevice;\n    this.repairDevice.repairedByUs = true;\n    this.repairDevice.assetCorrect = true;\n    this.repairDevice.serialCorrect = true;\n    this.repairDevice.replacement = false;\n  }\n\n  ngOnInit(): void {\n    // this.selectcategoryMethod();\n    // this.selectSubCategoryMethod();\n\n    // this._rmaFaultSelectionService = new rmaFaultSelectionService();\n\n    this.uniqueCustomerCodes = [];\n\n    this._faultListService\n      .getCustomerUniqueCode()\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n          this.uniqueCustomerCodes = data;\n        },\n        error => {\n\n          this.toggleSidebar('new-user-sidebar');\n        }\n      );\n\n\n    this.repairDevice.repairedByUs = true;\n    this.repairDevice.assetCorrect = true;\n    this.repairDevice.serialCorrect = true;\n    this.repairDevice.replacement = false;\n\n\n\n  }\n\n  getMockSelection() {\n    return [\n      {\n        name: \"Battery\",\n        children: [\n          \"Battery TC2x change request\",\n          \"Battery backup\",\n          \"Battery broken conn or wire\",\n          \"Battery drain problem\",\n          \"Battery general problem\",\n          \"Battery won't charge\",\n          \"Battery won't hold charge\",\n\n\n        ]\n      },\n      {\n        name: \"Cable\",\n        children: [\n          \"Cable connector\",\n          \"Cable cut\",\n          \"Cable general problem\",\n          \"Cable intermittent\",\n          \"Cable loose\",\n          \"Cable worn\"\n\n\n        ]\n      },\n      {\n        name: \"Camera\",\n        children: [\n          \"Camera error message\",\n          \"Camera image failure\",\n          \"Camera no decode\"\n\n\n        ]\n      }\n    ];\n  }\n\n\n}\n\n\n\n","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n        <div class=\"modal-dialog\">\n            <form class=\"add-new-user modal-content pt-0\" (ngSubmit)=\"(newCaseForm.form.valid)\" #newCaseForm=\"ngForm\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                    (click)=\"toggleSidebar('new-user-sidebar')\">\n                    ×\n                </button>\n                <div class=\"modal-header mb-1\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">New Fault Case</h5>\n                </div>\n                <div class=\"modal-body flex-grow-1\">\n                    <div class=\"form-group\">\n                        <label for=\"serialNumber\">Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.serialNumber\" class=\"form-control\" [ngClass]=\"{\n                                                              'is-valid': contractCheckValidation.isValid == 1,\n                                                              'is-invalid': contractCheckValidation.isValid == 2\n                                                            }\" name=\"serialNumber\" placeholder=\"Enter Serial Number\"\n                            (keyup)=\"onSerialNumberEvent($event)\" required />\n                        <div class=\"valid-feedback\">{{contractCheckValidation.message}}</div>\n                        <div class=\"invalid-feedback\">{{contractCheckValidation.message}}</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"assetCode\">Asset Code</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.assetCode\" class=\"form-control\" name=\"assetCode\"\n                            placeholder=\"Enter Asset Code\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"deviceModel\">Device Model</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.deviceModel\" class=\"form-control\"\n                            name=\"deviceModel\" placeholder=\"Enter Product Code\" disabled />\n                        <!-- <select class=\"form-control\" [(ngModel)]=\"repairDevice.deviceModel\" name=\"deviceModel\">\n                            <option>Zebra TC56</option>\n                            <option>Zebra TC77</option>\n                            <option>QLN420</option>\n                        </select> -->\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"emailDate\">Email Date</label>\n                        <div class=\"input-group\">\n\n                            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Email Date Picker\"\n                                [(ngModel)]=\"emailDPdata\" ngbDatepicker #emailDP=\"ngbDatepicker\" />\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary feather icon-calendar\"\n                                    (click)=\"emailDP.toggle()\" type=\"button\" rippleEffect></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"collectionDate\">Collection Date</label>\n                        <div class=\"input-group\">\n\n                            <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Collection Date Picker\"\n                                [(ngModel)]=\"collectionDPdata\" ngbDatepicker #collectionDP=\"ngbDatepicker\" />\n                            <div class=\"input-group-append\">\n                                <button class=\"btn btn-outline-secondary feather icon-calendar\"\n                                    (click)=\"collectionDP.toggle()\" type=\"button\" rippleEffect></button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"customer\">Customer</label>\n                        <select [(ngModel)]=\"repairDevice.customer\" class=\"form-control\" name=\"customer\">\n\n                            <option [ngValue]=\"category\" *ngFor=\"let category of uniqueCustomerCodes\">{{category}}\n                            </option>\n\n                        </select>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"faultDescription\">Fault Description</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.faultDescription\" class=\"form-control\"\n                            name=\"faultDescription\" placeholder=\"Enter description given by customer\" />\n                    </div>\n\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Repaired By Us</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.repairedByUs\" class=\"custom-control-input\"\n                            id=\"isReparedByUsSwitch\" name=\"isReparedByUsSwitch\" checked />\n                        <label class=\"custom-control-label\" for=\"isReparedByUsSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.repairedByUs\">\n                        <label for=\"faultCategory\">Fault Category</label>\n\n                        <select class=\"form-control\" [(ngModel)]=\"repairDevice.rmaFaultCategory\" name=\"faultCategory\">\n                            <option disabled [ngValue]=\"null\">-/-</option>\n                            <option [ngValue]=\"category.title\"\n                                *ngFor=\"let category of rmaFaultSelectionService.mainGroups\">{{category.title}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.repairedByUs\">\n                        <label for=\"faultSubCategory\">Fault Sub-Category</label>\n\n                        <select class=\"form-control\" [(ngModel)]=\"repairDevice.rmaFaultSubCategory\"\n                            name=\"faultSubCategory\">\n                            <option [ngValue]=\"subcategory.title\"\n                                *ngFor=\"let subcategory of filterSubById(repairDevice.rmaFaultCategory)\">\n                                {{subcategory.title}}\n                            </option>\n                        </select>\n\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.repairedByUs\">\n                        <label for=\"basicInput\">RMA Fault Description</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.rmaFaultDescription\" class=\"form-control\"\n                            name=\"basicInput\" placeholder=\"Enter description for RMA\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Serial Correct?</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.serialCorrect\" class=\"custom-control-input\"\n                            name=\"isSerialCorrectSwitch\" id=\"isSerialCorrectSwitch\" checked />\n                        <label class=\"custom-control-label\" for=\"isSerialCorrectSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.serialCorrect\">\n                        <label for=\"correctSerialNumber\">Correct Serial Number</label>\n                        <input type=\"text\" class=\"form-control\" name=\"correctSerialNumber\"\n                            placeholder=\"Enter Correct Serial Number\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Asset Correct?</p>\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.assetCorrect\" class=\"custom-control-input\"\n                            name=\"isAssetCorrectSwitch\" id=\"isAssetCorrectSwitch\" checked />\n                        <label class=\"custom-control-label\" for=\"isAssetCorrectSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.assetCorrect\">\n                        <label for=\"correctAssetCode\">Correct Asset Code</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.correctAssetCode\" class=\"form-control\"\n                            name=\"correctAssetCode\" placeholder=\"Enter Correct Asset Code\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <p class=\"mb-50\">Is Replacement Given?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.replacement\" class=\"custom-control-input\"\n                            id=\"isReplacementSwitch\" name=\"isReplacementSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isReplacementSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\"\n                        *ngIf=\"repairDevice.replacement\">\n                        <p class=\"mb-50\">Is Replacement by Zebra?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.replacementByZebra\"\n                            class=\"custom-control-input\" id=\"isReplacementZebraSwitch\"\n                            name=\"isReplacementZebraSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isReplacementZebraSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"repairDevice.replacementByZebra\">\n                        <label for=\"replacementSerial\">Replacement Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.replacementSerialNo\" class=\"form-control\"\n                            name=\"replacementSerial\" placeholder=\"Enter Replacement Serial Number\" />\n                    </div>\n\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\"\n                        *ngIf=\"repairDevice.replacement\">\n                        <p class=\"mb-50\">Is Replacement by MGC?</p>\n                        <!-- <label for=\"customSwitch113\">Is Replacement? </label> -->\n                        <input type=\"checkbox\" [(ngModel)]=\"repairDevice.replacementByUs\" class=\"custom-control-input\"\n                            id=\"isReplacementByUsSwitch\" name=\"isReplacementByUsSwitch\" />\n                        <label class=\"custom-control-label\" for=\"isReplacementByUsSwitch\">\n                            <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                            <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                        </label>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"repairDevice.replacementByUs\">\n                        <label for=\"replacementSerial\">Replacement Serial Number</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.replacementSerialNoByUs\" class=\"form-control\"\n                            name=\"replacementSerial\" placeholder=\"Enter Replacement Serial Number\" />\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"!repairDevice.repairedByUs\">\n                        <label for=\"rmaNumber\">RMA Number</label>\n                        <input type=\"text\" [(ngModel)]=\"repairDevice.rmaNumber\" class=\"form-control\" name=\"rmaNumber\"\n                            placeholder=\"Enter RMA Number\" />\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Customer Note</p> -->\n                        <label for=\"customerNotes\">Customer Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"repairDevice.customerNote\" name=\"customerNotes\"\n                                rows=\"3\" placeholder=\"Customer notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Accessory Note</p> -->\n                        <label for=\"accessoryNotes\">Accessory Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"repairDevice.accessoryNote\"\n                                name=\"accessoryNotes\" rows=\"3\" placeholder=\"Accessory notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n                    <div class=\"form-group custom-control custom-switch custom-switch-success\">\n                        <!-- <p class=\"mb-50\">Additional Note</p> -->\n                        <label for=\"additionalNotes\">Additional Note</label>\n                        <fieldset class=\"form-group\">\n                            <textarea class=\"form-control\" [(ngModel)]=\"repairDevice.extraNotes\" name=\"additionalNotes\"\n                                rows=\"3\" placeholder=\"Additional notes goes here\"></textarea>\n                        </fieldset>\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit(newCaseForm)\"\n                        rippleEffect>Submit</button>\n                    <button type=\"reset\" class=\"btn btn-outline-secondary\" (click)=\"toggleSidebar('new-user-sidebar')\"\n                        rippleEffect>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Modal to add new user Ends-->\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}