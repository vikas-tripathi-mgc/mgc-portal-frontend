{"version":3,"file":"src_app_main_customer-management_customer-main_customer-main_module_ts.js","mappings":"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","sources":["./src/app/main/customer-management/customer-main/customer-list/customer-list.component.ts","./src/app/main/customer-management/customer-main/customer-list/customer-list.component.html","./src/app/main/customer-management/customer-main/customer-list/customer-list.service.ts","./src/app/main/customer-management/customer-main/customer-list/edit-customer-sidebar/edit-customer-sidebar.component.ts","./src/app/main/customer-management/customer-main/customer-list/edit-customer-sidebar/edit-customer-sidebar.component.html","./src/app/main/customer-management/customer-main/customer-list/new-customer-sidebar/new-customer-sidebar.component.ts","./src/app/main/customer-management/customer-main/customer-list/new-customer-sidebar/new-customer-sidebar.component.html","./src/app/main/customer-management/customer-main/customer-main.module.ts"],"sourcesContent":["\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ColumnMode, DatatableComponent, SelectionType } from '@swimlane/ngx-datatable';\n\nimport { CoreConfigService } from '@core/services/config.service';\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { UserListService } from 'app/main/apps/user/user-list/user-list.service';\nimport { Customer, CustomerListService } from './customer-list.service';\n// import { FaultListService } from './fault-list.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class CustomerListComponent implements OnInit {\n  // Public\n  private _unsubscribeAll: Subject<any>;\n  private tempData = [];\n  public sidebarToggleRef = false;\n  public sidebarEditToggleRef = false;\n  public editCustomerItem = {\n    id: 0,\n    customerName: '',\n    customerEmail: '',\n    companyName: '',\n    companyCode: '',\n    deliveryAddressLine1: '',\n    deliveryAddressLine2: '',\n    deliveryAddressLine3: ''\n  };\n\n  // public\n  public contentHeader: object;\n  public rows: any;\n  public selected = [];\n  public kitchenSinkRows: any;\n  public basicSelectedOption: number = 10;\n  public ColumnMode = ColumnMode;\n  public expanded = {};\n  public editingName = {};\n  public editingStatus = {};\n  public editingAge = {};\n  public editingSalary = {};\n  public chkBoxSelected = [];\n  public SelectionType = SelectionType;\n  public exportCSVData;\n  public customer: Customer = new Customer;\n\n\n  // public contentHeader: object;\n  public isReload = false;\n\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n  @ViewChild('tableRowDetails') tableRowDetails: any;\n\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Inline editing Name\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateName(event, cell, rowIndex) {\n    this.editingName[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n\n  emittedEvents($event) {\n    console.log('Action : ', $event);\n  }\n\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  toggleEditSidebar(name, row: any): void {\n    console.log(name);\n\n\n    this.editCustomerItem.id = row.id;\n    this.editCustomerItem.customerName = row.customerName;\n    this.editCustomerItem.customerEmail = row.customerEmail;\n    this.editCustomerItem.companyName = row.companyName;\n    this.editCustomerItem.companyCode = row.companyCode;\n    this.editCustomerItem.deliveryAddressLine1 = row.deliveryAddressLine1;\n    this.editCustomerItem.deliveryAddressLine2 = row.deliveryAddressLine2;\n    this.editCustomerItem.deliveryAddressLine3 = row.deliveryAddressLine3;\n\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  /**\n   * Reload\n   *\n   * @param $event\n   */\n  reload($event) {\n    // This is fake API call example for reload\n    if ($event === 'reload') {\n      console.log($event, ': Start');\n      this.isReload = true;\n      setTimeout(() => {\n        this.isReload = false;\n        console.log($event, ': End');\n      }, 5000);\n    }\n  }\n\n  /**\n   * Inline editing Age\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateAge(event, cell, rowIndex) {\n    this.editingAge[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Inline editing Salary\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateSalary(event, cell, rowIndex) {\n    this.editingSalary[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Inline editing Status\n   *\n   * @param event\n   * @param cell\n   * @param rowIndex\n   */\n  inlineEditingUpdateStatus(event, cell, rowIndex) {\n    this.editingStatus[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  /**\n   * Search (filter)\n   *\n   * @param event\n   */\n  filterUpdate(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.tempData.filter(function (d) {\n      return d.serialNumber.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.kitchenSinkRows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n  /**\n   * Row Details Toggle\n   *\n   * @param row\n   */\n  rowDetailsToggleExpand(row) {\n    this.tableRowDetails.rowDetail.toggleExpandRow(row);\n  }\n\n  /**\n   * For ref only, log selected values\n   *\n   * @param selected\n   */\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  /**\n   * For ref only, log activate events\n   *\n   * @param selected\n   */\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  /**\n   * Custom Chkbox On Select\n   *\n   * @param { selected }\n   */\n  customChkboxOnSelect({ selected }) {\n    this.chkBoxSelected.splice(0, this.chkBoxSelected.length);\n    this.chkBoxSelected.push(...selected);\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {DatatablesService} _datatablesService\n   * @param {CoreTranslationService} _coreTranslationService\n   */\n  constructor(private _datatablesService: CustomerListService, private _coreSidebarService: CoreSidebarService) {\n    this._unsubscribeAll = new Subject();\n    // this._coreTranslationService.translate(english, french, german, portuguese);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this._datatablesService.onDatatablessChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.rows = response;\n      this.tempData = this.rows;\n      this.kitchenSinkRows = this.rows;\n      this.exportCSVData = this.rows;\n    });\n\n    // content header\n    // this.contentHeader = {\n    //   headerTitle: 'Datatables',\n    //   actionButton: true,\n    //   breadcrumb: {\n    //     type: '',\n    //     links: [\n    //       {\n    //         name: 'Home',\n    //         isLink: true,\n    //         link: '/'\n    //       },\n    //       {\n    //         name: 'Forms & Tables',\n    //         isLink: true,\n    //         link: '/'\n    //       },\n    //       {\n    //         name: 'Datatables',\n    //         isLink: false\n    //       }\n    //     ]\n    //   }\n    // };\n  }\n}\n\n","<div class=\"content-wrapper container-xxl p-0\">\n    <div class=\"content-body\">\n\n        <section id=\"ngx-datatable-kitchen-sink\">\n            <core-card (events)=\"emittedEvents($event)\" [actions]=\"[ 'expand', 'reload']\">\n                <h4 class=\"card-title\">List of Customers</h4>\n                <div class=\"row\">\n                    <div class=\"col-12 mb-50\">\n\n\n                        <button class=\"btn btn-primary ml-1\" rippleEffect (click)=\"toggleSidebar('new-user-sidebar')\">\n                            <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i><span\n                                class=\"d-none d-sm-inline-block\">New\n                                Customer</span>\n                        </button>\n\n                    </div>\n                    <div class=\"col-md-6 col-12\">\n                        <div class=\"d-flex justify-content-between align-items-center m-1\">\n                            <label class=\"d-flex align-items-center\">Show\n                                <select class=\"form-control mx-25\" [(ngModel)]=\"basicSelectedOption\">\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                                entries</label>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 col-12 d-flex justify-content-md-end\">\n                        <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pl-1 pl-md-0 pb-md-0\">\n                            <label class=\"d-flex align-items-center\"><input type=\"search\" placeholder=\"Search\"\n                                    class=\"form-control ml-25\" (keyup)=\"filterUpdate($event)\"\n                                    (search)=\"filterUpdate($event)\" /></label>\n                        </div>\n                    </div>\n                </div>\n                <ngx-datatable [rows]=\"kitchenSinkRows\" [rowHeight]=\"70\" class=\"bootstrap core-bootstrap\" [limit]=\"10\"\n                    [columnMode]=\"ColumnMode.force\" [headerHeight]=\"40\" [footerHeight]=\"50\" [scrollbarH]=\"true\"\n                    [selectionType]=\"SelectionType.checkbox\" [limit]=\"basicSelectedOption\"\n                    (activate)=\"onActivate($event)\" (select)=\"onSelect($event)\">\n\n                    <ngx-datatable-column name=\"Contact Detail\" prop=\"full_name\" [width]=\"200\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n                                <div *ngIf=\"row.customerName < 1; else customAvatar\">\n                                    <img class=\"rounded-circle mr-1\" src=\"{{ row.avatar }}\" height=\"32\" width=\"32\"\n                                        alt=\"datatable-avatar\" />\n                                </div>\n                                <ng-template #customAvatar>\n                                    <div class=\"avatar mr-1 ml-0 bg-light-success\">\n                                        <div class=\"avatar-content\">{{ row.customerName | initials }}</div>\n                                    </div>\n                                </ng-template>\n                                <div class=\"cell-line-height\">\n                                    <span\n                                        class=\"font-weight-bold d-block text-nowrap font-medium-1\">{{ row.customerName }}</span>\n                                    <span class=\"text-muted font-small-2\"> @{{ row.customerEmail }}</span>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Company Details\" prop=\"email\" [width]=\"80\">\n                        <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\">\n                                    <p class=\"font-medium-1 font-weight-bold line-height-1 mb-25\">\n                                        {{ row.companyCode }}\n                                    </p>\n                                    <span class=\"text font-small-10\">{{ row.companyName }}</span>\n\n\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Address\" prop=\"status\" [width]=\"160\">\n                        <ng-template let-row=\"row\" let-status=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n\n                                <div class=\"cell-line-height\">\n\n                                    <span class=\"text font-small-10\">{{ row.deliveryAddressLine1 }}</span>\n                                    <br>\n                                    <span class=\"text font-small-10\">{{ row.deliveryAddressLine2 }}</span>\n                                    <br>\n                                    <span class=\"text font-small-10\">{{ row.deliveryAddressLine3 }}</span>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Actions\" [width]=\"120\" [sortable]=\"false\">\n                        <ng-template let-row=\"row\" ngx-datatable-cell-template>\n\n                            <div class=\"avatar avatar-status bg-light-warning\">\n                                <ng-template #tipEditContent>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Edit\" placement=\"top\"\n                                    [ngbPopover]=\"tipEditContent\" triggers=\"mouseenter:mouseleave\" container=\"body\"\n                                    (click)=\"toggleEditSidebar('edit-user-sidebar',row)\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-edit-2\"></i></span>\n                            </div>\n\n                            <!-- <div class=\"avatar avatar-status bg-light-warning\">\n                                <ng-template #tipEditContent><span>{{ row.id }}<br />\n                                        <span class=\"font-weight-bold\">No of Devices: {{ row.id }}</span></span>\n                                </ng-template> -->\n                            <!-- <span class=\"avatar-content\" popoverTitle=\"Edit\" placement=\"top\"\n                                    [ngbPopover]=\"tipEditContent\" triggers=\"mouseenter:mouseleave\" container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 tool\"></i>\n                                </span> -->\n\n                            <!-- <span [data-feather]=\"'calendar'\" [class]=\"'avatar-icon'\"></span> -->\n                            <!-- </div> -->\n\n                            <div class=\"avatar bg-primary\">\n                                <div class=\"avatar-content\">\n                                    <span [data-feather]=\"'tool'\" [class]=\"'avatar-icon'\"></span>\n                                </div>\n                            </div>\n\n                            <!-- <div class=\"avatar avatar-status bg-light-primary\">\n                                <ng-template #tipRFDContent><span>{{ row.id }}<br />\n                                        <span class=\"font-weight-bold\">Mark Ready for Delivery\n                                        </span>\n                                    </span>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Change Status\" placement=\"top\"\n                                    [ngbPopover]=\"tipRFDContent\" container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-check-circle\"></i></span>\n                            </div> -->\n\n                            <!-- <div class=\"avatar avatar-status bg-light-danger\">\n                                <ng-template #tipDeleteContent><span>{{ row.id }}<br />\n                                        <span class=\"font-weight-bold\">Delete\n                                        </span>\n                                    </span>\n                                </ng-template>\n                                <span class=\"avatar-content\" popoverTitle=\"Delete\" placement=\"top\"\n                                    [ngbPopover]=\"tipDeleteContent\" triggers=\"mouseenter:mouseleave\" container=\"body\">\n                                    <i class=\"feather avatar-icon font-medium-1 icon-trash\"></i></span>\n                            </div> -->\n\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </core-card>\n        </section>\n\n    </div>\n\n    <core-sidebar class=\"modal modal-slide-in sidebar-todo-modal fade\" name=\"new-user-sidebar\"\n        overlayClass=\"modal-backdrop\">\n        <app-new-customer-sidebar></app-new-customer-sidebar>\n    </core-sidebar>\n\n    <core-sidebar class=\"modal modal-slide-in sidebar-todo-modal fade\" name=\"edit-user-sidebar\"\n        overlayClass=\"modal-backdrop\">\n        <app-edit-customer-sidebar [item]=\"editCustomerItem\"></app-edit-customer-sidebar>\n    </core-sidebar>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { LongPressDirective } from '@swimlane/ngx-datatable';\nimport { environment } from 'environments/environment';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n\n  // public rows: any;\n  // public onUserListChanged: BehaviorSubject<any>;\n  rows: any;\n  onDatatablessChanged: BehaviorSubject<any>;\n  public currentUser: Observable<any>;\n\n  //private\n  private currentUserSubject: BehaviorSubject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {HttpClient} _httpClient\n   */\n  constructor(private _httpClient: HttpClient, private _toastrService: ToastrService) {\n    // Set the defaults\n    this.onDatatablessChanged = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getDataTableRows()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get rows\n   */\n  getDataTableRows(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      this._httpClient.get(`${environment.apiUrl}/api/v1/customers`).subscribe((response: any) => {\n        this.rows = response;\n        this.onDatatablessChanged.next(this.rows);\n        resolve(this.rows);\n      }, reject);\n    });\n  }\n\n\n\n\n  addNewCustomer(customer: Customer) {\n\n\n    return this._httpClient\n      .post<any>(`${environment.apiUrl}/api/v1/customer`, customer)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          this.getDataTableRows();\n          return user;\n        })\n      );\n\n  }\n\n  editCustomer(customer: Customer) {\n\n\n    return this._httpClient\n      .put<any>(`${environment.apiUrl}/api/v1/customer`, customer)\n      .pipe(\n        map(user => {\n          // login successful if there's a jwt token in the response\n          console.log(user);\n\n          this.getDataTableRows();\n          return user;\n        })\n      );\n\n  }\n\n}\n\nexport class Customer {\n\n  id: any;\n  customerName: string;\n  customerEmail: string;\n  companyName: string;\n  companyCode: string;\n  deliveryAddressLine1: string;\n  deliveryAddressLine2: string;\n  deliveryAddressLine3: string;\n}\n\nexport class RepairDevice {\n\n  emailDate: string;\n  collectionDate: string;\n  deviceModel: string;\n  customer: string;\n  serialNumber: string;\n  assetCode: string;\n  faultDescription: string;\n  rmaStatus: string;\n  correctSerialNo: string;\n  correctAssetCode: string;\n  rmaFaultCategory: string;\n  rmaFaultSubCategory: string;\n  rmaFaultDescription: string;\n  repairStatus: string;\n  replacementSerialNo: string;\n  createdDate: string;\n  deliveryDate: string;\n  rmaNumber: string;\n  lastUpdated: string;\n  updatedBy: string;\n  createdBy: string;\n  isInContract: string;\n  customerNote: string;\n  accessoryNote: string;\n  extraNotes: string;\n  deliveryNoteId: string;\n  replacement: boolean;\n  assetCorrect: boolean;\n  serialCorrect: boolean;\n  repairedByUs: boolean;\n  replacementByUs: boolean;\n}\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core'\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ContractListService } from 'app/main/repair-management/contract-check/contract-list/contract-list.service';\nimport { rmaFaultSelectionService } from 'app/main/repair-management/repair-fault-selection';\n\nimport { delay, tap } from 'rxjs/operators';\nimport { Customer, CustomerListService, RepairDevice } from '../customer-list.service';\n\n@Component({\n  selector: 'app-edit-customer-sidebar',\n  templateUrl: './edit-customer-sidebar.component.html',\n  styleUrls: ['./edit-customer-sidebar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class EditCustomerSidebarComponent implements OnInit {\n\n  public fullname;\n  public username;\n  public email;\n  public selectFaultCategory: any;\n  public selectFaultCategoryLoading = false;\n  public selectFaultSubCategory: any;\n  public selectFaultSubCategoryLoading = false;\n\n  @Input() item = {\n    id: 0,\n    customerName: '',\n    customerEmail: '',\n    companyName: '',\n    companyCode: '',\n    deliveryAddressLine1: '',\n    deliveryAddressLine2: '',\n    deliveryAddressLine3: ''\n  };\n\n  public contractCheckValidation = { isValid: 0, message: \"\" };\n\n  public form: UntypedFormGroup;\n  public emailDPdata: NgbDateStruct;\n  public collectionDPdata: NgbDateStruct;\n  public rmaFaultSelectionService = new rmaFaultSelectionService;\n  public repairDevice: RepairDevice = new RepairDevice;\n  public customer: Customer = new Customer;\n\n  filterSubById(id) {\n    console.log(\"IDDDDDDDDDD \" + id)\n    return this.rmaFaultSelectionService.subCategories.filter(item => item.parent === id);\n  }\n\n  // public _faultService: FaultListService;\n  // Private\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _coreSidebarService: CoreSidebarService,\n    private _customerListService: CustomerListService,\n    private _coreConfigService: CoreConfigService,\n    private _contractListService: ContractListService,\n    private _formBuilder: UntypedFormBuilder, private _toastrService: ToastrService) { }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // get f() {\n  //   return this.loginForm.controls;\n  // }\n  // submit(form) {\n  //   if (form.valid) {\n  //     this.toggleSidebar('new-user-sidebar');\n  //   }\n  // }\n\n  /**\n   * Submit\n   *\n   * @param form\n   */\n\n  // private selectcategoryMethod() {\n  //   this.selectFaultCategoryLoading = true;\n  //   this.selectFaultCategory = this.getFaultCategory().subscribe(x => {\n  //     this.selectFaultCategory = x;\n  //     this.selectFaultCategoryLoading = false;\n  //   });;\n\n  // }\n\n  // private selectSubCategoryMethod() {\n  //   this.selectFaultSubCategoryLoading = true;\n  //   this.selectFaultSubCategory = this.getFaultSubCategory().subscribe(x => {\n  //     this.selectFaultSubCategory = x;\n  //     this.selectFaultSubCategoryLoading = false;\n  //   });;\n\n  // }\n\n\n  // getFaultCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   if (term) {\n  //     items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n  // }\n\n  // getFaultSubCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   // items.forEach(x => name)\n  //   if (term) {\n  //     items = items.filter(x => x.name === \"Battery\");\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n\n  // }\n\n  onSerialNumberEvent(event: any) {\n\n    console.log(event.target.value);\n    if (event.target.value.length > 10) {\n\n      this.validateContractForEvent(event.target.value);\n      console.log(\"CHECKING FOR CONTRACT\");\n    } else {\n      console.log(\"NOT CHECKING\");\n    }\n\n  }\n\n  getValidationServiceDateStatus(startDate: string, endDate: string) {\n    const date = new Date();\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (date > start && date < end) {\n      console.log('✅ date is between the 2 dates');\n      return true;\n    } else {\n      console.log('⛔️ date is not in the range');\n      return false;\n    }\n  }\n\n  public validateContractForEvent(serialNumber: string) {\n\n    this._contractListService\n      .getValidityCheck(serialNumber)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data.actions[0].returnValue);\n\n          if (!data.actions[0].returnValue.ListOfZEBSerialNumber?.Asset[0]) {\n\n            // this.onDatatablessChanged.next(this.rows);\n            console.log(\"EMPTY NOT FOUND\");\n          } else {\n            if ((data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].ListOfServiceDetails.ServiceDetails).length > 0) {\n              console.log(\"IN CONTRACTTTTTTTT....\");\n              this.contractCheckValidation = { isValid: 1, message: \"In Contract\" };\n            } else {\n\n              //Checking for Warranty\n              const inWarranty = this.getValidationServiceDateStatus(data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyStartDate, data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyEndDate);\n              if (inWarranty) {\n                this.contractCheckValidation = { isValid: 1, message: \"In Warranty\" };\n              } else {\n                this.contractCheckValidation = { isValid: 2, message: \"Billable\" };\n              }\n\n            }\n            this.repairDevice.deviceModel = data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].Product;\n            console.log(\"FOUND\");\n          }\n\n\n        },\n        error => {\n\n          console.log(error)\n\n        }\n      );\n  }\n\n  submit(form) {\n    // this.submitted = true;\n\n    // stop here if form is invalid\n    if (form.invalid) {\n      console.log(\"Invalid Form\");\n      this._toastrService.error(\n        'Please check data before submitting.',\n        'Invalid Data',\n        { positionClass: 'toast-top-right', toastClass: 'toast ngx-toastr', closeButton: true }\n      );\n      return;\n    }\n\n\n    this.customer.id = this.item.id\n    this.customer.customerName = this.item.customerName\n    this.customer.customerEmail = this.item.customerEmail\n    this.customer.companyName = this.item.companyName\n    this.customer.companyCode = this.item.companyCode\n    this.customer.deliveryAddressLine1 = this.item.deliveryAddressLine1\n    this.customer.deliveryAddressLine2 = this.item.deliveryAddressLine2\n    this.customer.deliveryAddressLine3 = this.item.deliveryAddressLine3\n\n\n    // Login\n    // this.loading = true;\n    this._customerListService\n      .editCustomer(this.customer)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Details updated for ' + this.customer.customerName,\n              'Successfully Updated',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('edit-user-sidebar');\n\n\n\n        },\n        error => {\n          console.log(error)\n          setTimeout(() => {\n            this._toastrService.success(\n              'You have added a new case. Please proceed with the RMA.',\n              'Case Added Successfully.',\n              { toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('edit-user-sidebar');\n        }\n      );\n\n\n    // this.toggleSidebar('new-user-sidebar');\n  }\n\n  resetForm() {\n    this.customer = new Customer;\n  }\n\n  ngOnInit(): void {\n\n    console.log(this.item.customerName);\n    // this.customer.id = editCustomerItem.id;\n    // this.customer.customerName = row.customerName;\n    // this.customer.customerEmail = row.customerEmail;\n    // this.customer.companyName = row.companyName;\n    // this.customer.companyCode = row.companyCode;\n    // this.customer.deliveryAddressLine1 = row.deliveryAddressLine1;\n    // this.customer.deliveryAddressLine2 = row.deliveryAddressLine2;\n    // this.customer.deliveryAddressLine3 = row.deliveryAddressLine3;\n\n    // this.selectcategoryMethod();\n    // this.selectSubCategoryMethod();\n\n    // this._rmaFaultSelectionService = new rmaFaultSelectionService();\n\n\n  }\n\n\n\n\n}\n\n\n","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n        <div class=\"modal-dialog\">\n            <form class=\"edit-new-user modal-content pt-0\" (ngSubmit)=\"(editCaseForm.form.valid)\"\n                #editCaseForm=\"ngForm\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                    (click)=\"toggleSidebar('edit-user-sidebar')\">\n                    ×\n                </button>\n                <div class=\"modal-header mb-1\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Customer</h5>\n                </div>\n                <div class=\"modal-body flex-grow-1\">\n                    <div class=\"form-group\">\n                        <label for=\"customerName\">Customer Name</label>\n                        <input type=\"text\" [(ngModel)]=\"item.customerName\" class=\"form-control\" name=\"customerName\"\n                            placeholder=\"Enter Contact Person Name\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"customerEmail\">Customer Email</label>\n                        <input type=\"text\" [(ngModel)]=\"item.customerEmail\" class=\"form-control\" name=\"customerEmail\"\n                            placeholder=\"Enter Contact Person Email\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyCode\">Company Code</label>\n                        <input type=\"text\" [(ngModel)]=\"item.companyCode\" class=\"form-control\" name=\"companyCode\"\n                            placeholder=\"Enter Company Code\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyName\">Company Name</label>\n                        <input type=\"text\" [(ngModel)]=\"item.companyName\" class=\"form-control\" name=\"companyName\"\n                            placeholder=\"Enter Company Name\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress1\">Company Address Line 1</label>\n                        <input type=\"text\" [(ngModel)]=\"item.deliveryAddressLine1\" class=\"form-control\"\n                            name=\"companyAddress1\" placeholder=\"Enter Company Address Line 1\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress2\">Company Address Line 2</label>\n                        <input type=\"text\" [(ngModel)]=\"item.deliveryAddressLine2\" class=\"form-control\"\n                            name=\"companyAddress2\" placeholder=\"Enter Company Address Line 2\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress3\">Company Address Line 3</label>\n                        <input type=\"text\" [(ngModel)]=\"item.deliveryAddressLine3\" class=\"form-control\"\n                            name=\"companyAddress3\" placeholder=\"Enter Company Address Line 3\" />\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit(editCaseForm)\"\n                        rippleEffect>Update</button>\n                    <button type=\"reset\" class=\"btn btn-outline-secondary\" (click)=\"toggleSidebar('edit-user-sidebar')\"\n                        rippleEffect>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Modal to add new user Ends-->\n</div>","\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core'\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { CoreConfigService } from '@core/services/config.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ContractListService } from 'app/main/repair-management/contract-check/contract-list/contract-list.service';\nimport { rmaFaultSelectionService } from 'app/main/repair-management/repair-fault-selection';\n\nimport { delay, tap } from 'rxjs/operators';\nimport { Customer, CustomerListService, RepairDevice } from '../customer-list.service';\n\n@Component({\n  selector: 'app-new-customer-sidebar',\n  templateUrl: './new-customer-sidebar.component.html',\n  styleUrls: ['./new-customer-sidebar.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewCustomerSidebarComponent implements OnInit {\n\n  public fullname;\n  public username;\n  public email;\n  public selectFaultCategory: any;\n  public selectFaultCategoryLoading = false;\n  public selectFaultSubCategory: any;\n  public selectFaultSubCategoryLoading = false;\n\n  public contractCheckValidation = { isValid: 0, message: \"\" };\n\n  public form: UntypedFormGroup;\n  public emailDPdata: NgbDateStruct;\n  public collectionDPdata: NgbDateStruct;\n  public rmaFaultSelectionService = new rmaFaultSelectionService;\n  public repairDevice: RepairDevice = new RepairDevice;\n  public customer: Customer = new Customer;\n\n  filterSubById(id) {\n    console.log(\"IDDDDDDDDDD \" + id)\n    return this.rmaFaultSelectionService.subCategories.filter(item => item.parent === id);\n  }\n\n  // public _faultService: FaultListService;\n  // Private\n\n  /**\n   * Constructor\n   *\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(\n    private _coreSidebarService: CoreSidebarService,\n    private _customerListService: CustomerListService,\n    private _coreConfigService: CoreConfigService,\n    private _contractListService: ContractListService,\n    private _formBuilder: UntypedFormBuilder, private _toastrService: ToastrService) { }\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  // get f() {\n  //   return this.loginForm.controls;\n  // }\n  // submit(form) {\n  //   if (form.valid) {\n  //     this.toggleSidebar('new-user-sidebar');\n  //   }\n  // }\n\n  /**\n   * Submit\n   *\n   * @param form\n   */\n\n  // private selectcategoryMethod() {\n  //   this.selectFaultCategoryLoading = true;\n  //   this.selectFaultCategory = this.getFaultCategory().subscribe(x => {\n  //     this.selectFaultCategory = x;\n  //     this.selectFaultCategoryLoading = false;\n  //   });;\n\n  // }\n\n  // private selectSubCategoryMethod() {\n  //   this.selectFaultSubCategoryLoading = true;\n  //   this.selectFaultSubCategory = this.getFaultSubCategory().subscribe(x => {\n  //     this.selectFaultSubCategory = x;\n  //     this.selectFaultSubCategoryLoading = false;\n  //   });;\n\n  // }\n\n\n  // getFaultCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   if (term) {\n  //     items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n  // }\n\n  // getFaultSubCategory(term: string = null): Observable<Faults[]> {\n  //   let items = this.getMockSelection();\n  //   // items.forEach(x => name)\n  //   if (term) {\n  //     items = items.filter(x => x.name === \"Battery\");\n  //     console.log(items);\n  //   }\n  //   return of(items).pipe(delay(50));\n\n  // }\n\n  onSerialNumberEvent(event: any) {\n\n    console.log(event.target.value);\n    if (event.target.value.length > 10) {\n\n      this.validateContractForEvent(event.target.value);\n      console.log(\"CHECKING FOR CONTRACT\");\n    } else {\n      console.log(\"NOT CHECKING\");\n    }\n\n  }\n\n  getValidationServiceDateStatus(startDate: string, endDate: string) {\n    const date = new Date();\n\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (date > start && date < end) {\n      console.log('✅ date is between the 2 dates');\n      return true;\n    } else {\n      console.log('⛔️ date is not in the range');\n      return false;\n    }\n  }\n\n  public validateContractForEvent(serialNumber: string) {\n\n    this._contractListService\n      .getValidityCheck(serialNumber)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data.actions[0].returnValue);\n\n          if (!data.actions[0].returnValue.ListOfZEBSerialNumber?.Asset[0]) {\n\n            // this.onDatatablessChanged.next(this.rows);\n            console.log(\"EMPTY NOT FOUND\");\n          } else {\n            if ((data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].ListOfServiceDetails.ServiceDetails).length > 0) {\n              console.log(\"IN CONTRACTTTTTTTT....\");\n              this.contractCheckValidation = { isValid: 1, message: \"In Contract\" };\n            } else {\n\n              //Checking for Warranty\n              const inWarranty = this.getValidationServiceDateStatus(data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyStartDate, data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].WarrantyEndDate);\n              if (inWarranty) {\n                this.contractCheckValidation = { isValid: 1, message: \"In Warranty\" };\n              } else {\n                this.contractCheckValidation = { isValid: 2, message: \"Billable\" };\n              }\n\n            }\n            this.repairDevice.deviceModel = data.actions[0].returnValue.ListOfZEBSerialNumber.Asset[0].Product;\n            console.log(\"FOUND\");\n          }\n\n\n        },\n        error => {\n\n          console.log(error)\n\n        }\n      );\n  }\n\n  submit(form) {\n    // this.submitted = true;\n\n    // stop here if form is invalid\n    if (form.invalid) {\n      console.log(\"Invalid Form\");\n      this._toastrService.error(\n        'Please check data before submitting.',\n        'Invalid Data',\n        { positionClass: 'toast-top-right', toastClass: 'toast ngx-toastr', closeButton: true }\n      );\n      return;\n    }\n\n\n\n    // Login\n    // this.loading = true;\n    this._customerListService\n      .addNewCustomer(this.customer)\n      .pipe()\n      .subscribe(\n        data => {\n          console.log(data);\n\n\n          setTimeout(() => {\n            this._toastrService.success(\n              'Customer Added Successfully.',\n              'Success',\n              { positionClass: 'toast-top-center', toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('new-user-sidebar');\n\n          this.resetForm();\n\n        },\n        error => {\n          console.log(error)\n          setTimeout(() => {\n            this._toastrService.success(\n              'You have added a new case. Please proceed with the RMA.',\n              'Case Added Successfully.',\n              { toastClass: 'toast ngx-toastr', closeButton: true }\n            );\n          }, 1000);\n\n          this.toggleSidebar('new-user-sidebar');\n        }\n      );\n\n\n    // this.toggleSidebar('new-user-sidebar');\n  }\n\n  resetForm() {\n    this.customer = new Customer;\n  }\n\n  ngOnInit(): void {\n    // this.selectcategoryMethod();\n    // this.selectSubCategoryMethod();\n\n    // this._rmaFaultSelectionService = new rmaFaultSelectionService();\n\n\n  }\n\n\n\n\n}\n\n","<div class=\"slideout-content\">\n    <!-- Modal to add new user starts-->\n    <div class=\"modalsd modal-slide-in sdfade new-user-modal\" id=\"modals-slide-in\">\n        <div class=\"modal-dialog\">\n            <form class=\"add-new-user modal-content pt-0\" (ngSubmit)=\"(newCaseForm.form.valid)\" #newCaseForm=\"ngForm\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\n                    (click)=\"toggleSidebar('new-user-sidebar')\">\n                    ×\n                </button>\n                <div class=\"modal-header mb-1\">\n                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">New Customer</h5>\n                </div>\n                <div class=\"modal-body flex-grow-1\">\n                    <div class=\"form-group\">\n                        <label for=\"customerName\">Customer Name</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.customerName\" class=\"form-control\" name=\"customerName\"\n                            placeholder=\"Enter Contact Person Name\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"customerEmail\">Customer Email</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.customerEmail\" class=\"form-control\"\n                            name=\"customerEmail\" placeholder=\"Enter Contact Person Email\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyCode\">Company Code</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.companyCode\" class=\"form-control\" name=\"companyCode\"\n                            placeholder=\"Enter Company Code\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyName\">Company Name</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.companyName\" class=\"form-control\" name=\"companyName\"\n                            placeholder=\"Enter Company Name\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress1\">Company Address Line 1</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.deliveryAddressLine1\" class=\"form-control\"\n                            name=\"companyAddress1\" placeholder=\"Enter Company Address Line 1\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress2\">Company Address Line 2</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.deliveryAddressLine2\" class=\"form-control\"\n                            name=\"companyAddress2\" placeholder=\"Enter Company Address Line 2\" />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"companyAddress3\">Company Address Line 3</label>\n                        <input type=\"text\" [(ngModel)]=\"customer.deliveryAddressLine3\" class=\"form-control\"\n                            name=\"companyAddress3\" placeholder=\"Enter Company Address Line 3\" />\n                    </div>\n\n                    <button type=\"submit\" class=\"btn btn-primary mr-1\" (click)=\"submit(newCaseForm)\"\n                        rippleEffect>Add</button>\n                    <button type=\"reset\" class=\"btn btn-outline-secondary\" (click)=\"toggleSidebar('new-user-sidebar')\"\n                        rippleEffect>\n                        Cancel\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <!-- Modal to add new user Ends-->\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\n// import { FaultListComponent } from './fault-list/fault-list.component';\n// import { NewFaultSidebarComponent } from './fault-list/new-fault-sidebar/new-fault-sidebar.component';\n// import { FaultEditComponent } from './fault-edit/fault-edit.component';\n\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreSidebarModule } from '@core/components';\n\nimport { InvoiceListService } from 'app/main/apps/invoice/invoice-list/invoice-list.service';\nimport { InvoiceModule } from 'app/main/apps/invoice/invoice.module';\n\nimport { UserEditComponent } from 'app/main/apps/user/user-edit/user-edit.component';\nimport { UserEditService } from 'app/main/apps/user/user-edit/user-edit.service';\n\nimport { UserListComponent } from 'app/main/apps/user/user-list/user-list.component';\nimport { UserListService } from 'app/main/apps/user/user-list/user-list.service';\n\nimport { UserViewComponent } from 'app/main/apps/user/user-view/user-view.component';\nimport { UserViewService } from 'app/main/apps/user/user-view/user-view.service';\nimport { NewUserSidebarComponent } from 'app/main/apps/user/user-list/new-user-sidebar/new-user-sidebar.component';\n// import { FaultListService } from './fault-list/fault-list.service';\n// import { FaultEditService } from './fault-edit/fault-edit.service';\nimport { CoreCardModule } from '@core/components/core-card/core-card.module';\nimport { CsvModule } from '@ctrl/ngx-csv';\n// import { FaultBulkUploadComponent } from './fault-bulk-upload/fault-bulk-upload.component';\n// import { FaultBulkUploadModule } from './fault-bulk-upload/fault-bulk-upload.module';\nimport { ToastrModule } from 'ngx-toastr';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerListService } from './customer-list/customer-list.service';\nimport { NewCustomerSidebarComponent } from './customer-list/new-customer-sidebar/new-customer-sidebar.component';\nimport { EditCustomerSidebarComponent } from './customer-list/edit-customer-sidebar/edit-customer-sidebar.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'customer-list',\n    component: CustomerListComponent,\n    resolve: {\n      uls: CustomerListService\n    },\n    data: { animation: 'CustomerListComponent' }\n  },\n  {\n    path: 'user-view/:id',\n    component: UserViewComponent,\n    resolve: {\n      data: UserViewService,\n      InvoiceListService\n    },\n    data: { path: 'view/:id', animation: 'UserViewComponent' }\n  },\n  // {\n  //   path: 'user-edit/:id',\n  //   component: FaultEditComponent,\n  //   resolve: {\n  //     ues: FaultEditService\n  //   },\n  //   data: { animation: 'UserEditComponent' }\n  // },\n  // {\n  //   path: 'user-view',\n  //   redirectTo: '/apps/user/user-view/2' // Redirection\n  // },\n  // {\n  //   path: 'fault-edit',\n  //   redirectTo: '/repair/fault-edit/2' // Redirection\n  // }\n];\n\n\n\n\n\n@NgModule({\n  declarations: [\n    CustomerListComponent,\n    NewCustomerSidebarComponent,\n    EditCustomerSidebarComponent,\n    // NewFaultSidebarComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    FormsModule,\n    NgbModule,\n    NgSelectModule,\n    Ng2FlatpickrModule,\n    NgxDatatableModule,\n    CorePipesModule,\n    CoreDirectivesModule,\n    InvoiceModule,\n    CoreSidebarModule,\n    CoreCardModule,\n    CsvModule, ToastrModule\n  ],\n  providers: [CustomerListService]\n})\nexport class CustomerMainModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}