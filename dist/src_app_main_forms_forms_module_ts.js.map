{"version":3,"file":"src_app_main_forms_forms_module_ts.js","mappings":"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","sources":["./src/app/main/forms/form-elements/checkbox/checkbox.component.ts","./src/app/main/forms/form-elements/checkbox/checkbox.component.html","./src/app/main/forms/form-elements/checkbox/checkbox.module.ts","./src/app/main/forms/form-elements/checkbox/checkbox.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.component.html","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.module.ts","./src/app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component.html","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module.ts","./src/app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.ts","./src/app/main/forms/form-elements/file-uploader/file-uploader.component.html","./src/app/main/forms/form-elements/file-uploader/file-uploader.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.component.html","./src/app/main/forms/form-elements/flatpickr/flatpickr.module.ts","./src/app/main/forms/form-elements/flatpickr/flatpickr.snippetcode.ts","./src/app/main/forms/form-elements/form-elements.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.ts","./src/app/main/forms/form-elements/input-groups/input-groups.component.html","./src/app/main/forms/form-elements/input-groups/input-groups.module.ts","./src/app/main/forms/form-elements/input-groups/input-groups.snippetcode.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.ts","./src/app/main/forms/form-elements/input-mask/input-mask.component.html","./src/app/main/forms/form-elements/input-mask/input-mask.module.ts","./src/app/main/forms/form-elements/input-mask/input-mask.snippetcode.ts","./src/app/main/forms/form-elements/input/input.component.ts","./src/app/main/forms/form-elements/input/input.component.html","./src/app/main/forms/form-elements/input/input.module.ts","./src/app/main/forms/form-elements/input/input.snippetcode.ts","./src/app/main/forms/form-elements/number-input/number-input.component.ts","./src/app/main/forms/form-elements/number-input/number-input.component.html","./src/app/main/forms/form-elements/number-input/number-input.module.ts","./src/app/main/forms/form-elements/number-input/number-input.snippetcode.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.component.html","./src/app/main/forms/form-elements/quill-editor/quill-editor.module.ts","./src/app/main/forms/form-elements/quill-editor/quill-editor.snippetcode.ts","./src/app/main/forms/form-elements/radio/radio.component.ts","./src/app/main/forms/form-elements/radio/radio.component.html","./src/app/main/forms/form-elements/radio/radio.module.ts","./src/app/main/forms/form-elements/radio/radio.snippetcode.ts","./src/app/main/forms/form-elements/select/data.service.ts","./src/app/main/forms/form-elements/select/select.component.html","./src/app/main/forms/form-elements/select/select.component.ts","./src/app/main/forms/form-elements/select/select.module.ts","./src/app/main/forms/form-elements/switch/switch.component.ts","./src/app/main/forms/form-elements/switch/switch.component.html","./src/app/main/forms/form-elements/switch/switch.module.ts","./src/app/main/forms/form-elements/switch/switch.snippetcode.ts","./src/app/main/forms/form-elements/textarea/textarea.component.ts","./src/app/main/forms/form-elements/textarea/textarea.component.html","./src/app/main/forms/form-elements/textarea/textarea.module.ts","./src/app/main/forms/form-elements/textarea/textarea.snippetcode.ts","./src/app/main/forms/form-layout/form-layout.component.ts","./src/app/main/forms/form-layout/form-layout.component.html","./src/app/main/forms/form-layout/form-layout.module.ts","./src/app/main/forms/form-layout/form-layout.snippetcode.ts","./src/app/main/forms/form-repeater/form-repeater.animation.ts","./src/app/main/forms/form-repeater/form-repeater.component.ts","./src/app/main/forms/form-repeater/form-repeater.component.html","./src/app/main/forms/form-repeater/form-repeater.module.ts","./src/app/main/forms/form-repeater/form-repeater.snippetcode.ts","./src/app/main/forms/form-validation/_helpers/must-match.validator.ts","./src/app/main/forms/form-validation/form-validation.component.ts","./src/app/main/forms/form-validation/form-validation.component.html","./src/app/main/forms/form-validation/form-validation.module.ts","./src/app/main/forms/form-validation/form-validation.snippetcode.ts","./src/app/main/forms/form-wizard/form-wizard.component.ts","./src/app/main/forms/form-wizard/form-wizard.component.html","./src/app/main/forms/form-wizard/form-wizard.module.ts","./src/app/main/forms/forms.module.ts","./node_modules/ngx-mask/__ivy_ngcc__/fesm2015/ngx-mask.js"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/checkbox/checkbox.snippetcode';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html'\n})\nexport class CheckboxComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeCustom = snippet.snippetCodeCustom;\n  public _snippetCodeCustomColor = snippet.snippetCodeCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Checkbox',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Checkbox',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- Content-Header Component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!--  Checkbox Basic Start -->\n    <section id=\"checkbox-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Checkboxes</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox3\"\n                    value=\"checked-disabled\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"inlineCheckbox4\"\n                    value=\"unchecked-disabled\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Basic Ends -->\n\n    <!-- Checkbox Custom Start -->\n    <section id=\"checkbox-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustom\">\n            <h4 class=\"card-title\">Custom Checkboxes</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-checkbox</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                  <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n                  <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Custom Ends -->\n\n    <!--  Checkbox Color Start -->\n    <section id=\"checkbox-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the checkBox use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-checkbox\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n                  <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--  Checkbox Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { CheckboxComponent } from 'app/main/forms/form-elements/checkbox/checkbox.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/checkbox',\n    component: CheckboxComponent,\n    data: { animation: 'checkbox' }\n  }\n];\n\n@NgModule({\n  declarations: [CheckboxComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class CheckboxModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"checked\" checked />\n    <label class=\"form-check-label\" for=\"inlineCheckbox1\">Checked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox2\" value=\"unchecked\" />\n    <label class=\"form-check-label\" for=\"inlineCheckbox2\">Unchecked</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox3\"\n      value=\"checked-disabled\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox3\">Checked disabled</label>\n  </div>\n\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"inlineCheckbox4\"\n      value=\"unchecked-disabled\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineCheckbox4\">Unchecked disabled</label>\n  </div>\n`\n};\nexport const snippetCodeCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"customCheck1\">Checked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n    <label class=\"custom-control-label\" for=\"customCheck2\">Unchecked</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" checked disabled />\n    <label class=\"custom-control-label\" for=\"customCheck3\">Checked disabled</label>\n  </div>\n\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" disabled />\n    <label class=\"custom-control-label\" for=\"customCheck4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeCustomColor: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck1\">Primary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-secondary custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck2\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck2\">Secondary</label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck3\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck3\">Success</label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck5\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck5\">Danger</label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck4\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck4\">Warning</label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck6\" checked />\n    <label class=\"custom-control-label\" for=\"colorCheck6\">Info</label>\n  </div>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgbDateStruct, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport {\n  I18n,\n  CustomDatepickerI18n\n} from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.service';\n\n@Component({\n  selector: 'date-picker-i18n',\n  templateUrl: './date-picker-i18n.component.html',\n  providers: [I18n, { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n }] // define custom NgbDatepickerI18n provider\n})\nexport class DatePickerI18nComponent implements OnInit {\n  public i18nDPdata: NgbDateStruct;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input\n        class=\"form-control\"\n        placeholder=\"yyyy-mm-dd\"\n        name=\"i18n Date Picker\"\n        [(ngModel)]=\"i18nDPdata\"\n        ngbDatepicker\n        #i18nDP=\"ngbDatepicker\"\n      />\n\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary feather icon-calendar\"\n          (click)=\"i18nDP.toggle()\"\n          type=\"button\"\n          rippleEffect\n        ></button>\n      </div>\n    </div>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { DatePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.component';\n\n@NgModule({\n  declarations: [DatePickerI18nComponent],\n  imports: [CommonModule, CoreCommonModule, NgbModule, FormsModule],\n  exports: [DatePickerI18nComponent]\n})\nexport class DatePickerI18nModule {}\n","import { Injectable } from '@angular/core';\nimport { NgbDatepickerI18n, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  fr: {\n    weekdays: ['Lu', 'Ma', 'Me', 'Je', 'Ve', 'Sa', 'Di'],\n    months: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Juin', 'Juil', 'Aou', 'Sep', 'Oct', 'Nov', 'Déc']\n  }\n};\n\n@Injectable()\nexport class I18n {\n  language = 'fr';\n}\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getWeekdayLabel(weekday: number): string {\n    return I18N_VALUES[this._i18n.language].weekdays[weekday - 1];\n  }\n  getMonthShortName(month: number): string {\n    return I18N_VALUES[this._i18n.language].months[month - 1];\n  }\n  getMonthFullName(month: number): string {\n    return this.getMonthShortName(month);\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n  }\n\n}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\n\nimport { NgbDateStruct, NgbCalendar, NgbDate, NgbDateParserFormatter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\nimport * as snippet from 'app/main/forms/form-elements/date-time-picker/date-time-picker.snippetcode';\n\n@Component({\n  selector: 'app-date-time-picker',\n  templateUrl: './date-time-picker.component.html',\n  styleUrls: ['./date-time-picker.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DateTimePickerComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicDP = snippet.snippetCodeBasicDP;\n  public _snippetCodeDisabledDP = snippet.snippetCodeDisabledDP;\n  public _snippetCodeMinMaxDP = snippet.snippetCodeMinMaxDP;\n  public _snippetCodeCustomFooterDP = snippet.snippetCodeCustomFooterDP;\n  public _snippetCodeI18n = snippet.snippetCodeI18n;\n  public _snippetCodeCustomDay = snippet.snippetCodeCustomDay;\n  public _snippetCodeRangeSelectionDP = snippet.snippetCodeRangeSelectionDP;\n  public _snippetCodeBasicTP = snippet.snippetCodeBasicTP;\n  public _snippetCodeMeridianTP = snippet.snippetCodeMeridianTP;\n  public _snippetCodeCustomTP = snippet.snippetCodeCustomTP;\n  public _snippetCodeSpinnerTP = snippet.snippetCodeSpinnerTP;\n  public _snippetCodeCustomValidationTP = snippet.snippetCodeCustomValidationTP;\n  public _snippetCodei18nTP = snippet.snippetCodei18nTP;\n\n  // Basic Date Picker\n  public basicDPdata: NgbDateStruct;\n\n  // Disabled Date Picker\n  public disabled = true;\n\n  // Min-Max Date Picker\n  public MinMaxDPdata: NgbDateStruct;\n\n  // Custom Footer Date Picker\n  public customFooterDPdata: NgbDateStruct;\n\n  // Custom Day Date Picker\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  // Range selection Date Picker\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  // Custom Validation Time Picker\n  public customValidationTP = new UntypedFormControl('', (control: UntypedFormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n\n  /**\n   * Constructor\n   *\n   * @param {NgbCalendar} calendar\n   * @param {NgbDateParserFormatter} formatter\n   */\n  constructor(private calendar: NgbCalendar, public formatter: NgbDateParserFormatter) {\n    this.fromDate = calendar.getToday();\n    this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);\n  }\n\n  /**\n   * Range selection Date Picker\n   *\n   * @param date\n   */\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  /**\n   * Is Hovered\n   *\n   * @param date\n   */\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate)\n    );\n  }\n\n  /**\n   * Is Inside\n   *\n   * @param date\n   */\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  /**\n   *  Is Range\n   *\n   * @param date\n   */\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n\n  /**\n   * Custom Day Date Picker\n   *\n   * @param date\n   * @param current\n   */\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) => date.month !== current.month;\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  /**\n   * Meridian Time Picker\n   */\n  meridianTPtoggle() {\n    this.meridianTP = !this.meridianTP;\n  }\n\n  /**\n   * Custom Time Picker\n   */\n  customTPtoggleSeconds() {\n    this.customTPseconds = !this.customTPseconds;\n  }\n\n  /**\n   * Spinner Time Picker\n   */\n  spinnerTPtoggle() {\n    this.spinnerTP = !this.spinnerTP;\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Date & Time Picker',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Date & Time Picker',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <section class=\"basic-disabled-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicDP\">\n            <h4 class=\"card-title\">Basic Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>ngbDatepicker</code> along with <code>input</code> element to create basic date picker.\n              </p>\n              <!-- Basic Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Basic Date Picker\"\n                      [(ngModel)]=\"basicDPdata\"\n                      ngbDatepicker\n                      #basicDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"basicDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n              <!--/ Basic Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDisabledDP\">\n            <h4 class=\"card-title\">Disabled Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Bind <code>[disabled]</code> by passing <code>true</code> to disable date picker & <code>false</code> to\n                enable date picker.\n              </p>\n              <!-- Disabled Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Disabled Date Picker\"\n                      ngbDatepicker\n                      #disabledDP=\"ngbDatepicker\"\n                      [disabled]=\"disabled\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"disabledDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <button\n                class=\"btn btn-sm btn-outline-{{ disabled ? 'danger' : 'success' }} my-1\"\n                (click)=\"disabled = !disabled\"\n                rippleEffect\n              >\n                {{ disabled ? 'D I S A B L E D' : 'E N A B L E D' }}\n              </button>\n              <!--/ Disabled Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"min-max-custom-footer-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMaxDP\">\n            <h4 class=\"card-title\">Min-Max Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[maxDate]</code> & <code>[minDate]</code> input properties to set upper limit and lower limit\n                of date picker.\n              </p>\n              <!-- Min-Max Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Min-Max Date Picker\"\n                      [(ngModel)]=\"MinMaxDPdata\"\n                      ngbDatepicker\n                      #MinMaxDP=\"ngbDatepicker\"\n                      [minDate]=\"{ year: 2019, month: 1, day: 1 }\"\n                      [maxDate]=\"{ year: 2020, month: 2, day: 15 }\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"MinMaxDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n              <!--/ Min-Max Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomFooterDP\">\n            <h4 class=\"card-title\">Custom Footer Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[footerTemplate]</code> input property to create custom footer date picker.\n              </p>\n              <!-- Custom Footer Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Footer Date Picker\"\n                      [(ngModel)]=\"customFooterDPdata\"\n                      ngbDatepicker\n                      #customFooterDP=\"ngbDatepicker\"\n                      [footerTemplate]=\"footerTemplate\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"customFooterDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template #footerTemplate>\n                <hr class=\"my-0\" />\n                <button\n                  class=\"btn btn-primary btn-sm m-2 float-left\"\n                  (click)=\"customFooterDPdata = today; customFooterDP.close()\"\n                  rippleEffect\n                >\n                  Today\n                </button>\n                <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>\n                  Close\n                </button>\n              </ng-template>\n              <!--/ Custom Footer Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"i18n-custom-day-DP\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeI18n\">\n            <h4 class=\"card-title\">i18n Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbDatepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-datepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/datepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Date Picker -->\n              <date-picker-i18n></date-picker-i18n>\n              <!--/ i18n Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomDay\">\n            <h4 class=\"card-title\">Custom Day Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>[dayTemplate]</code> input property to create custom day date picker.</p>\n              <!-- Custom Day Date Picker -->\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"Custom Day Date Picker\"\n                      [(ngModel)]=\"CustomDayDPdata\"\n                      ngbDatepicker\n                      [dayTemplate]=\"customDay\"\n                      [markDisabled]=\"isDisabled\"\n                      #CustomDayDP=\"ngbDatepicker\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"CustomDayDP.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n              <ng-template\n                #customDay\n                let-date\n                let-currentMonth=\"currentMonth\"\n                let-selected=\"selected\"\n                let-disabled=\"disabled\"\n                let-focused=\"focused\"\n              >\n                <span\n                  class=\"custom-day\"\n                  [class.weekend]=\"isWeekend(date)\"\n                  [class.focused]=\"focused\"\n                  [class.bg-primary]=\"selected\"\n                  [class.hidden]=\"date.month !== currentMonth\"\n                  [class.text-muted]=\"disabled\"\n                >\n                  {{ date.day }}\n                </span>\n              </ng-template>\n              <!--/ Custom Day Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"range-selection-DP\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRangeSelectionDP\">\n            <h4 class=\"card-title\">Range selection Date Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                To select range of dates use two <code>input</code> elements along with <code>[dayTemplate]</code> &\n                <code>[displayMonths]</code> input properties for lower limit & upper limit respectively.\n              </p>\n              <!-- Range selection Date Picker -->\n\n              <form class=\"form-inline\">\n                <div class=\"form-group\">\n                  <div class=\"input-group w-0\">\n                    <input\n                      name=\"datepicker\"\n                      class=\"form-control\"\n                      ngbDatepicker\n                      #datepicker=\"ngbDatepicker\"\n                      [autoClose]=\"'outside'\"\n                      (dateSelect)=\"onDateSelection($event)\"\n                      [displayMonths]=\"2\"\n                      [dayTemplate]=\"rangeSelectionDP\"\n                      outsideDays=\"hidden\"\n                      [startDate]=\"fromDate!\"\n                    />\n                    <ng-template #rangeSelectionDP let-date let-focused=\"focused\">\n                      <span\n                        class=\"custom-day\"\n                        [class.focused]=\"focused\"\n                        [class.range]=\"isRange(date)\"\n                        [class.faded]=\"isHovered(date) || isInside(date)\"\n                        (mouseenter)=\"hoveredDate = date\"\n                        (mouseleave)=\"hoveredDate = null\"\n                      >\n                        {{ date.day }}\n                      </span>\n                    </ng-template>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpFromDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpFromDate\"\n                      [value]=\"formatter.format(fromDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group ml-sm-2\">\n                  <div class=\"input-group\">\n                    <input\n                      #dpToDate\n                      class=\"form-control\"\n                      placeholder=\"yyyy-mm-dd\"\n                      name=\"dpToDate\"\n                      [value]=\"formatter.format(toDate)\"\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        class=\"btn btn-outline-secondary feather icon-calendar\"\n                        (click)=\"datepicker.toggle()\"\n                        type=\"button\"\n                        rippleEffect\n                      ></button>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              <hr />\n              <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n              <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n              <!--/ Range selection Date Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"basic-meridian-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicTP\">\n            <h4 class=\"card-title\">Basic Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ngb-timepicker</code> to create basic Time Picker with spinner.</p>\n              <!-- Basic Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ basicTP | json }}</pre>\n              <!--/ Basic Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMeridianTP\">\n            <h4 class=\"card-title\">Meridian Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[meridian]=\"true\"</code> along with <code>ngb-timepicker</code> to show meridian time.\n              </p>\n              <!-- Meridian Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ meridianTP ? 'success' : 'danger' }}\"\n                (click)=\"meridianTPtoggle()\"\n                rippleEffect\n              >\n                Meridian - {{ meridianTP ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ meridianTPdata | json }}</pre>\n              <!--/ Meridian Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"custom-spinner-time-picker\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomTP\">\n            <h4 class=\"card-title\">Custom Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[seconds]=\"true\"</code> along with <code>ngb-timepicker</code> to show seconds.\n              </p>\n              <!-- Custom Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n              <button\n                class=\"btn btn-sm btn-outline-{{ customTPseconds ? 'success' : 'danger' }}\"\n                (click)=\"customTPtoggleSeconds()\"\n                rippleEffect\n              >\n                Seconds - {{ customTPseconds ? 'ON' : 'OFF' }}\n              </button>\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customTPtime | json }}</pre>\n              <!--/ Custom Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSpinnerTP\">\n            <h4 class=\"card-title\">Spinner Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[spinners]=\"false\"</code> along with <code>ngb-timepicker</code> to hide spinners.\n              </p>\n              <!-- Spinner Time Picker -->\n              <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n              <hr />\n\n              <button\n                class=\"m-t-1 btn btn-sm btn-outline-{{ spinnerTP ? 'success' : 'danger' }}\"\n                (click)=\"spinnerTPtoggle()\"\n                rippleEffect\n              >\n                Spinners - {{ spinnerTP ? 'ON' : 'OFF' }}\n              </button>\n              <!--/ Spinner Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section class=\"validation-i18n-time-picker\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCustomValidationTP\">\n            <h4 class=\"card-title\">Custom Validation Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>[formControl]</code> along with <code>ngb-timepicker</code> to create custom validation.\n              </p>\n              <!-- Custom Validation Time Picker -->\n              <div class=\"form-group\">\n                <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n                <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n                <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n                  <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n                  <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n                  <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n                </div>\n              </div>\n\n              <hr />\n              <pre class=\"p-1\">Selected time: {{ customValidationTP.value | json }}</pre>\n              <!--/ Custom Validation Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodei18nTP\">\n            <h4 class=\"card-title\">i18n Time Picker</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>NgbTimepickerI18n</code> extended component of ng-bootstrap to create i18n component. Read the\n                official ngb-timepicker\n                <a href=\"https://ng-bootstrap.github.io/#/components/timepicker/examples#i18n\">Documentation</a> for a\n                full list of instructions and other options.\n              </p>\n              <!-- i18n Time Picker -->\n              <time-picker-i18n></time-picker-i18n>\n              <!--/ i18n Time Picker -->\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TimePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.module';\nimport { DatePickerI18nModule } from 'app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module';\n\nimport { DateTimePickerComponent } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/date-time-picker',\n    component: DateTimePickerComponent,\n    data: { animation: 'date-time-picker' }\n  }\n];\n\n@NgModule({\n  declarations: [DateTimePickerComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    TimePickerI18nModule,\n    DatePickerI18nModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DateTimePickerModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicDP: snippetCode = {\n  html: `\n  <!-- Basic Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Basic Date Picker\" [(ngModel)]=\"basicDPdata\"\n          ngbDatepicker #basicDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"basicDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ basicDPdata | json }}</pre>\n  <!--/ Basic Date Picker -->\n  `,\n  ts: `\n  public basicDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeDisabledDP: snippetCode = {\n  html: `\n  <!-- Disabled Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Disabled Date Picker\" ngbDatepicker\n          #disabledDP=\"ngbDatepicker\" [disabled]=\"disabled\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"disabledDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <button class=\"btn btn-sm btn-outline-{{disabled ? 'danger' : 'success'}} my-1\" (click)=\"disabled = !disabled\" rippleEffect>\n    {{ disabled ? \"D I S A B L E D\" : \"E N A B L E D\"}}\n  </button>\n  <!--/ Disabled Date Picker -->\n  `,\n  ts: `\n  public disabled = true;\n\n  `\n};\nexport const snippetCodeMinMaxDP: snippetCode = {\n  html: `\n  <!-- Min-Max Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Min-Max Date Picker\" [(ngModel)]=\"MinMaxDPdata\"\n          ngbDatepicker #MinMaxDP=\"ngbDatepicker\" [minDate]=\"{year: 2019, month: 1, day: 1}\"\n          [maxDate]=\"{year: 2020, month: 2, day: 15}\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"MinMaxDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <pre class=\"mt-2 p-1\">Model: {{ MinMaxDPdata | json }}</pre>\n  <!--/ Min-Max Date Picker -->\n  `,\n  ts: `\n  public MinMaxDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeCustomFooterDP: snippetCode = {\n  html: `\n  <!-- Custom Footer Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Footer Date Picker\"\n          [(ngModel)]=\"customFooterDPdata\" ngbDatepicker #customFooterDP=\"ngbDatepicker\"\n          [footerTemplate]=\"footerTemplate\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"customFooterDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #footerTemplate>\n    <hr class=\"my-0\">\n    <button class=\"btn btn-primary btn-sm m-2 float-left\"\n      (click)=\"customFooterDPdata = today; customFooterDP.close()\" rippleEffect>Today</button>\n    <button class=\"btn btn-secondary btn-sm m-2 float-right\" (click)=\"customFooterDP.close()\" rippleEffect>Close</button>\n  </ng-template>\n  <!--/ Custom Footer Date Picker -->\n  `,\n  ts: `\n  public customFooterDPdata: NgbDateStruct;\n\n  `\n};\nexport const snippetCodeI18n: snippetCode = {\n  html: `\n  <date-picker-i18n></date-picker-i18n>\n  `\n};\nexport const snippetCodeCustomDay: snippetCode = {\n  html: `\n  <!-- Custom Day Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"Custom Day Date Picker\"\n          [(ngModel)]=\"CustomDayDPdata\" ngbDatepicker [dayTemplate]=\"customDay\" [markDisabled]=\"isDisabled\"\n          #CustomDayDP=\"ngbDatepicker\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"CustomDayDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <ng-template #customDay let-date let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\"\n    let-focused=\"focused\">\n    <span class=\"custom-day\" [class.weekend]=\"isWeekend(date)\" [class.focused]=\"focused\"\n      [class.bg-primary]=\"selected\" [class.hidden]=\"date.month !== currentMonth\" [class.text-muted]=\"disabled\">\n      {{ date.day }}\n    </span>\n  </ng-template>\n  <!--/ Custom Day Date Picker -->\n  `,\n  ts: `\n  public CustomDayDPdata: NgbDateStruct;\n  public today = this.calendar.getToday();\n\n  isWeekend = (date: NgbDate) => this.calendar.getWeekday(date) >= 6;\n\n  isDisabled = (date: NgbDate, current: { month: number; year: number }) =>\n  date.month !== current.month;\n  `\n};\nexport const snippetCodeRangeSelectionDP: snippetCode = {\n  html: `\n  <!-- Range selection Date Picker -->\n  <form class=\"form-inline\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <input name=\"datepicker\" class=\"form-control\" ngbDatepicker #rangeSelectionDP=\"ngbDatepicker\"\n          [autoClose]=\"'outside'\" (dateSelect)=\"onDateSelection($event)\" [displayMonths]=\"2\" [dayTemplate]=\"t\"\n          outsideDays=\"hidden\" [startDate]=\"fromDate!\" [value]=\"formatter.format(today)\">\n        <ng-template #t let-date let-focused=\"focused\">\n          <span class=\"custom-day\" [class.focused]=\"focused\" [class.range]=\"isRange(date)\"\n            [class.faded]=\"isHovered(date) || isInside(date)\" (mouseenter)=\"hoveredDate = date\"\n            (mouseleave)=\"hoveredDate = null\">\n            {{ date.day }}\n          </span>\n        </ng-template>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group ml-sm-2 mt\">\n      <div class=\"input-group\">\n        <input #dpToDate class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dpToDate\"\n          [value]=\"formatter.format(toDate)\">\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary feather icon-calendar\" (click)=\"rangeSelectionDP.toggle()\"\n            type=\"button\" rippleEffect></button>\n        </div>\n      </div>\n    </div>\n  </form>\n  <hr />\n  <pre class=\"mt-2 p-1\">From date model: {{ fromDate | json }}</pre>\n  <pre class=\"mt-2 p-1\">To date model: {{ toDate | json }}</pre>\n  <!--/ Range selection Date Picker -->\n  `,\n  ts: `\n  public hoveredDate: NgbDate | null = null;\n  public fromDate: NgbDate | null;\n  public toDate: NgbDate | null;\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (\n      this.fromDate &&\n      !this.toDate &&\n      date &&\n      date.after(this.fromDate)\n    ) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n  }\n\n  isHovered(date: NgbDate) {\n    return (\n      this.fromDate &&\n      !this.toDate &&\n      this.hoveredDate &&\n      date.after(this.fromDate) &&\n      date.before(this.hoveredDate)\n    );\n  }\n\n  isInside(date: NgbDate) {\n    return this.toDate && date.after(this.fromDate) && date.before(this.toDate);\n  }\n\n  isRange(date: NgbDate) {\n    return (\n      date.equals(this.fromDate) ||\n      (this.toDate && date.equals(this.toDate)) ||\n      this.isInside(date) ||\n      this.isHovered(date)\n    );\n  }\n  `\n};\n\nexport const snippetCodeBasicTP: snippetCode = {\n  html: `\n  <!-- Basic Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"basicTP\"></ngb-timepicker>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{basicTP | json}}</pre>\n  <!--/ Basic Time Picker -->\n  `,\n  ts: `\n  // Basic Time Picker\n  public basicTP = { hour: 13, minute: 30 };\n  `\n};\nexport const snippetCodeMeridianTP: snippetCode = {\n  html: `\n  <!-- Meridian Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"meridianTPdata\" [meridian]=\"meridianTP\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{meridianTP ? 'success' : 'danger'}}\" (click)=\"meridianTPtoggle()\">\n    Meridian - {{meridianTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{meridianTPdata | json}}</pre>\n  <!--/ Meridian Time Picker -->\n  `,\n  ts: `\n  // Meridian Time Picker\n  public meridianTPdata = { hour: 13, minute: 30 };\n  public meridianTP = true;\n  `\n};\nexport const snippetCodeCustomTP: snippetCode = {\n  html: `\n  <!-- Custom Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"customTPtime\" [seconds]=\"customTPseconds\"></ngb-timepicker>\n  <button class=\"btn btn-sm btn-outline-{{customTPseconds ? 'success' : 'danger'}}\"\n    (click)=\"customTPtoggleSeconds()\" rippleEffect>\n    Seconds - {{customTPseconds ? \"ON\" : \"OFF\"}}\n  </button>\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customTPtime | json}}</pre>\n  <!--/ Custom Time Picker -->\n  `,\n  ts: `\n  // Custom Time Picker\n  public customTPtime: NgbTimeStruct = { hour: 13, minute: 30, second: 30 };\n  public customTPseconds = true;\n  `\n};\nexport const snippetCodeSpinnerTP: snippetCode = {\n  html: `\n  <!-- Spinner Time Picker -->\n  <ngb-timepicker [(ngModel)]=\"spinnerTPtime\" [spinners]=\"spinnerTP\"></ngb-timepicker>\n\n  <hr />\n\n  <button class=\"m-t-1 btn btn-sm btn-outline-{{spinnerTP ? 'success' : 'danger'}}\" (click)=\"snipperTPtoggle()\" rippleEffect>\n    Spinners - {{spinnerTP ? \"ON\" : \"OFF\"}}\n  </button>\n  <!--/ Spinner Time Picker -->\n  `,\n  ts: `\n  // Spinner Time Picker\n  public spinnerTPtime = { hour: 13, minute: 30 };\n  public spinnerTP = true;\n\n  `\n};\nexport const snippetCodeCustomValidationTP: snippetCode = {\n  html: `\n  <!-- Custom Validation Time Picker -->\n  <div class=\"form-group\">\n    <ngb-timepicker [formControl]=\"customValidationTP\" required></ngb-timepicker>\n    <div *ngIf=\"customValidationTP.valid\" class=\"small form-text text-success\">Great choice</div>\n    <div *ngIf=\"customValidationTP.errors\" class=\"small form-text text-danger\">\n      <div *ngIf=\"customValidationTP.errors['required']\">Select some time during lunchtime</div>\n      <div *ngIf=\"customValidationTP.errors['tooLate']\">Oh no, it's way too late</div>\n      <div *ngIf=\"customValidationTP.errors['tooEarly']\">It's a bit too early</div>\n    </div>\n  </div>\n\n  <hr>\n  <pre class=\"p-1\">Selected time: {{customValidationTP.value | json}}</pre>\n  <!--/ Custom Validation Time Picker -->\n  `,\n  ts: `\n  // Custom Validation Time Picker\n  public customValidationTP = new FormControl('', (control: FormControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (value.hour < 12) {\n      return { tooEarly: true };\n    }\n    if (value.hour > 13) {\n      return { tooLate: true };\n    }\n\n    return null;\n  });\n  `\n};\nexport const snippetCodei18nTP: snippetCode = {\n  html: `\n  <!-- i18n Time Picker -->\n  <time-picker-i18n></time-picker-i18n>\n  <!--/ i18n Time Picker -->\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'time-picker-i18n',\n  templateUrl: './time-picker-i18n.component.html'\n})\nexport class TimePickerI18nComponent implements OnInit {\n  model = { hour: 13, minute: 30 };\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<ngb-timepicker [(ngModel)]=\"model\" [meridian]=\"true\"></ngb-timepicker>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbModule, NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TimePickerI18nComponent } from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.component';\nimport {\n  CustomTimepickerI18n,\n  I18n\n} from 'app/main/forms/form-elements/date-time-picker/time-picker-i18n/time-picker-i18n.service';\n\n@NgModule({\n  declarations: [TimePickerI18nComponent],\n  imports: [CommonModule, NgbModule, FormsModule],\n  exports: [TimePickerI18nComponent],\n  providers: [I18n, { provide: NgbTimepickerI18n, useClass: CustomTimepickerI18n }] // define custom NgbTimepickerI18n provider\n})\nexport class TimePickerI18nModule {}\n","import { Injectable } from '@angular/core';\n\nimport { NgbTimepickerI18n } from '@ng-bootstrap/ng-bootstrap';\n\nconst I18N_VALUES = {\n  el: { periods: ['πμ', 'μμ'] }\n  // other languages you would support\n};\n\n// Define a service holding the language. You probably already have one if your app is i18ned. Or you could also\n// use the Angular LOCALE_ID value\n@Injectable()\nexport class I18n {\n  language = 'el';\n}\n\n// Define custom service providing the \"AM\" and \"PM\" translations.\n@Injectable()\nexport class CustomTimepickerI18n extends NgbTimepickerI18n {\n  constructor(private _i18n: I18n) {\n    super();\n  }\n\n  getMorningPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[0];\n  }\n\n  getAfternoonPeriod(): string {\n    return I18N_VALUES[this._i18n.language].periods[1];\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { FileUploader } from 'ng2-file-upload';\n\nconst URL = 'https://your-url.com';\n\n@Component({\n  selector: 'app-file-uploader',\n  templateUrl: './file-uploader.component.html',\n  styleUrls: ['./file-uploader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileUploaderComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public hasAnotherDropZoneOver: boolean = false;\n  public hasBaseDropZoneOver: boolean = false;\n  public uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n  });\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'File Uploader',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'File Uploader',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- ngb-alert component -->\n    <ngb-alert [type]=\"'warning'\" [dismissible]=\"false\">\n      <div class=\"alert-body\">\n        <strong>Note:</strong> File Uploader is for demo purpose only. So, you cannot upload files from here. For\n        Backend connectivity Refer this official\n        <a class=\"alert-link\" href=\"https://valor-software.com/ng2-file-upload/\" target=\"_blank\">documentation</a>.\n      </div>\n    </ngb-alert>\n    <!--/ ngb-alert component -->\n    <!-- File Uploader -->\n    <section id=\"file-upload\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over': hasBaseDropZoneOver }\"\n                (fileOver)=\"fileOverBase($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Drop Files Here To Upload\n              </div>\n            </div>\n            <div class=\"col-md-12 col-lg-6\">\n              <div\n                ng2FileDrop\n                [ngClass]=\"{ 'file-drop-over-another': hasAnotherDropZoneOver }\"\n                (fileOver)=\"fileOverAnother($event)\"\n                [uploader]=\"uploader\"\n                class=\"py-5 mb-3 text-center font-medium-5 text-uppercase file-drop-zone\"\n              >\n                Another dropzone\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-3\">\n              <h4>Select files</h4>\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-multiple\">Multiple:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    multiple\n                    id=\"file-upload-multiple\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n\n              <fieldset class=\"form-group\">\n                <label for=\"file-upload-single\">Single:</label>\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    class=\"custom-file-input\"\n                    type=\"file\"\n                    ng2FileSelect\n                    [uploader]=\"uploader\"\n                    id=\"file-upload-single\"\n                  />\n                  <label class=\"custom-file-label\">Choose file</label>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"col-lg-9 overflow-auto\">\n              <div class=\"d-flex justify-content-between mb-1\">\n                <h4>Upload queue</h4>\n                <p>Queue length: {{ uploader?.queue?.length }}</p>\n              </div>\n\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                    <th>Progress</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let item of uploader.queue\">\n                    <td>\n                      <strong>{{ item?.file?.name }}</strong>\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>\n                      {{ item?.file?.size / 1024 / 1024 | number: '.2' }} MB\n                    </td>\n                    <td *ngIf=\"uploader.options.isHTML5\">\n                      <ngb-progressbar type=\"primary\" [value]=\"item.progress\"></ngb-progressbar>\n                    </td>\n                    <td class=\"text-center\">\n                      <span *ngIf=\"item.isSuccess\"><i data-feather=\"check\"></i></span>\n                      <span *ngIf=\"item.isCancel\"><i data-feather=\"slash\"></i></span>\n                      <span *ngIf=\"item.isError\"><i data-feather=\"x-circle\"></i></span>\n                    </td>\n                    <td nowrap>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-success btn-sm mr-50\"\n                        (click)=\"item.upload()\"\n                        [disabled]=\"item.isReady || item.isUploading || item.isSuccess\"\n                        rippleEffect\n                      >\n                        <span data-feather=\"upload\"></span>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-warning btn-sm mr-50\"\n                        (click)=\"item.cancel()\"\n                        [disabled]=\"!item.isUploading\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"slash\"></i>\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-raised btn-outline-danger btn-sm\"\n                        (click)=\"item.remove()\"\n                        rippleEffect\n                      >\n                        <i data-feather=\"trash\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div id=\"\">\n                <p class=\"mt-1\">Queue progress:</p>\n                <ngb-progressbar class=\"mb-1\" type=\"primary\" [value]=\"uploader.progress\"></ngb-progressbar>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-primary mb-1 mb-sm-0\"\n                  (click)=\"uploader.uploadAll()\"\n                  [disabled]=\"!uploader.getNotUploadedItems().length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"upload\" class=\"mr-25\"></span> Upload all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn mr-1 btn-outline-warning mb-1 mb-sm-0\"\n                  (click)=\"uploader.cancelAll()\"\n                  [disabled]=\"!uploader.isUploading\"\n                  rippleEffect\n                >\n                  <span data-feather=\"slash\" class=\"mr-25\"></span> Cancel all\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-danger mb-1 mb-sm-0\"\n                  (click)=\"uploader.clearQueue()\"\n                  [disabled]=\"!uploader.queue.length\"\n                  rippleEffect\n                >\n                  <span data-feather=\"trash\" class=\"mr-25\"></span> Remove all\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!--/ File Uploader -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploadModule } from 'ng2-file-upload';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FileUploaderComponent } from 'app/main/forms/form-elements/file-uploader/file-uploader.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/file-uploader',\n    component: FileUploaderComponent,\n    data: { animation: 'file-uploader' }\n  }\n];\n\n@NgModule({\n  declarations: [FileUploaderComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FileUploadModule,\n    CoreCommonModule\n  ]\n})\nexport class FileUploaderModule {}\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FlatpickrOptions } from 'ng2-flatpickr';\n\nimport {\n  basicDateSnippetCode,\n  dateTimeSnippetCode,\n  DefaultDateSnippetCode,\n  DateRangeSnippetCode,\n  timeSnippetCode,\n  customDateSnippetCode,\n  multipleDateSnippetCode\n} from 'app/main/forms/form-elements/flatpickr/flatpickr.snippetcode';\n\n@Component({\n  selector: 'app-flatpickr',\n  templateUrl: './flatpickr.component.html',\n  styleUrls: ['./flatpickr.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FlatpickrComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicDateOptions: FlatpickrOptions = {\n    altInput: true\n  };\n\n  public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  };\n\n  public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  };\n\n  public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  };\n\n  public timeOptions: FlatpickrOptions = {\n    enableTime: true,\n    noCalendar: true,\n    altInput: true\n  };\n\n  public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  };\n\n  public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  };\n\n  // snippet code variables\n  public _basicDateSnippetCode = basicDateSnippetCode;\n  public _dateTimeSnippetCode = dateTimeSnippetCode;\n  public _DefaultDateSnippetCode = DefaultDateSnippetCode;\n  public _DateRangeSnippetCode = DateRangeSnippetCode;\n  public _timeSnippetCode = timeSnippetCode;\n  public _customDateSnippetCode = customDateSnippetCode;\n  public _multipleDateSnippetCode = multipleDateSnippetCode;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Flatpickr',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Flatpickr',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- flatpickr basic & date-time -->\n    <section id=\"basic-and-time\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_basicDateSnippetCode\">\n            <h4 class=\"card-title\">Basic Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>ng2-flatpickr</code> component to get basic flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_dateTimeSnippetCode\">\n            <h4 class=\"card-title\">Date & Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true</code> option to make date and time flatpickr.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr basic & date-time -->\n\n    <!-- flatpickr default-date & date-range  -->\n    <section id=\"default-date-and-range\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DefaultDateSnippetCode\">\n            <h4 class=\"card-title\">Default Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>defaultDate: '2019-03-19'</code> option to get a default date.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_DateRangeSnippetCode\">\n            <h4 class=\"card-title\">Date Range</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'range'</code> option to select range of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr default-date & date-range  -->\n\n    <!-- flatpickr time & custom date  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_timeSnippetCode\">\n            <h4 class=\"card-title\">Time</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>enableTime: true, noCalendar: true</code> option to only get time.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_customDateSnippetCode\">\n            <h4 class=\"card-title\">Custom Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Use <code>altInput: true, altFormat: 'j-m-Y'</code> option to customize time\n                <a href=\"https://flatpickr.js.org/formatting/\">format</a>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple & custom date  -->\n\n    <!-- flatpickr multiple  -->\n    <section id=\"multiple-and-inline\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_multipleDateSnippetCode\">\n            <h4 class=\"card-title\">Multiple Date</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">Use <code>mode: 'multiple'</code> option to select multiple of dates.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ flatpickr multiple  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { Ng2FlatpickrModule } from 'ng2-flatpickr';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FlatpickrComponent } from 'app/main/forms/form-elements/flatpickr/flatpickr.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/flatpickr',\n    component: FlatpickrComponent,\n    data: { animation: 'flatpickr' }\n  }\n];\n\n@NgModule({\n  declarations: [FlatpickrComponent],\n  imports: [RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, Ng2FlatpickrModule]\n})\nexport class FlatpickrModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const basicDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [ngClass]=\"'firstsecond'\" [config]=\"basicDateOptions\" name=\"basicDate\"></ng2-flatpickr>`,\n  ts: `public basicDateOptions: FlatpickrOptions = {\n  altInput: true\n}`\n};\n\nexport const dateTimeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"dateTimeOptions\" name=\"dateTime\"></ng2-flatpickr>`,\n  ts: `public dateTimeOptions: FlatpickrOptions = {\n    altInput: true,\n    enableTime: true\n  }`\n};\n\nexport const DefaultDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DefaultDateOptions\" name=\"DefaultDate\"></ng2-flatpickr>`,\n  ts: `public DefaultDateOptions: FlatpickrOptions = {\n    defaultDate: '2019-03-19',\n    altInput: true\n  }`\n};\n\nexport const DateRangeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"DateRangeOptions\" name=\"DateRange\"></ng2-flatpickr>`,\n  ts: `public DateRangeOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'range'\n  }`\n};\n\nexport const timeSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"timeOptions\" name=\"time\"></ng2-flatpickr>`,\n  ts: `public   timeOptions: FlatpickrOptions = {\n  enableTime: true,\n  noCalendar: true,\n  altInput: true\n}`\n};\n\nexport const customDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"customDateOptions\" name=\"customDate\"></ng2-flatpickr>`,\n  ts: `public customDateOptions: FlatpickrOptions = {\n    altFormat: 'j-m-Y',\n    altInput: true\n  }`\n};\n\nexport const multipleDateSnippetCode: snippetCode = {\n  html: `<ng2-flatpickr [config]=\"multipleDateOptions\" name=\"multipleDate\"></ng2-flatpickr>`,\n  ts: `public multipleDateOptions: FlatpickrOptions = {\n    altInput: true,\n    mode: 'multiple'\n  }`\n};\n","import { NgModule } from '@angular/core';\n\nimport { CheckboxModule } from 'app/main/forms/form-elements/checkbox/checkbox.module';\nimport { DateTimePickerModule } from 'app/main/forms/form-elements/date-time-picker/date-time-picker.module';\nimport { InputGroupsModule } from 'app/main/forms/form-elements/input-groups/input-groups.module';\nimport { InputMaskModule } from 'app/main/forms/form-elements/input-mask/input-mask.module';\nimport { InputModule } from 'app/main/forms/form-elements/input/input.module';\nimport { NumberInputModule } from 'app/main/forms/form-elements/number-input/number-input.module';\nimport { RadioModule } from 'app/main/forms/form-elements/radio/radio.module';\nimport { SelectModule } from 'app/main/forms/form-elements/select/select.module';\nimport { SwitchModule } from 'app/main/forms/form-elements/switch/switch.module';\nimport { TextareaModule } from 'app/main/forms/form-elements/textarea/textarea.module';\nimport { FileUploaderModule } from 'app/main/forms/form-elements/file-uploader/file-uploader.module';\nimport { QuillEditorModule } from 'app/main/forms/form-elements/quill-editor/quill-editor.module';\nimport { FlatpickrModule } from 'app/main/forms/form-elements/flatpickr/flatpickr.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CheckboxModule,\n    DateTimePickerModule,\n    InputModule,\n    InputGroupsModule,\n    NumberInputModule,\n    RadioModule,\n    SelectModule,\n    SwitchModule,\n    TextareaModule,\n    InputMaskModule,\n    FileUploaderModule,\n    QuillEditorModule,\n    FlatpickrModule\n  ]\n})\nexport class FormElementsModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-groups/input-groups.snippetcode';\n\n@Component({\n  selector: 'app-input-groups',\n  templateUrl: './input-groups.component.html'\n})\nexport class InputGroupsComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public basicPwdShow = false;\n  public mergedPwdShow = false;\n\n  // Snippet Code Variables\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeMerged = snippet.snippetCodeMerged;\n  public _snippetCodeSizing = snippet.snippetCodeSizing;\n  public _snippetCodeCheckBox = snippet.snippetCodeCheckBox;\n  public _snippetCodeButton = snippet.snippetCodeButton;\n  public _snippetCodeDropdown = snippet.snippetCodeDropdown;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Groups',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Groups',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Input Group Basic & Merged Start -->\n    <section id=\"input-group-basic-merged\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search1\"\n                />\n              </div>\n\n              <label for=\"basic-default-password\">Password</label>\n              <div class=\"input-group form-password-toggle mb-2\">\n                <input\n                  [type]=\"basicPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password\"\n                />\n                <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': basicPwdShow,\n                        'icon-eye': !basicPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon1\"\n                />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon2\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n              </div>\n\n              <div class=\"input-group mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMerged\">\n            <h4 class=\"card-title\">Merged</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Search...\"\n                  aria-label=\"Search...\"\n                  aria-describedby=\"basic-addon-search2\"\n                />\n              </div>\n\n              <label for=\"basic-default-password1\">Password</label>\n              <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n                <input\n                  [type]=\"mergedPwdShow ? 'text' : 'password'\"\n                  class=\"form-control\"\n                  id=\"basic-default-password1\"\n                  placeholder=\"Your Password\"\n                  aria-describedby=\"basic-default-password1\"\n                />\n                <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n                  <span class=\"input-group-text cursor-pointer\"\n                    ><i\n                      class=\"feather\"\n                      [ngClass]=\"{\n                        'icon-eye-off': mergedPwdShow,\n                        'icon-eye': !mergedPwdShow\n                      }\"\n                    ></i\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n                </div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Username\"\n                  aria-label=\"Username\"\n                  aria-describedby=\"basic-addon5\"\n                />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Recipient's username\"\n                  aria-label=\"Recipient's username\"\n                  aria-describedby=\"basic-addon6\"\n                />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n              </div>\n\n              <div class=\"input-group input-group-merge mb-2\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">$</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n                <div class=\"input-group-append\">\n                  <span class=\"input-group-text\">.00</span>\n                </div>\n              </div>\n\n              <div class=\"input-group input-group-merge\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">With textarea</span>\n                </div>\n                <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Basic & Merged Ends -->\n\n    <!-- Input Group Sizing & Checkbox and radio addons Start -->\n    <section id=\"input-group-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizing\">\n            <h4 class=\"card-title\">Sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"input-group input-group-lg mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group mb-1\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n\n              <div class=\"input-group input-group-sm\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\">@</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCheckBox\">\n            <h4 class=\"card-title\">Checkbox and radio addons</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"checkbox\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <input type=\"radio\" />\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n                <div class=\"col-md\">\n                  <!-- Custom checkbox -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                            <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md\">\n                  <!-- Custom radio -->\n                  <div class=\"form-group\">\n                    <div class=\"input-group\">\n                      <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">\n                          <div class=\"custom-control custom-radio\">\n                            <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                            <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n                          </div>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Group Sizing & Checkbox and radio addons Ends -->\n    <!-- Inputs Group with Buttons -->\n    <section id=\"input-group-buttons\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeButton\">\n            <h4 class=\"card-title\">Input Groups with Buttons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after </b>\n                <code>&lt;input&gt;</code>.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"Button on right\"\n                      aria-describedby=\"button-addon2\"\n                    />\n                    <div class=\"input-group-append\" id=\"button-addon2\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n                        <i data-feather=\"search\"></i>\n                      </button>\n                    </div>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n                    <div class=\"input-group-append\">\n                      <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Buttons end -->\n\n    <!-- Inputs Group with Dropdown -->\n    <section id=\"input-group-dropdown\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDropdown\">\n            <h4 class=\"card-title\">Input Groups with Dropdown</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n                to get input group with dropdown.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n                    </div>\n                  </fieldset>\n                </div>\n                <div class=\"col-md-6 col-12 mb-1\">\n                  <fieldset>\n                    <div class=\"input-group\">\n                      <div ngbDropdown class=\"input-group-prepend\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          <i data-feather=\"edit-2\"></i>\n                        </button>\n                        <div ngbDropdownMenu>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n                      <div ngbDropdown class=\"input-group-append\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-outline-primary\"\n                          ngbDropdownToggle\n                          data-toggle=\"dropdown\"\n                          aria-haspopup=\"true\"\n                          aria-expanded=\"false\"\n                          rippleEffect\n                        >\n                          Action\n                        </button>\n                        <div ngbDropdownMenu class=\"dropdown-menu-right\">\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n                          <div role=\"separator\" class=\"dropdown-divider\"></div>\n                          <a ngbDropdownItem href=\"javascript:void(0)\">Separated link</a>\n                        </div>\n                      </div>\n                    </div>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Inputs Group with Dropdown end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputGroupsComponent } from 'app/main/forms/form-elements/input-groups/input-groups.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-groups',\n    component: InputGroupsComponent,\n    data: { animation: 'input-groups' }\n  }\n];\n\n@NgModule({\n  declarations: [InputGroupsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CoreCommonModule,\n    CardSnippetModule,\n    FormsModule\n  ]\n})\nexport class InputGroupsModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search1\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search1\"\n    />\n  </div>\n\n  <label for=\"basic-default-password\">Password</label>\n  <div class=\"input-group form-password-toggle mb-2\">\n    <input\n      [type]=\"basicPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password\"\n    />\n    <div class=\"input-group-append\" (click)=\"basicPwdShow = !basicPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': basicPwdShow,\n            'icon-eye': !basicPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon2\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon2\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon3\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url3\" aria-describedby=\"basic-addon3\" />\n  </div>\n\n  <div class=\"input-group mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public basicPwdShow = false;\n  `\n};\n\nexport const snippetCodeMerged: snippetCode = {\n  html: `\n  <div class=\"card-body\">\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon-search2\"><i data-feather=\"search\"></i></span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Search...\"\n      aria-label=\"Search...\"\n      aria-describedby=\"basic-addon-search2\"\n    />\n  </div>\n\n  <label for=\"basic-default-password1\">Password</label>\n  <div class=\"input-group input-group-merge form-password-toggle mb-2\">\n    <input\n      [type]=\"mergedPwdShow ? 'text' : 'password'\"\n      class=\"form-control\"\n      id=\"basic-default-password1\"\n      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n      aria-describedby=\"basic-default-password1\"\n    />\n    <div class=\"input-group-append\" (click)=\"mergedPwdShow = !mergedPwdShow\">\n      <span class=\"input-group-text cursor-pointer\"\n        ><i\n          class=\"feather\"\n          [ngClass]=\"{\n            'icon-eye-off': mergedPwdShow,\n            'icon-eye': !mergedPwdShow\n          }\"\n        ></i\n      ></span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon5\">@</span>\n    </div>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n      aria-label=\"Username\"\n      aria-describedby=\"basic-addon5\"\n    />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Recipient's username\"\n      aria-label=\"Recipient's username\"\n      aria-describedby=\"basic-addon6\"\n    />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\" id=\"basic-addon6\">@example.com</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon7\">https://example.com/users/</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" id=\"basic-url7\" aria-describedby=\"basic-addon7\" />\n  </div>\n\n  <div class=\"input-group input-group-merge mb-2\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">$</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"100\" aria-label=\"Amount (to the nearest dollar)\" />\n    <div class=\"input-group-append\">\n      <span class=\"input-group-text\">.00</span>\n    </div>\n  </div>\n\n  <div class=\"input-group input-group-merge\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">With textarea</span>\n    </div>\n    <textarea class=\"form-control\" aria-label=\"With textarea\"></textarea>\n  </div>\n</div>\n  `,\n  ts: `\n  public mergedPwdShow = false;\n  `\n};\n\nexport const snippetCodeSizing: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"input-group input-group-lg mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group mb-1\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n\n  <div class=\"input-group input-group-sm\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">@</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" />\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeCheckBox: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <div class=\"row\">\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"checkbox\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <input type=\"radio\" />\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <small class=\"font-weight-semibold w-100 ml-1 my-1\">Custom checkbox and radio</small>\n    <div class=\"col-md\">\n      <!-- Custom checkbox -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-checkbox\">\n                <input type=\"checkbox\" class=\"custom-control-input\" id=\"colorCheck1\" />\n                <label class=\"custom-control-label\" for=\"colorCheck1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md\">\n      <!-- Custom radio -->\n      <div class=\"form-group\">\n        <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">\n              <div class=\"custom-control custom-radio\">\n                <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" />\n                <label class=\"custom-control-label\" for=\"customRadio1\"></label>\n              </div>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Message\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeButton: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add span with <code>.input-group-btn</code> class and add button inside <b>before</b> or <b>after</b>\n    <code>&lt;input&gt;</code>.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Button on right\"\n          aria-describedby=\"button-addon2\"\n        />\n        <div class=\"input-group-append\" id=\"button-addon2\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Go</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>\n            <i data-feather=\"search\"></i>\n          </button>\n        </div>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Button on both side\" aria-label=\"Amount\" />\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-primary\" type=\"button\" rippleEffect>Search !</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  `\n};\n\nexport const snippetCodeDropdown: snippetCode = {\n  html: `\n<div class=\"card-body\">\n  <p class=\"card-text\">\n    Add <code>&lt;button&gt;</code> with <code>.dropdown-toggle</code> class and add dropdown-menu after it\n    to get input group with dropdown.\n  </p>\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on left\" />\n        </div>\n      </fieldset>\n    </div>\n    <div class=\"col-md-6 col-12 mb-1\">\n      <fieldset>\n        <div class=\"input-group\">\n          <div ngbDropdown class=\"input-group-prepend\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              <i data-feather=\"edit-2\"></i>\n            </button>\n            <div ngbDropdownMenu>\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Dropdown on both side\" aria-label=\"Amount\" />\n          <div ngbDropdown class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-primary\"\n              ngbDropdownToggle\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              rippleEffect\n            >\n              Action\n            </button>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\">\n              <a ngbDropdownItem href=\"#\">Action</a>\n              <a ngbDropdownItem href=\"#\">Another action</a>\n              <a ngbDropdownItem href=\"#\">Something else here</a>\n              <div role=\"separator\" class=\"dropdown-divider\"></div>\n              <a ngbDropdownItem href=\"#\">Separated link</a>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input-mask/input-mask.snippetcode';\n\n@Component({\n  selector: 'app-input-mask',\n  templateUrl: './input-mask.component.html'\n})\nexport class InputMaskComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public _snippetCodeCredit = snippet.snippetCodeCredit;\n  public _snippetCodePhone = snippet.snippetCodePhone;\n  public _snippetCodeDate = snippet.snippetCodeDate;\n  public _snippetCodeTime = snippet.snippetCodeTime;\n  public _snippetCodeNumeral = snippet.snippetCodeNumeral;\n  public _snippetCodeSecure = snippet.snippetCodeSecure;\n  public _snippetCodePrefix = snippet.snippetCodePrefix;\n  public _snippetCodeSuffix = snippet.snippetCodeSuffix;\n  public _snippetCodeBlocks = snippet.snippetCodeBlocks;\n  public _snippetCodeDelimiters = snippet.snippetCodeDelimiters;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input Mask',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input Mask',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <section id=\"credit-phone-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCredit\">\n            <h4 class=\"card-title\">Credit Card</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePhone\">\n            <h4 class=\"card-title\">Phone number</h4>\n            <div class=\"card-body\">\n              <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                  <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"date-time-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDate\">\n            <h4 class=\"card-title\">Date</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTime\">\n            <h4 class=\"card-title\">Time (24 hour format)</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"numeral-secure-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeNumeral\">\n            <h4 class=\"card-title\">Numeral Formatting</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSecure\">\n            <h4 class=\"card-title\">Secure Input</h4>\n            <div class=\"card-body\">\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                placeholder=\"XXX/X9/2032\"\n                [hiddenInput]=\"true\"\n                mask=\"XXX/X0/0000\"\n              />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"prefix-suffix-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodePrefix\">\n            <h4 class=\"card-title\">Prefix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSuffix\">\n            <h4 class=\"card-title\">Suffix</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <section id=\"block-delimiters-mask\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBlocks\">\n            <h4 class=\"card-title\">Blocks</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-12 col-md-6\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDelimiters\">\n            <h4 class=\"card-title\">Delimiters</h4>\n            <div class=\"card-body\">\n              <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputMaskComponent } from 'app/main/forms/form-elements/input-mask/input-mask.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/input-mask',\n    component: InputMaskComponent,\n    data: { animation: 'input-mask' }\n  }\n];\n\n@NgModule({\n  declarations: [InputMaskComponent],\n  imports: [\n    CommonModule,\n    CardSnippetModule,\n    ContentHeaderModule,\n    RouterModule.forChild(routes),\n    NgxMaskModule.forRoot()\n  ]\n})\nexport class InputMaskModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeCredit: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"1234 5678 8765 4321\" mask=\"0000 0000 0000 0000\" />\n  `\n};\nexport const snippetCodePhone: snippetCode = {\n  html: `\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\" id=\"basic-addon1\">+63</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" placeholder=\"(760) 123 00 00\" mask=\"(000) 000 00 00\" />\n  </div>\n  `\n};\nexport const snippetCodeDate: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"01/02/2023\" mask=\"00/00/0000\" />\n  `\n};\nexport const snippetCodeTime: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"23:23:59\" mask=\"Hh:m0:s0\" />\n  `\n};\nexport const snippetCodeNumeral: snippetCode = {\n  html: `\n  <input class=\"form-control\" type=\"text\" placeholder=\"10,000\" mask=\"separator\" thousandSeparator=\",\" />\n  `\n};\nexport const snippetCodeSecure: snippetCode = {\n  html: `\n  <input\n  class=\"form-control\"\n  type=\"text\"\n  placeholder=\"XXX/X9/2032\"\n  [hiddenInput]=\"true\"\n  mask=\"XXX/X0/0000\"\n  />\n  `\n};\nexport const snippetCodePrefix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"+63\" type=\"text\" prefix=\"+63 \" mask=\"(000) 000 00 00\" />\n  `\n};\nexport const snippetCodeSuffix: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"987654$\" type=\"text\" suffix=\" $\" mask=\"0000\" />\n  `\n};\nexport const snippetCodeBlocks: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"1234 123 123\" type=\"text\" mask=\"0000 000 000\" />\n  `\n};\nexport const snippetCodeDelimiters: snippetCode = {\n  html: `\n  <input class=\"form-control\" placeholder=\"123.456\" type=\"text\" mask=\"separator\" thousandSeparator=\".\" />\n  `\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/input/input.snippetcode';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasicInputs = snippet.snippetCodeBasicInputs;\n  public _snippetCodeSizingOptions = snippet.snippetCodeSizingOptions;\n  public _snippetCodeHorizontalFormLabelSizing = snippet.snippetCodeHorizontalFormLabelSizing;\n  public _snippetCodeFloatingLabelInputs = snippet.snippetCodeFloatingLabelInputs;\n  public _snippetCodeFileInput = snippet.snippetCodeFileInput;\n  public _snippetCodeInputValidationStates = snippet.snippetCodeInputValidationStates;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Inputs start -->\n    <section id=\"basic-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasicInputs\">\n            <h4 class=\"card-title\">Basic Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInput\">Basic Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"helpInputTop\">Input text with help</label>\n                    <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n                    <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Disabled Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"helperText\">With Helper Text</label>\n                    <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n                    <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Input</label>\n                    <input type=\"text\" class=\"form-control\" id=\"readonlyInput\" readonly=\"readonly\"\n                      value=\"You can't update me :P\" />\n                  </div>\n                </div>\n                <div class=\"col-xl-4 col-md-6 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"disabledInput\">Readonly Static Text</label>\n                    <p class=\"form-control-static\" id=\"staticInput\">email@pixinvent.com</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Inputs end -->\n\n    <!-- Input Sizing start -->\n    <section id=\"input-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSizingOptions\">\n            <h4 class=\"card-title\">Sizing Options</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    For different sizes of Input, Use classes like <code>.form-control-lg</code> &amp;\n                    <code>.form-control-sm</code> for Large, Small input box.\n                  </p>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Large</label>\n                    <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Default</label>\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"largeInput\">Small</label>\n                    <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontalFormLabelSizing\">\n            <h4 class=\"card-title\">Horizontal form label sizing</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-2\">\n                    Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to your\n                    <code>&lt;label&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly follow the size of\n                    <code>.form-control-lg</code> and <code>.form-control-sm</code>.\n                  </p>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control form-control-lg\" id=\"colFormLabelLg\"\n                        placeholder=\"Large Input\" />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n                    </div>\n                  </div>\n                  <div class=\"form-group row\">\n                    <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n                    <div class=\"col-sm-9\">\n                      <input type=\"text\" class=\"form-control form-control-sm\" id=\"colFormLabelSm\"\n                        placeholder=\"Small Input\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Input Sizing end -->\n\n    <!-- Floating Label Inputs start -->\n    <section id=\"floating-label-input\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloatingLabelInputs\">\n            <h4 class=\"card-title\">Floating Label Inputs</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-1\">\n                  <p class=\"card-text mb-1\">\n                    For Floating Label Inputs, need to use <code>.form-label-group</code> class & add attribute\n                    <code>disabled</code> for disabled Floating Label Input.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n                    <label for=\"floating-label1\">Label-placeholder</label>\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <div class=\"form-label-group\">\n                    <input type=\"text\" class=\"form-control\" id=\"floating-label-disable\" placeholder=\"Label-placeholder\"\n                      disabled />\n                    <label for=\"floating-label-disable\">Disabled-placeholder</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Inputs end -->\n\n    <!-- Basic File Browser start -->\n    <section id=\"input-file-browser\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFileInput\">\n            <h4 class=\"card-title\">File input</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">Simple File Input</label>\n                    <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n                  </div>\n                </div>\n                <div class=\"col-lg-6 col-md-12\">\n                  <div class=\"form-group\">\n                    <label for=\"basicInputFile\">With Browse button</label>\n                    <div class=\"custom-file\">\n                      <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n                      <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic File Browser end -->\n\n    <!-- validations start -->\n    <section class=\"validations\" id=\"validation\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidationStates\">\n            <h4 class=\"card-title\">Input Validation States</h4>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n                    <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n                    classes.\n                  </p>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"valid-state\">Valid State</label>\n                  <input type=\"text\" class=\"form-control is-valid\" id=\"valid-state\" placeholder=\"Valid\" value=\"Valid\"\n                    required />\n                  <div class=\"valid-feedback\">This is valid state.</div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label for=\"invalid-state\">Invalid State</label>\n                  <input type=\"text\" class=\"form-control is-invalid\" id=\"invalid-state\" placeholder=\"Invalid\"\n                    value=\"Invalid\" required />\n                  <div class=\"invalid-feedback\">This is invalid state.</div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- validations end -->\n  </div>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { InputComponent } from 'app/main/forms/form-elements/input/input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/input',\n    component: InputComponent,\n    data: { animation: 'input' }\n  }\n];\n\n@NgModule({\n  declarations: [InputComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class InputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasicInputs: snippetCode = {\n  html: `\n<div class=\"row\">\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"basicInput\">Basic Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"basicInput\" placeholder=\"Enter email\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"helpInputTop\">Input text with help</label>\n      <small class=\"text-muted\"> eg.<i>someone@example.com</i></small>\n      <input type=\"text\" class=\"form-control\" id=\"helpInputTop\" />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12 mb-1\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Disabled Input</label>\n      <input type=\"text\" class=\"form-control\" id=\"disabledInput\" disabled />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"helperText\">With Helper Text</label>\n      <input type=\"text\" id=\"helperText\" class=\"form-control\" placeholder=\"Name\" />\n      <p><small class=\"text-muted\">Find helper text here for given textbox.</small></p>\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Input</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"readonlyInput\"\n        readonly=\"readonly\"\n        value=\"You can't update me :P\"\n      />\n    </div>\n  </div>\n  <div class=\"col-xl-4 col-md-6 col-12\">\n    <div class=\"form-group\">\n      <label for=\"disabledInput\">Readonly Static Text</label>\n      <p class=\"form-control-static\" id=\"staticInput\">email@pixinvent.com</p>\n    </div>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeSizingOptions: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"largeInput\">Large</label>\n  <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Large Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Default</label>\n  <input class=\"form-control\" type=\"text\" placeholder=\"Normal Input\" />\n</div>\n<div class=\"form-group\">\n  <label for=\"largeInput\">Small</label>\n  <input class=\"form-control form-control-sm\" type=\"text\" placeholder=\"Small Input\" />\n</div>\n  `\n};\nexport const snippetCodeHorizontalFormLabelSizing: snippetCode = {\n  html: `\n<div class=\"form-group row\">\n  <label for=\"colFormLabelLg\" class=\"col-sm-3 col-form-label col-form-label-lg\">Large</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-lg\"\n      id=\"colFormLabelLg\"\n      placeholder=\"Large Input\"\n    />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabel\" class=\"col-sm-3 col-form-label\">Default</label>\n  <div class=\"col-sm-9\">\n    <input type=\"text\" class=\"form-control\" id=\"colFormLabel\" placeholder=\"Normal Input\" />\n  </div>\n</div>\n\n<div class=\"form-group row\">\n  <label for=\"colFormLabelSm\" class=\"col-sm-3 col-form-label col-form-label-sm\">Small</label>\n  <div class=\"col-sm-9\">\n    <input\n      type=\"text\"\n      class=\"form-control form-control-sm\"\n      id=\"colFormLabelSm\"\n      placeholder=\"Small Input\"\n    />\n  </div>\n</div>\n  `\n};\nexport const snippetCodeFloatingLabelInputs: snippetCode = {\n  html: `\n<div class=\"form-label-group\">\n  <input type=\"text\" class=\"form-control\" id=\"floating-label1\" placeholder=\"Label-placeholder\" />\n  <label for=\"floating-label1\">Label-placeholder</label>\n</div>\n\n<div class=\"form-label-group\">\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    id=\"floating-label-disable\"\n    placeholder=\"Label-placeholder\"\n    disabled\n  />\n  <label for=\"floating-label-disable\">Disabled-placeholder</label>\n</div>\n  `\n};\nexport const snippetCodeFileInput: snippetCode = {\n  html: `\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">Simple File Input</label>\n  <input type=\"file\" class=\"form-control-file\" id=\"basicInputFile\" />\n</div>\n\n<div class=\"form-group\">\n  <label for=\"basicInputFile\">With Browse button</label>\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" />\n    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n  </div>\n</div>\n  `\n};\nexport const snippetCodeInputValidationStates: snippetCode = {\n  html: `\n<div class=\"row match-height\">\n  <div class=\"col-12\">\n    <p>\n      You can indicate invalid and valid form fields with <code>.is-invalid</code> and\n      <code>.is-valid</code>. Note that <code>.invalid-feedback</code> is also supported with these\n      classes.\n    </p>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"valid-state\">Valid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-valid\"\n      id=\"valid-state\"\n      placeholder=\"Valid\"\n      value=\"Valid\"\n      required\n    />\n    <div class=\"valid-feedback\">This is valid state.</div>\n  </div>\n  <div class=\"col-sm-6 col-12\">\n    <label for=\"invalid-state\">Invalid State</label>\n    <input\n      type=\"text\"\n      class=\"form-control is-invalid\"\n      id=\"invalid-state\"\n      placeholder=\"Invalid\"\n      value=\"Invalid\"\n      required\n    />\n    <div class=\"invalid-feedback\">This is invalid state.</div>\n  </div>\n</div>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/number-input/number-input.snippetcode';\n\n@Component({\n  selector: 'app-number-input',\n  templateUrl: './number-input.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class NumberInputComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTouchspin = snippet.snippetCodeTouchspin;\n  public _snippetCodeSize = snippet.snippetCodeSize;\n  public _snippetCodeMinMax = snippet.snippetCodeMinMax;\n  public _snippetCodeStep = snippet.snippetCodeStep;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n\n  public dateValue: number;\n\n  constructor() {}\n\n  /***\n   * On touchspin count change\n   */\n  countChange(value) {\n    // this.dateValue = value;\n    console.log(value);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Number Input',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Number Input',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- core TouchSpin Spinners start -->\n    <section id=\"basic-touchspin\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTouchspin\">\n            <h4 class=\"card-title\">Touchspin</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use <code>core-touchspin</code> component to get default touchspin. To disable touchspin use\n                    <code>[disable]=\"true\"</code> & to get touchspin with chevron icon use\n                    <code>[iconChevron]=\"true\"</code>.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin default -->\n                    <core-touchspin [numberValue]=\"50\" (onChange)=\"countChange($event)\"></core-touchspin>\n\n                    <!-- touchspin disabled -->\n                    <core-touchspin [disable]=\"true\"></core-touchspin>\n\n                    <!-- touchspin wih icon chevron  -->\n                    <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Size start -->\n    <section id=\"touchspin-size\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeSize\">\n            <h4 class=\"card-title\">Size</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[size]</code> add pass <code>'sm' | 'lg'</code> to get small and large\n                    touchspin respectively. <strong>Default</strong> is Medium size.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin size large -->\n                    <core-touchspin [size]=\"'lg'\"></core-touchspin>\n\n                    <!-- touchspin size default -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin size small -->\n                    <core-touchspin [size]=\"'sm'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners end -->\n\n    <!-- core TouchSpin Spinners Min-max start -->\n    <section id=\"touchspin-min-max\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMinMax\">\n            <h4 class=\"card-title\">Min - Max</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">\n                    Use input property <code>[minValue]</code> & <code>[maxValue]</code> to set lower-limit and\n                    upper-limit of input number respectively.\n                  </p>\n\n                  <!-- touchspin min-max -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Step start -->\n    <section id=\"touchspin-step\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeStep\">\n            <h4 class=\"card-title\">Step</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text\">Use input property <code>[numberValue]</code> to set value of input number.</p>\n\n                  <!-- touchspin steps -->\n                  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Min - Max end -->\n\n    <!-- core TouchSpin Spinners Colors start -->\n    <section id=\"touchspin-colors\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors Variation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-0\">\n                    Use input property <code>[color]=\"'colorName'\"</code> to get your desired color variation.\n                  </p>\n\n                  <div class=\"demo-inline-spacing\">\n                    <!-- touchspin color default primary -->\n                    <core-touchspin></core-touchspin>\n\n                    <!-- touchspin color success -->\n                    <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n                    <!-- touchspin color warning -->\n                    <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n                    <!-- touchspin color info -->\n                    <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n                    <!-- touchspin color danger -->\n                    <core-touchspin [color]=\"'danger'\"></core-touchspin>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- core TouchSpin Spinners Decimal end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreTouchspinModule } from '@core/components/core-touchspin/core-touchspin.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { NumberInputComponent } from 'app/main/forms/form-elements/number-input/number-input.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/number-input',\n    component: NumberInputComponent,\n    data: { animation: 'number-input' }\n  }\n];\n\n@NgModule({\n  declarations: [NumberInputComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreTouchspinModule\n  ]\n})\nexport class NumberInputModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTouchspin: snippetCode = {\n  html: `\n  <!-- touchspin default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin disabled -->\n  <core-touchspin [disable]=\"true\"></core-touchspin>\n\n  <!-- touchspin wih icon chevron  -->\n  <core-touchspin [iconChevron]=\"true\"></core-touchspin>\n  `\n};\nexport const snippetCodeSize: snippetCode = {\n  html: `\n  <!-- touchspin size small -->\n  <core-touchspin [size]=\"'sm'\"></core-touchspin>\n\n  <!-- touchspin size default -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin size large -->\n  <core-touchspin [size]=\"'lg'\"></core-touchspin>\n  `\n};\n\nexport const snippetCodeMinMax: snippetCode = {\n  html: `\n  <!-- touchspin min-max -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\" [minValue]=\"40\" [maxValue]=\"60\"></core-touchspin>\n  `\n};\nexport const snippetCodeStep: snippetCode = {\n  html: `\n  <!-- touchspin steps -->\n  <core-touchspin [numberValue]=\"50\" [stepValue]=\"5\"></core-touchspin>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <!-- touchspin color default primary -->\n  <core-touchspin></core-touchspin>\n\n  <!-- touchspin color success -->\n  <core-touchspin [color]=\"'success'\"></core-touchspin>\n\n  <!-- touchspin color warning -->\n  <core-touchspin [color]=\"'warning'\"></core-touchspin>\n\n  <!-- touchspin color info -->\n  <core-touchspin [color]=\"'info'\"></core-touchspin>\n\n  <!-- touchspin color danger -->\n  <core-touchspin [color]=\"'danger'\"></core-touchspin>\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/quill-editor/quill-editor.snippetcode';\n\n@Component({\n  selector: 'app-quill-editor',\n  templateUrl: './quill-editor.component.html',\n  styleUrls: ['./quill-editor.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuillEditorComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // snippet code variables\n  public _snippetCodeSnowEditor = snippet.snippetCodeSnowEditor;\n  public _snippetCodeBubbleEditor = snippet.snippetCodeBubbleEditor;\n  public _snippetCodeFullEditor = snippet.snippetCodeFullEditor;\n  public _quillEditorContent = snippet.quillEditorContent;\n\n  snowEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  bubbleEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n  fullEditorRef = `\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\">\n    Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> WYSIWYG editor built\n    for the modern web. With its\n    <a href=\"http://quilljs.com/docs/modules/\">modular architecture</a> and expressive\n    <a href=\"http://quilljs.com/docs/api/\">API</a>, it is completely customizable to fit any need.\n  </p>\n  <p class=\"card-text\"><br /></p>\n  <iframe\n    class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\"\n    width=\"560\"\n    height=\"238\"\n  ></iframe>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p class=\"card-text\"><br /></p>\n  <pre>\n// &lt;link href=\"https://cdn.quilljs.com/1.3.6/quill.snow.css\" rel=\"stylesheet\"&gt;\n// &lt;script src=\"https://cdn.quilljs.com/1.3.6/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\nvar quill = new Quill('#editor', {\nmodules: {\ntoolbar: '#toolbar'\n},\ntheme: 'snow'\n});\n// Open your browser's developer console to try out the API!</pre\n  >\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text\"><br /></p>\n  <p class=\"card-text ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"card-text ql-align-center\">\n    &nbsp;<span class=\"ql-formula\" data-value=\"x^2 + (y - \\sqrt[3]{x^2})^2 = 1\"></span>&nbsp;\n  </p>\n  <p class=\"card-text\"><br /></p>\n  `;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Quill Editor',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Extensions',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Quill Editor',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- quill snow  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeSnowEditor\">\n      <h4 class=\"card-title\">Snow Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          By default <strong>Snow Editor</strong> is custom editor. Here we have customized the toolbar with\n          <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor [(ngModel)]=\"snowEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\">\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill snow  -->\n\n    <!-- quill Bubble  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeBubbleEditor\">\n      <h4 class=\"card-title\">Bubble Editor</h4>\n      <div class=\"card-body\">\n        <p class=\"card-text\">\n          To get <strong>Bubble Editor</strong> use <code>theme=\"bubble\"</code>. Here we have customized the bubble\n          toolbar with <code>quill-editor-toolbar</code> directive.\n        </p>\n        <quill-editor\n          theme=\"bubble\"\n          [(ngModel)]=\"bubbleEditorRef\"\n          [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n        >\n          <div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Aligment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Bubble  -->\n\n    <!-- quill Full  -->\n    <core-card-snippet [snippetCode]=\"_snippetCodeFullEditor\">\n      <h4 class=\"card-title\">Full Editor</h4>\n      <div class=\"card-body\">\n        <quill-editor [(ngModel)]=\"fullEditorRef\" [modules]=\"{ syntax: true, toolbar: [['code-block']] }\"\n          ><div quill-editor-toolbar>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n              <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n              <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <select class=\"ql-align\" [title]=\"'Alignment'\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n              <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n            </span>\n            <span class=\"ql-formats\">\n              <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n            </span>\n          </div>\n        </quill-editor>\n      </div>\n    </core-card-snippet>\n    <!--/ quill Full  -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { QuillModule } from 'ngx-quill';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { QuillEditorComponent } from 'app/main/forms/form-elements/quill-editor/quill-editor.component';\n\n// routing\nconst routes: Routes = [\n  {\n    path: 'form-elements/quill-editor',\n    component: QuillEditorComponent,\n    data: { animation: 'quill-editor' }\n  }\n];\n\n@NgModule({\n  declarations: [QuillEditorComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    ContentHeaderModule,\n    CardSnippetModule,\n    QuillModule.forRoot(),\n    CoreCommonModule\n  ]\n})\nexport class QuillEditorModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeSnowEditor: snippetCode = {\n  html: `\n  <quill-editor  [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Alignment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-link\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-image\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-video\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-formula\" value=\"ordered\" type=\"button\"></button>\n        <button class=\"ql-code-block\" value=\"ordered\" type=\"button\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <button class=\"ql-clean\" value=\"ordered\" type=\"button\"></button>\n      </span>\n    </div>\n\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\n\nexport const snippetCodeBubbleEditor: snippetCode = {\n  html: `\n  <quill-editor theme=\"bubble\" [(ngModel)]=\"quillEditorContent\">\n    <div quill-editor-toolbar>\n      <span class=\"ql-formats\">\n        <button class=\"ql-bold\" [title]=\"'Bold'\"></button>\n        <button class=\"ql-italic\" [title]=\"'italic'\"></button>\n        <button class=\"ql-underline\" [title]=\"'underline'\"></button>\n      </span>\n      <span class=\"ql-formats\">\n        <select class=\"ql-align\" [title]=\"'Aligment'\">\n          <option selected></option>\n          <option value=\"center\"></option>\n          <option value=\"right\"></option>\n          <option value=\"justify\"></option>\n        </select>\n      </span>\n    </div>\n  </quill-editor>\n  `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const snippetCodeFullEditor: snippetCode = {\n  html: `\n  <quill-editor [(ngModel)]=\"quillEditorContent\"></quill-editor>\n      `,\n  ts: `\n  public quillEditorContent = \\`\n  <h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n  <p><br></p>\n  <p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n    built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n      architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n    completely customizable to fit any need.</p>\n  <p><br></p>\n  <iframe class=\"ql-video ql-align-center\"\n    src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n  <p><br></p>\n  <p><br></p>\n  <h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n  <p><br></p>\n  <pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n    // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    var quill = new Quill('#editor', &#123;\n    modules: &#123;\n    toolbar: '#toolbar'\n    &#125;,\n    theme: 'snow'\n    &#125;);\n    // Open your browser's developer console to try out the API!\n  </pre>\n  <p><br></p>\n  <p><br></p>\n  <p class=\"ql-align-center\"><strong>Built with</strong></p>\n  <p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n      data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n  <p><br></p>\n  \\`;\n  `\n};\nexport const quillEditorContent: snippetCode = {\n  html: `\n<h1 class=\"ql-align-center\">Quill Rich Text Editor</h1>\n<p><br></p>\n<p>Quill is a free, <a href=\"https://github.com/quilljs/quill/\">open source</a> editor\n  built for the modern web. With its <a href=\"http://quilljs.com/docs/modules/\">modular\n    architecture</a> and expressive <a href=\"http://quilljs.com/docs/api/\">API</a>, it is\n  completely customizable to fit any need.</p>\n<p><br></p>\n<iframe class=\"ql-video ql-align-center\"\n  src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" width=\"560\" height=\"238\"></iframe>\n<p><br></p>\n<p><br></p>\n<h2 class=\"ql-align-center\">Getting Started is Easy</h2>\n<p><br></p>\n<pre>// &lt;link href=\"https://cdn.quilljs.com/1.0.5/quill.snow.css\" rel=\"stylesheet\"&gt;\n  // &lt;script src=\"https://cdn.quilljs.com/1.0.5/quill.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n  var quill = new Quill('#editor', &#123;\n  modules: &#123;\n  toolbar: '#toolbar'\n  &#125;,\n  theme: 'snow'\n  &#125;);\n  // Open your browser's developer console to try out the API!\n</pre>\n<p><br></p>\n<p><br></p>\n<p class=\"ql-align-center\"><strong>Built with</strong></p>\n<p class=\"ql-align-center\">&nbsp;<span class=\"ql-formula\"\n    data-value=\"x^2 + (y - \\sqrt[3]&#123; x^2&#125;)^2 = 1\"></span>&nbsp;</p>\n<p><br></p>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/radio/radio.snippetcode';\n\n@Component({\n  selector: 'app-radio',\n  templateUrl: './radio.component.html'\n})\nexport class RadioComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeRadioBasic = snippet.snippetCodeRadioBasic;\n  public _snippetCodeRadioCustom = snippet.snippetCodeRadioCustom;\n  public _snippetCodeRadioCustomColor = snippet.snippetCodeRadioCustomColor;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Radio',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Radio',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Radio Basic Start -->\n    <section id=\"radio-basic\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioBasic\">\n            <h4 class=\"card-title\">Basic Radio Buttons</h4>\n            <div class=\"card-body\">\n              <div class=\"demo-inline-spacing\">\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio1\"\n                    value=\"option1\"\n                    checked\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioOptions\"\n                    id=\"inlineRadio2\"\n                    value=\"option2\"\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio3\"\n                    value=\"option3\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    class=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"inlineRadioDisabledOptions\"\n                    id=\"inlineRadio4\"\n                    value=\"option4\"\n                    disabled\n                  />\n                  <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Basic Ends -->\n\n    <!-- Radio Custom Start -->\n    <section id=\"radio-custom\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustom\">\n            <h4 class=\"card-title\">Custom Radio Buttons</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Add <code>.custom-control .custom-radio</code> as a single wrapper &amp; add\n                <code>.custom-control-label</code> for better output.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n                  <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio3\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    checked\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n                </div>\n                <div class=\"custom-control custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customRadio4\"\n                    name=\"customDisabledRadio\"\n                    class=\"custom-control-input\"\n                    disabled\n                  />\n                  <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Ends -->\n\n    <!-- Radio Custom Color Start -->\n    <section id=\"radio-custom-color\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeRadioCustomColor\">\n            <h4 class=\"card-title\">Color</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                To change the color of the radio use the <code>.custom-control-&#123;value&#125;</code> for primary,\n                secondary, success, danger, info, warning.\n              </p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio1\"\n                    name=\"customColorRadio1\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio2\"\n                    name=\"customColorRadio2\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio3\"\n                    name=\"customColorRadio3\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio5\"\n                    name=\"customColorRadio5\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-radio\">\n                  <input\n                    type=\"radio\"\n                    id=\"customColorRadio4\"\n                    name=\"customColorRadio4\"\n                    class=\"custom-control-input\"\n                    checked\n                  />\n                  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-radio\">\n                  <input type=\"radio\" id=\"customRadio6\" name=\"customColorRadio6\" class=\"custom-control-input\" checked />\n                  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Radio Custom Color Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { RadioComponent } from 'app/main/forms/form-elements/radio/radio.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/radio',\n    component: RadioComponent,\n    data: { animation: 'radio' }\n  }\n];\n\n@NgModule({\n  declarations: [RadioComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class RadioModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeRadioBasic: snippetCode = {\n  html: `\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio1\"\n      value=\"option1\"\n      checked\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio1\">Checked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioOptions\"\n      id=\"inlineRadio2\"\n      value=\"option2\"\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio2\">Unchecked</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio3\"\n      value=\"option3\"\n      checked\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"form-check form-check-inline\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"inlineRadioDisabledOptions\"\n      id=\"inlineRadio4\"\n      value=\"option4\"\n      disabled\n    />\n    <label class=\"form-check-label\" for=\"inlineRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustom: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio1\" name=\"customRadio\" class=\"custom-control-input\" checked />\n    <label class=\"custom-control-label\" for=\"customRadio1\">Checked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input type=\"radio\" id=\"customRadio2\" name=\"customRadio\" class=\"custom-control-input\" />\n    <label class=\"custom-control-label\" for=\"customRadio2\">Unchecked</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio3\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      checked\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio3\">Checked disabled</label>\n  </div>\n  <div class=\"custom-control custom-radio\">\n    <input\n      type=\"radio\"\n      id=\"customRadio4\"\n      name=\"customDisabledRadio\"\n      class=\"custom-control-input\"\n      disabled\n    />\n    <label class=\"custom-control-label\" for=\"customRadio4\">Unchecked disabled</label>\n  </div>\n  `\n};\nexport const snippetCodeRadioCustomColor: snippetCode = {\n  html: `\n<div class=\"custom-control custom-control-primary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio1\"\n    name=\"customColorRadio1\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio1\">Primary</label>\n</div>\n\n<div class=\"custom-control custom-control-secondary custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio2\"\n    name=\"customColorRadio2\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio2\">Secondary</label>\n</div>\n\n<div class=\"custom-control custom-control-success custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio3\"\n    name=\"customColorRadio3\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio3\">Success</label>\n</div>\n\n<div class=\"custom-control custom-control-danger custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio5\"\n    name=\"customColorRadio5\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio5\">Danger</label>\n</div>\n\n<div class=\"custom-control custom-control-warning custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customColorRadio4\"\n    name=\"customColorRadio4\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customColorRadio4\">Warning</label>\n</div>\n\n<div class=\"custom-control custom-control-info custom-radio\">\n  <input\n    type=\"radio\"\n    id=\"customRadio6\"\n    name=\"customColorRadio6\"\n    class=\"custom-control-input\"\n    checked\n  />\n  <label class=\"custom-control-label\" for=\"customRadio6\">Info</label>\n</div>\n  `\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { delay, map, tap } from 'rxjs/operators';\n\nexport interface Person {\n  id: string;\n  isActive: boolean;\n  age: number;\n  name: string;\n  gender: string;\n  company: string;\n  email: string;\n  phone: string;\n  disabled?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _gitHubAccountsCache = new Map<string, []>();\n\n  constructor(private http: HttpClient) {}\n\n  getGithubAccounts(term: string = null) {\n    if (this._gitHubAccountsCache.has(term)) {\n      return of(this._gitHubAccountsCache.get(term));\n    }\n\n    if (term) {\n      return this.http.get<any>(`https://api.github.com/search/users?q=${term}`).pipe(\n        map(rsp => rsp.items),\n        tap(data => this._gitHubAccountsCache.set(term, data))\n      );\n    } else {\n      return of([]);\n    }\n  }\n\n  getAlbums() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\n  }\n\n  getPhotos() {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\n  }\n\n  getPeople(term: string = null): Observable<Person[]> {\n    let items = getMockPeople();\n    if (term) {\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\n    }\n    return of(items).pipe(delay(50));\n  }\n}\n\nfunction getMockPeople() {\n  return [\n    {\n      id: '5a15b13c36e7a7f00cf0d7cb',\n      index: 2,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 23,\n      name: 'Karyn Wright',\n      gender: 'female',\n      company: 'ZOLAR',\n      email: 'karynwright@zolar.com',\n      phone: '+1 (851) 583-2547'\n    },\n    {\n      id: '5a15b13c2340978ec3d2c0ea',\n      index: 3,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 35,\n      name: 'Rochelle Estes',\n      disabled: true,\n      gender: 'female',\n      company: 'EXTRAWEAR',\n      email: 'rochelleestes@extrawear.com',\n      phone: '+1 (849) 408-2029'\n    },\n    {\n      id: '5a15b13c663ea0af9ad0dae8',\n      index: 4,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Mendoza Ruiz',\n      gender: 'male',\n      company: 'ZYTRAX',\n      email: 'mendozaruiz@zytrax.com',\n      phone: '+1 (904) 536-2020'\n    },\n    {\n      id: '5a15b13cc9eeb36511d65acf',\n      index: 5,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 39,\n      name: 'Rosales Russell',\n      gender: 'male',\n      company: 'ELEMANTRA',\n      email: 'rosalesrussell@elemantra.com',\n      phone: '+1 (868) 473-3073'\n    },\n    {\n      id: '5a15b13c728cd3f43cc0fe8a',\n      index: 6,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Marquez Nolan',\n      gender: 'male',\n      company: 'MIRACLIS',\n      disabled: true,\n      email: 'marqueznolan@miraclis.com',\n      phone: '+1 (853) 571-3921'\n    },\n    {\n      id: '5a15b13ca51b0aaf8a99c05a',\n      index: 7,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 28,\n      name: 'Franklin James',\n      gender: 'male',\n      company: 'CAXT',\n      email: 'franklinjames@caxt.com',\n      phone: '+1 (868) 539-2984'\n    },\n    {\n      id: '5a15b13cc3b9381ffcb1d6f7',\n      index: 8,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Elsa Bradley',\n      gender: 'female',\n      company: 'MATRIXITY',\n      email: 'elsabradley@matrixity.com',\n      phone: '+1 (994) 583-3850'\n    },\n    {\n      id: '5a15b13ce58cb6ff62c65164',\n      index: 9,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 40,\n      name: 'Pearson Thompson',\n      gender: 'male',\n      company: 'EZENT',\n      email: 'pearsonthompson@ezent.com',\n      phone: '+1 (917) 537-2178'\n    },\n    {\n      id: '5a15b13c90b95eb68010c86e',\n      index: 10,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 32,\n      name: 'Ina Pugh',\n      gender: 'female',\n      company: 'MANTRIX',\n      email: 'inapugh@mantrix.com',\n      phone: '+1 (917) 450-2372'\n    },\n    {\n      id: '5a15b13c2b1746e12788711f',\n      index: 11,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 25,\n      name: 'Nguyen Elliott',\n      gender: 'male',\n      company: 'PORTALINE',\n      email: 'nguyenelliott@portaline.com',\n      phone: '+1 (905) 491-3377'\n    },\n    {\n      id: '5a15b13c605403381eec5019',\n      index: 12,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 31,\n      name: 'Mills Barnett',\n      gender: 'male',\n      company: 'FARMEX',\n      email: 'millsbarnett@farmex.com',\n      phone: '+1 (882) 462-3986'\n    },\n    {\n      id: '5a15b13c67e2e6d1a3cd6ca5',\n      index: 13,\n      isActive: true,\n      picture: 'http://placehold.it/32x32',\n      age: 36,\n      name: 'Margaret Reynolds',\n      gender: 'female',\n      company: 'ROOFORIA',\n      email: 'margaretreynolds@rooforia.com',\n      phone: '+1 (935) 435-2345'\n    },\n    {\n      id: '5a15b13c947c836d177aa85c',\n      index: 14,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 29,\n      name: 'Yvette Navarro',\n      gender: 'female',\n      company: 'KINETICA',\n      email: 'yvettenavarro@kinetica.com',\n      phone: '+1 (807) 485-3824'\n    },\n    {\n      id: '5a15b13c5dbbe61245c1fb73',\n      index: 15,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 20,\n      name: 'Elisa Guzman',\n      gender: 'female',\n      company: 'KAGE',\n      email: 'elisaguzman@kage.com',\n      phone: '+1 (868) 594-2919'\n    },\n    {\n      id: '5a15b13c38fd49fefea8db80',\n      index: 16,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 33,\n      name: 'Jodie Bowman',\n      gender: 'female',\n      company: 'EMTRAC',\n      email: 'jodiebowman@emtrac.com',\n      phone: '+1 (891) 565-2560'\n    },\n    {\n      id: '5a15b13c9680913c470eb8fd',\n      index: 17,\n      isActive: false,\n      picture: 'http://placehold.it/32x32',\n      age: 24,\n      name: 'Diann Booker',\n      gender: 'female',\n      company: 'LYRIA',\n      email: 'diannbooker@lyria.com',\n      phone: '+1 (830) 555-3209'\n    }\n  ];\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Bootstrap Select start -->\n    <section class=\"bootstrap-select\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <!-- Basic Select -->\n              <div class=\"form-group\">\n                <label for=\"basicSelect\">Basic Select</label>\n                <select class=\"form-control\" id=\"basicSelect\">\n                  <option>IT</option>\n                  <option>Blade Runner</option>\n                  <option>Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Custom Select -->\n              <div class=\"form-group\">\n                <label for=\"customSelect\">Custom Select</label>\n                <select class=\"custom-select\" id=\"customSelect\">\n                  <option selected>Open this menu</option>\n                  <option value=\"IT\">IT</option>\n                  <option value=\"Blade Runner\">Blade Runner</option>\n                  <option value=\"Thor Ragnarok\">Thor Ragnarok</option>\n                </select>\n              </div>\n\n              <!-- Disabled Select -->\n              <div class=\"form-group\">\n                <label for=\"disabledSelect\">Disabled Select</label>\n                <select class=\"form-control\" disabled=\"disabled\" id=\"disabledSelect\">\n                  <option>Green</option>\n                  <option>Red</option>\n                  <option>Blue</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Select Sizing</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"form-group\">\n                <label for=\"selectLarge\">Select Large</label>\n                <select class=\"form-control form-control-lg mb-1\" id=\"selectLarge\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectDefault\">Default</label>\n                <select class=\"form-control mb-1\" id=\"selectDefault\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"selectSmall\">Select Small</label>\n                <select class=\"form-control form-control-sm\" id=\"selectSmall\">\n                  <option selected>Open this select menu</option>\n                  <option value=\"1\">One</option>\n                  <option value=\"2\">Two</option>\n                  <option value=\"3\">Three</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Bootstrap Multi Select</h4>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <!-- Multiple Select -->\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"normalMultiSelect\">Multiple Select</label>\n                    <select class=\"form-control\" id=\"normalMultiSelect\" multiple=\"multiple\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectMulti\">Custom Multiple Select</label>\n                    <select class=\"custom-select\" id=\"customSelectMulti\" multiple>\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div class=\"col-md-4 col-12\">\n                  <div class=\"form-group\">\n                    <label for=\"customSelectSize\">Custom Select Size</label>\n                    <select class=\"custom-select\" id=\"customSelectSize\" size=\"4\">\n                      <option selected=\"selected\">Square</option>\n                      <option>Rectangle</option>\n                      <option selected=\"selected\">Rombo</option>\n                      <option>Romboid</option>\n                      <option>Trapeze</option>\n                      <option>Triangle</option>\n                      <option selected=\"selected\">Polygon</option>\n                      <option>Regular polygon</option>\n                      <option>Circumference</option>\n                      <option>Circle</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Bootstrap Select end -->\n\n    <!-- Basic Select start -->\n    <section class=\"basic-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Ng-Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12 mb-2\">\n                  <a href=\"https://github.com/ng-select/ng-select\" target=\"_blank\"\n                    >For more information on ng-select.</a\n                  >\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Select with Search</label>\n                  <div class=\"form-group\">\n                    <!-- Basic Select with Search -->\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    <!--/ Basic Select with Search -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Group by item</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Group by item -->\n                    <ng-select\n                      [items]=\"selectGroup\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                      groupBy=\"country\"\n                      [(ngModel)]=\"selectGroupselected\"\n                    >\n                      <ng-template ng-optgroup-tmp let-item=\"item\">\n                        {{ item.country || 'Unnamed group' }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n                    <small>Selected: {{ selectGroupselected | json }}</small>\n                    <!--/ Select Group by item -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select With Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select With Icon -->\n                    <ng-select [items]=\"selectIcon\" [(ngModel)]=\"selectIconSelected\" bindLabel=\"name\" bindValue=\"name\">\n                      <ng-template ng-option-tmp ng-label-tmp let-item=\"item\">\n                        <i [class]=\"item.icon\"></i>\n                        {{ item.name }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select With Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select with custom Option</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select with custom Option -->\n                    <ng-select\n                      [items]=\"selectIcon\"\n                      [(ngModel)]=\"selectCustomSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-option-tmp let-item=\"item\" let-index=\"index\" let-search=\"searchTerm\">\n                        <div *ngIf=\"item.name === 'Firefox'\">{{ item.name }}</div>\n                        <div style=\"margin: 10px 0\" class=\"card\" *ngIf=\"item.name !== 'Safari'\">\n                          <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ item.name }}</h5>\n                            <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\n                            <p class=\"card-text\">\n                              <i [class]=\"item.icon\"></i>\n                              Some quick example text to build\n                            </p>\n                            <div *ngIf=\"item.name === 'Opera'\">\n                              <a href=\"#\" class=\"card-link\">Card link</a>\n                              <a href=\"#\" class=\"card-link\">Another link</a>\n                            </div>\n                          </div>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select with custom Option -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Select end -->\n\n    <!-- Multiple Select start -->\n    <section class=\"multiple-select\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multiple Select</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Basic Multi select</label>\n\n                  <div class=\"form-group\">\n                    <!-- Basic Multi select -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Basic Multi select -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Group</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with group -->\n                    <ng-select\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      groupBy=\"gender\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiGroupSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi with group -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Add custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Add custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select tag\"\n                      [(ngModel)]=\"SelectTag\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Add custom Tag -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom Tag</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom Tag -->\n                    <ng-select\n                      [items]=\"customTag\"\n                      [addTag]=\"selectAddTagMethod\"\n                      [hideSelected]=\"true\"\n                      multiple=\"true\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"customTagselected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n\n                    <br />\n                    Selected value: {{ customTagselected | json }}\n                    <!--/ Select Custom Tag -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Multiple Select end -->\n\n    <!-- Select Advance Options start -->\n    <section class=\"select-advance\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Advance Options</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi with Icon</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi with Icon -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      [(ngModel)]=\"multiIconGithubUsersSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"\n                          ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                        >\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n\n                      <ng-template ng-option-tmp let-item=\"item\">\n                        <img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi with Icon -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Multi Custom</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Multi Custom -->\n                    <ng-select\n                      [items]=\"multiIconGithubUsers | async\"\n                      [multiple]=\"true\"\n                      bindLabel=\"login\"\n                      bindValue=\"login\"\n                      placeholder=\"Select items\"\n                      [(ngModel)]=\"multiCustomGithubUsersSelected\"\n                    >\n                      <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n                        <div class=\"ng-value\" *ngFor=\"let item of items | slice: 0:2\">\n                          <span class=\"ng-value-label\"\n                            ><img [src]=\"item.avatar_url\" width=\"20px\" height=\"20px\" /> {{ item.login }}</span\n                          >\n                          <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                        </div>\n                        <div class=\"ng-value\" *ngIf=\"items.length > 2\">\n                          <span class=\"ng-value-label\">{{ items.length - 2 }} more...</span>\n                        </div>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Multi Custom -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Multi select with limited number of selections</label>\n\n                  <div class=\"form-group\">\n                    <!-- Multi select with limited number of selections -->\n                    <ngb-alert\n                      [type]=\"'warning'\"\n                      [dismissible]=\"false\"\n                      class=\"mb-2\"\n                      *ngIf=\"selectMultiLimitedSelected.length === 3\"\n                    >\n                      <div class=\"alert-body\">\n                        <small>Max selection reached</small>\n                      </div>\n                    </ngb-alert>\n\n                    <ng-select\n                      #selectMultiLimited\n                      [items]=\"selectMulti | async\"\n                      [multiple]=\"true\"\n                      [maxSelectedItems]=\"3\"\n                      bindLabel=\"name\"\n                      [(ngModel)]=\"selectMultiLimitedSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n\n                    <div class=\"mt-1\">\n                      Selected value: <br />\n                      <ul>\n                        <li *ngFor=\"let item of selectMultiLimitedSelected\">{{ item.name }}</li>\n                      </ul>\n                      <button (click)=\"multiLimitedClearModel()\" class=\"btn btn-secondary btn-sm\" rippleEffect>\n                        Clear model\n                      </button>\n                    </div>\n                    <!-- Multi select with limited number of selections -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <label>Select Custom header footer template</label>\n\n                  <div class=\"form-group\">\n                    <!-- Select Custom header footer template -->\n                    <ng-select\n                      [multiple]=\"true\"\n                      [items]=\"selectCustomHeaderFooter\"\n                      [(ngModel)]=\"selectCustomHeaderFooterSelected\"\n                      placeholder=\"Select people\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                      <ng-template ng-header-tmp>\n                        <button\n                          (click)=\"customHeaderFooterSelectAll()\"\n                          class=\"btn btn-sm btn-secondary mr-1\"\n                          rippleEffect\n                        >\n                          Select all\n                        </button>\n                        <button (click)=\"customHeaderFooterUnselectAll()\" class=\"btn btn-sm btn-secondary\" rippleEffect>\n                          Unselect all\n                        </button>\n                      </ng-template>\n                      <ng-template ng-footer-tmp>\n                        Selected count: {{ selectCustomHeaderFooterSelected.length }}\n                      </ng-template>\n                    </ng-select>\n                    <br />\n\n                    Selected people: {{ selectCustomHeaderFooterSelected }}\n                    <!--/ Select Custom header footer template -->\n                  </div>\n                </div>\n                <div class=\"col-sm-6 col-12\">\n                  <!-- Button trigger modal -->\n                  <button\n                    type=\"button\"\n                    (click)=\"modalSelectOpen(modalSelect)\"\n                    class=\"btn btn-outline-primary btn-block\"\n                    rippleEffect\n                  >\n                    Ng-Select in Modal\n                  </button>\n\n                  <!-- Modal -->\n                  <ng-template #modalSelect let-modal>\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel1\">ng-select in Modal</h4>\n                      <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n                      <p>This is <code>ng-select</code> example in Modal.</p>\n                      <ng-select [items]=\"selectBasic\" bindLabel=\"name\" [loading]=\"selectBasicLoading\"> </ng-select>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('Accept click')\" rippleEffect>\n                        Accept\n                      </button>\n                    </div>\n                  </ng-template>\n                  <!-- / Modal -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Advance Options end -->\n\n    <!-- Select Sizing start -->\n    <section class=\"select-sizing\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- select size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      #SelectSizeLarge\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeLargeSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeLarge.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ select size large -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size default -->\n                    <ng-select\n                      #SelectSizeDefault\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeDefaultSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeDefault.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                      <!--/ Select Size default -->\n                    </ng-select>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      #SelectSizeSmall\n                      [items]=\"selectGroup\"\n                      [searchable]=\"false\"\n                      [(ngModel)]=\"SelectSizeSmallSelected\"\n                      bindLabel=\"name\"\n                      bindValue=\"name\"\n                    >\n                      <ng-template ng-header-tmp>\n                        <input\n                          class=\"form-control w-100\"\n                          type=\"text\"\n                          (input)=\"SelectSizeSmall.filter($event.target.value)\"\n                        />\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              <h4 class=\"card-title\">Multi Select Size</h4>\n            </div>\n\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <p class=\"card-text mb-1\">\n                    For different sizes of select, Use classes like <code>.ng-select-size-lg</code> &amp;\n                    <code>.ng-select-size-sm</code> for Large &amp; Small Select respectively.\n                  </p>\n                </div>\n                <div class=\"col-12\">\n                  <label>Large</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size large -->\n                    <ng-select\n                      class=\"ng-select-size-lg\"\n                      [items]=\"MultiLarge | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiLargeSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size large -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Default</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size default -->\n                    <ng-select\n                      [items]=\"MultiDefault | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiDefaultSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size default -->\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <label>Small</label>\n                  <div class=\"form-group\">\n                    <!-- Multi Select Size small -->\n                    <ng-select\n                      class=\"ng-select-size-sm\"\n                      [items]=\"MultiSmall | async\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"MultiSmallSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                    <!--/ Multi Select Size small -->\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- Select Sizing end -->\n  </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable } from 'rxjs';\n\nimport { Person, DataService } from 'app/main/forms/form-elements/select/data.service';\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SelectComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  // select basic\n  public selectBasic: Person[] = [];\n  public selectBasicLoading = false;\n\n  // select group\n  public selectGroupselected = 'Adam';\n  public selectGroup = [\n    {\n      name: 'Adam',\n      country: 'United States'\n    },\n    {\n      name: 'Homer',\n      country: ''\n    },\n    {\n      name: 'Samantha',\n      country: 'United States'\n    },\n    {\n      name: 'Amalie',\n      country: 'Argentina'\n    },\n    {\n      name: 'Estefanía',\n      country: 'Argentina'\n    },\n    {\n      name: 'Adrian',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Wladimir',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Natasha',\n      country: 'Ecuador'\n    },\n    {\n      name: 'Nicole',\n      country: 'Colombia'\n    },\n    {\n      name: 'Michael',\n      country: 'Colombia'\n    },\n    {\n      name: 'Nicolás',\n      country: 'Colombia'\n    }\n  ];\n\n  // select icon\n  public selectIcon = [\n    {\n      id: 1,\n      name: 'Chrome',\n      icon: 'fa fa-chrome'\n    },\n    {\n      id: 2,\n      name: 'Firefox',\n      icon: 'fa fa-firefox'\n    },\n    {\n      id: 3,\n      name: 'Safari',\n      icon: 'fa fa-safari'\n    },\n    {\n      id: 4,\n      name: 'Opera',\n      icon: 'fa fa-opera'\n    }\n  ];\n  public selectIconSelected = this.selectIcon[0].name;\n\n  // select custom option\n  public selectCustomSelected = this.selectIcon[0].name;\n\n  // select tag\n  public SelectTag;\n\n  // Select Custom Tag\n  public customTagselected;\n  public customTag: any[] = [];\n  public customTagNames = ['Uber', 'Microsoft', 'Flexigen'];\n\n  // select Basic Multi\n  public selectMulti: Observable<any[]>;\n  public selectMultiSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with group\n  public selectMultiGroupSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Multi with Icon\n  public multiIconGithubUsers: Observable<any[]>;\n  public multiIconGithubUsersSelected = ['anjmao'];\n\n  // Select Multi Custom\n  public multiCustomGithubUsersSelected = ['anjmao'];\n\n  // select with limited number of selections\n  public selectMultiLimitedSelected = [{ name: 'Karyn Wright' }];\n\n  // Select Custom header footer template\n  public selectCustomHeaderFooter = [];\n  public selectCustomHeaderFooterSelected = [];\n\n  // select size\n  public SelectSizeLargeSelected = 'Adam';\n  public SelectSizeDefaultSelected = 'Adam';\n  public SelectSizeSmallSelected = 'Adam';\n\n  // multiple sizes\n  public MultiLarge: Observable<any[]>;\n  public MultiLargeSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiDefault: Observable<any[]>;\n  public MultiDefaultSelected = [{ name: 'Karyn Wright' }];\n\n  public MultiSmall: Observable<any[]>;\n  public MultiSmallSelected = [{ name: 'Karyn Wright' }];\n\n  /**\n   * Constructor\n   *\n   * @param {DataService} dataService\n   * @param {NgbModal} modalService\n   */\n  constructor(private dataService: DataService, private modalService: NgbModal) { }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  // select basic\n  private selectBasicMethod() {\n    this.selectBasicLoading = true;\n    this.dataService.getPeople().subscribe(x => {\n      this.selectBasic = x;\n      this.selectBasicLoading = false;\n    });\n  }\n\n\n\n  // select multi limited selections\n  multiLimitedClearModel() {\n    this.selectMultiLimitedSelected = [];\n  }\n\n  /**\n   * Select Custom Tag\n   *\n   * @param name\n   */\n  selectAddTagMethod(name) {\n    return { name: name, tag: true };\n  }\n\n  customHeaderFooterSelectAll() {\n    this.selectCustomHeaderFooterSelected = this.selectCustomHeaderFooter.map(x => x.name);\n  }\n\n  customHeaderFooterUnselectAll() {\n    this.selectCustomHeaderFooterSelected = [];\n  }\n\n  // ng-select in model\n  modalSelectOpen(modalSelect) {\n    this.modalService.open(modalSelect, {\n      windowClass: 'modal'\n    });\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this.selectBasicMethod();\n\n    this.selectMulti = this.dataService.getPeople();\n\n    this.customTagNames.forEach((c, i) => {\n      this.customTag.push({ id: i, name: c });\n    });\n\n    this.multiIconGithubUsers = this.dataService.getGithubAccounts('anjm');\n\n    this.dataService.getPeople().subscribe(items => {\n      this.selectCustomHeaderFooter = items;\n    });\n\n    // multiple sizes\n    this.MultiLarge = this.dataService.getPeople();\n    this.MultiDefault = this.dataService.getPeople();\n    this.MultiSmall = this.dataService.getPeople();\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Select',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Select',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SelectComponent } from 'app/main/forms/form-elements/select/select.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/select',\n    component: SelectComponent,\n    data: { animation: 'select' }\n  }\n];\n\n@NgModule({\n  declarations: [SelectComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    NgSelectModule\n  ]\n})\nexport class SelectModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-elements/switch/switch.snippetcode';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html'\n})\nexport class SwitchComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeBasic = snippet.snippetCodeBasic;\n  public _snippetCodeColors = snippet.snippetCodeColors;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Switch',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Switch',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Switches Starts -->\n    <section id=\"basic-switches\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeBasic\">\n            <h4 class=\"card-title\">Basic Switch</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">use class <code>.switch-label</code> to add a label to switch.</p>\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n                </div>\n                <div class=\"custom-control custom-switch custom-control-inline\">\n                  <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Switches Ends -->\n\n    <!-- Switch Colors Starts -->\n    <section id=\"switch-colors\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeColors\">\n            <h4 class=\"card-title\">Colors</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.custom-control-&#123;$color-name&#125;</code> with <code>.custom-switch</code> to\n                change switch's color\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-control-primary custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n                </div>\n                <div class=\"custom-control custom-control-secondary custom-switch\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n                </div>\n                <div class=\"custom-control custom-control-success custom-switch\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n                </div>\n                <div class=\"custom-control custom-control-danger custom-switch\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n                </div>\n                <div class=\"custom-control custom-control-warning custom-switch\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n                </div>\n                <div class=\"custom-control custom-control-info custom-switch\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n                </div>\n                <div class=\"custom-control custom-control-dark custom-switch\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n                  <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Colors Ends -->\n\n    <!-- Switch Icons Starts -->\n    <section id=\"switch-icons\">\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Icons</h4>\n\n            <div class=\"card-body\">\n              <p class=\"card-text mb-0\">\n                Use class <code>.switch-icon-left & .switch-icon-right</code> inside of\n                <code>.custom-control-label</code> to create a switch with icon.\n              </p>\n              <!-- <div class=\"d-flex justify-content-start flex-wrap\"> -->\n              <div class=\"demo-inline-spacing\">\n                <div class=\"custom-control custom-switch\">\n                  <p class=\"mb-50\">Primary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch10\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-secondary\">\n                  <p class=\"mb-50\">Secondary</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch11\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-success\">\n                  <p class=\"mb-50\">Success</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch111\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-danger\">\n                  <p class=\"mb-50\">Danger</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch12\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-warning\">\n                  <p class=\"mb-50\">Warning</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch14\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-info\">\n                  <p class=\"mb-50\">Info</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch13\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n                <div class=\"custom-control custom-switch custom-switch-dark\">\n                  <p class=\"mb-50\">Dark</p>\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n                  <label class=\"custom-control-label\" for=\"customSwitch15\">\n                    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n                    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Switch Icons Ends -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { SwitchComponent } from 'app/main/forms/form-elements/switch/switch.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/switch',\n    component: SwitchComponent,\n    data: { animation: 'switch' }\n  }\n];\n\n@NgModule({\n  declarations: [SwitchComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreCommonModule\n  ]\n})\nexport class SwitchModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeBasic: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch1\" />\n    <label class=\"custom-control-label\" for=\"customSwitch1\">Toggle this switch element</label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-control-inline\">\n    <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch2\" />\n    <label class=\"custom-control-label\" for=\"customSwitch2\">Disabled switch element</label>\n  </div>\n  `\n};\nexport const snippetCodeColors: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-control-primary custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch3\" />\n    <label class=\"custom-control-label\" for=\"customSwitch3\"></label>\n  </div>\n  \n  <div class=\"custom-control custom-control-secondary custom-switch\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch44\" />\n    <label class=\"custom-control-label\" for=\"customSwitch44\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-success custom-switch\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch4\" />\n    <label class=\"custom-control-label\" for=\"customSwitch4\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-danger custom-switch\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch5\" />\n    <label class=\"custom-control-label\" for=\"customSwitch5\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-warning custom-switch\">\n    <p class=\"mb-50\">Warning</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch7\" />\n    <label class=\"custom-control-label\" for=\"customSwitch7\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-info custom-switch\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch6\" />\n    <label class=\"custom-control-label\" for=\"customSwitch6\"></label>\n  </div>\n\n  <div class=\"custom-control custom-control-dark custom-switch\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" checked class=\"custom-control-input\" id=\"customSwitch8\" />\n    <label class=\"custom-control-label\" for=\"customSwitch8\"></label>\n  </div>\n\n  `\n};\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n  <div class=\"custom-control custom-switch\">\n    <p class=\"mb-50\">Primary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch10\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch10\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-secondary\">\n    <p class=\"mb-50\">Secondary</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch11\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch11\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-success\">\n    <p class=\"mb-50\">Success</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch111\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch111\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-danger\">\n    <p class=\"mb-50\">Danger</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch12\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch12\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-warning\">\n  <p class=\"mb-50\">Warning</p>\n  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch14\" checked />\n  <label class=\"custom-control-label\" for=\"customSwitch14\">\n    <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n    <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n  </label>\n</div>\n\n  <div class=\"custom-control custom-switch custom-switch-info\">\n    <p class=\"mb-50\">Info</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch13\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch13\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n\n  <div class=\"custom-control custom-switch custom-switch-dark\">\n    <p class=\"mb-50\">Dark</p>\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch15\" checked />\n    <label class=\"custom-control-label\" for=\"customSwitch15\">\n      <span class=\"switch-icon-left\"><i data-feather=\"check\"></i></span>\n      <span class=\"switch-icon-right\"><i data-feather=\"x\"></i></span>\n    </label>\n  </div>\n  `\n};\n","import { Component, OnInit } from '@angular/core';\nimport * as snippet from 'app/main/forms/form-elements/textarea/textarea.snippetcode';\n\n@Component({\n  selector: 'app-textarea',\n  templateUrl: './textarea.component.html'\n})\nexport class TextareaComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeDefault = snippet.snippetCodeDefault;\n  public _snippetCodeFloating = snippet.snippetCodeFloating;\n  public _snippetCodeCounter = snippet.snippetCodeCounter;\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Textarea',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Elements',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Textarea',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Textarea start -->\n    <section class=\"basic-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeDefault\">\n            <h4 class=\"card-title\">Default</h4>\n            <div class=\"card-body\">\n              <p class=\"card-text\">To add a Textarea we have the component <code>textarea</code>.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <label for=\"basicTextarea\">Textarea</label>\n                  <fieldset class=\"form-group\">\n                    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic Textarea end -->\n\n    <!-- Floating Label Textarea start -->\n    <section class=\"floating-label-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeFloating\">\n            <h4 class=\"card-title\">Floating Label</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">Use <code>.form-label-group</code> to add a Floating Label with Textarea.</p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group\">\n                    <textarea\n                      class=\"form-control\"\n                      id=\"label-textarea\"\n                      rows=\"3\"\n                      placeholder=\"Label in Textarea\"\n                    ></textarea>\n                    <label for=\"label-textarea\">Label in Textarea</label>\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Floating Label Textarea end -->\n\n    <!-- Counter Textarea start -->\n    <section class=\"counter-textarea\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeCounter\">\n            <h4 class=\"card-title\">Counter</h4>\n            <div class=\"card-body\">\n              <p class=\"mb-2\">\n                There are times when we need the user to only enter a certain number of characters for it, we have the\n                property counter, the value is a number and determines the maximum. Use\n                <code>[maxlength]</code> property with <code>&lt;textarea&gt;</code>tag for limiting text input length.\n              </p>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <fieldset class=\"form-label-group mb-0\">\n                    <textarea\n                      [(ngModel)]=\"textLength.value\"\n                      #textLength\n                      [maxlength]=\"20\"\n                      class=\"form-control char-textarea\"\n                      id=\"textarea-counter\"\n                      rows=\"3\"\n                      placeholder=\"Counter\"\n                    ></textarea>\n                    <label for=\"textarea-counter\">Counter</label>\n                  </fieldset>\n                  <small class=\"textarea-counter-value float-right\"\n                    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n                    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n                  </small>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Counter Textarea end -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { TextareaComponent } from 'app/main/forms/form-elements/textarea/textarea.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-elements/textarea',\n    component: TextareaComponent,\n    data: { animation: 'textarea' }\n  }\n];\n\n@NgModule({\n  declarations: [TextareaComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), NgbModule, ContentHeaderModule, CardSnippetModule, FormsModule]\n})\nexport class TextareaModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeDefault: snippetCode = {\n  html: `\n  <label for=\"basicTextarea\">Textarea</label>\n  <fieldset class=\"form-group\">\n    <textarea class=\"form-control\" id=\"basicTextarea\" rows=\"3\" placeholder=\"Textarea\"></textarea>\n  </fieldset>\n  `\n};\nexport const snippetCodeFloating: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group\">\n    <textarea class=\"form-control\" id=\"label-textarea\" rows=\"3\" placeholder=\"Label in Textarea\"></textarea>\n    <label for=\"label-textarea\">Label in Textarea</label>\n  </fieldset>\n  `\n};\nexport const snippetCodeCounter: snippetCode = {\n  html: `\n  <fieldset class=\"form-label-group mb-0\">\n      <textarea [(ngModel)]=\"textLength.value\" #textLength [maxlength]=\"20\"  class=\"form-control char-textarea\" id=\"textarea-counter\" rows=\"3\" placeholder=\"Counter\"></textarea>\n      <label for=\"textarea-counter\">Counter</label>\n  </fieldset>\n  <small class=\"textarea-counter-value float-right\"\n    ><span *ngIf=\"textLength\" class=\"char-count\">{{ textLength.value.length }}</span>\n    <span *ngIf=\"!textLength\" class=\"char-count\">0 </span> / 20\n  </small>\n`\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport * as snippet from 'app/main/forms/form-layout/form-layout.snippetcode';\n\n@Component({\n  selector: 'app-form-layout',\n  templateUrl: './form-layout.component.html'\n})\nexport class FormLayoutComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeHorizontal = snippet.snippetCodeHorizontal;\n  public _snippetCodeIcons = snippet.snippetCodeIcons;\n  public _snippetCodeVertical = snippet.snippetCodeVertical;\n  public _snippetCodeVertiacalIcons = snippet.snippetCodeVertiacalIcons;\n  public _snippetCodeMultiple = snippet.snippetCodeMultiple;\n\n  constructor() {}\n\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Layouts',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Layouts',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <!-- Basic Horizontal form layout section start -->\n    <section id=\"basic-horizontal-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeHorizontal\">\n            <h4 class=\"card-title\">Horizontal Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"first-name\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-id\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-info\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"number\"\n                          id=\"contact-info\"\n                          class=\"form-control\"\n                          name=\"contact\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"password\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <input\n                          type=\"password\"\n                          id=\"password\"\n                          class=\"form-control\"\n                          name=\"password\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n                        <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeIcons\">\n            <h4 class=\"card-title\">Horizontal Form with Icons</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-horizontal\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"fname-icon\">First Name</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                          </div>\n                          <input\n                            type=\"text\"\n                            id=\"fname-icon\"\n                            class=\"form-control\"\n                            name=\"fname-icon\"\n                            placeholder=\"First Name\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"email-icon\">Email</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                          </div>\n                          <input\n                            type=\"email\"\n                            id=\"email-icon\"\n                            class=\"form-control\"\n                            name=\"email-id-icon\"\n                            placeholder=\"Email\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"contact-icon\">Mobile</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                          </div>\n                          <input\n                            type=\"number\"\n                            id=\"contact-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Mobile\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group row\">\n                      <div class=\"col-sm-3 col-form-label\">\n                        <label for=\"pass-icon\">Password</label>\n                      </div>\n                      <div class=\"col-sm-9\">\n                        <div class=\"input-group input-group-merge\">\n                          <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                          </div>\n                          <input\n                            type=\"password\"\n                            id=\"pass-icon\"\n                            class=\"form-control\"\n                            name=\"contact-icon\"\n                            placeholder=\"Password\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n                        <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-9 offset-sm-3\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Horizontal form layout section end -->\n\n    <!-- Basic Vertical form layout section start -->\n    <section id=\"basic-vertical-layouts\">\n      <div class=\"row match-height\">\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertical\">\n            <h4 class=\"card-title\">Vertical Form</h4>\n\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-vertical\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-vertical\"\n                        class=\"form-control\"\n                        name=\"fname\"\n                        placeholder=\"First Name\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-vertical\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-vertical\"\n                        class=\"form-control\"\n                        name=\"email-id\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-vertical\">Mobile</label>\n                      <input\n                        type=\"number\"\n                        id=\"contact-info-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Mobile\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-vertical\">Password</label>\n                      <input\n                        type=\"password\"\n                        id=\"password-vertical\"\n                        class=\"form-control\"\n                        name=\"contact\"\n                        placeholder=\"Password\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n                        <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n        <div class=\"col-md-6 col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeVertiacalIcons\">\n            <h4 class=\"card-title\">Vertical Form with Icons</h4>\n            <div class=\"card-body\">\n              <form class=\"form form-vertical\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-icon\">First Name</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n                        </div>\n                        <input\n                          type=\"text\"\n                          id=\"first-name-icon\"\n                          class=\"form-control\"\n                          name=\"fname-icon\"\n                          placeholder=\"First Name\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-icon\">Email</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n                        </div>\n                        <input\n                          type=\"email\"\n                          id=\"email-id-icon\"\n                          class=\"form-control\"\n                          name=\"email-id-icon\"\n                          placeholder=\"Email\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"contact-info-icon\">Mobile</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n                        </div>\n                        <input\n                          type=\"number\"\n                          id=\"contact-info-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Mobile\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"password-icon\">Password</label>\n                      <div class=\"input-group input-group-merge\">\n                        <div class=\"input-group-prepend\">\n                          <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n                        </div>\n                        <input\n                          type=\"password\"\n                          id=\"password-icon\"\n                          class=\"form-control\"\n                          name=\"contact-icon\"\n                          placeholder=\"Password\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n                        <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- / Basic Vertical form layout section end -->\n\n    <!-- / Basic multiple Column Form section start -->\n    <section id=\"multiple-column-form\">\n      <div class=\"row match-height\">\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeMultiple\">\n            <h4 class=\"card-title\">Multiple Column</h4>\n            <div class=\"card-body\">\n              <form class=\"form\">\n                <div class=\"row\">\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"first-name-column\">First Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"first-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"First Name\"\n                        name=\"fname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"last-name-column\">Last Name</label>\n                      <input\n                        type=\"text\"\n                        id=\"last-name-column\"\n                        class=\"form-control\"\n                        placeholder=\"Last Name\"\n                        name=\"lname-column\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"city-column\">City</label>\n                      <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"country-floating\">Country</label>\n                      <input\n                        type=\"text\"\n                        id=\"country-floating\"\n                        class=\"form-control\"\n                        name=\"country-floating\"\n                        placeholder=\"Country\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"company-column\">Company</label>\n                      <input\n                        type=\"text\"\n                        id=\"company-column\"\n                        class=\"form-control\"\n                        name=\"company-column\"\n                        placeholder=\"Company\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-md-6 col-12\">\n                    <div class=\"form-group\">\n                      <label for=\"email-id-column\">Email</label>\n                      <input\n                        type=\"email\"\n                        id=\"email-id-column\"\n                        class=\"form-control\"\n                        name=\"email-id-column\"\n                        placeholder=\"Email\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"col-12\">\n                    <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n                    <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!-- Basic multiple Column Form section end -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormLayoutComponent } from 'app/main/forms/form-layout/form-layout.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-layout',\n    component: FormLayoutComponent,\n    data: { animation: 'layout' }\n  }\n];\n\n@NgModule({\n  declarations: [FormLayoutComponent],\n  imports: [RouterModule.forChild(routes), ContentHeaderModule, CardSnippetModule, FormsModule, CoreCommonModule]\n})\nexport class FormLayoutModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeHorizontal: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"text\" id=\"first-name\" class=\"form-control\" name=\"fname\" placeholder=\"First Name\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input type=\"email\" id=\"email-id\" class=\"form-control\" name=\"email-id\" placeholder=\"Email\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"number\"\n            id=\"contact-info\"\n            class=\"form-control\"\n            name=\"contact\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <input\n            type=\"password\"\n            id=\"password\"\n            class=\"form-control\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\" />\n          <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeIcons: snippetCode = {\n  html: `\n<form class=\"form form-horizontal\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>First Name</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n            </div>\n            <input\n              type=\"text\"\n              id=\"fname-icon\"\n              class=\"form-control\"\n              name=\"fname-icon\"\n              placeholder=\"First Name\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Email</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n            </div>\n            <input\n              type=\"email\"\n              id=\"email-icon\"\n              class=\"form-control\"\n              name=\"email-id-icon\"\n              placeholder=\"Email\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Mobile</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n            </div>\n            <input\n              type=\"number\"\n              id=\"contact-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Mobile\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group row\">\n        <div class=\"col-sm-3 col-form-label\">\n          <label>Password</label>\n        </div>\n        <div class=\"col-sm-9\">\n          <div class=\"input-group input-group-merge\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n            </div>\n            <input\n              type=\"password\"\n              id=\"pass-icon\"\n              class=\"form-control\"\n              name=\"contact-icon\"\n              placeholder=\"Password\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck2\" />\n          <label class=\"custom-control-label\" for=\"customCheck2\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-9 offset-sm-3\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertical: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-vertical\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-vertical\"\n          class=\"form-control\"\n          name=\"fname\"\n          placeholder=\"First Name\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-vertical\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-vertical\"\n          class=\"form-control\"\n          name=\"email-id\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-vertical\">Mobile</label>\n        <input\n          type=\"number\"\n          id=\"contact-info-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Mobile\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-vertical\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password-vertical\"\n          class=\"form-control\"\n          name=\"contact\"\n          placeholder=\"Password\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck3\" />\n          <label class=\"custom-control-label\" for=\"customCheck3\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n\nexport const snippetCodeVertiacalIcons: snippetCode = {\n  html: `\n<form class=\"form form-vertical\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-icon\">First Name</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'user'\"></span></span>\n          </div>\n          <input\n            type=\"text\"\n            id=\"first-name-icon\"\n            class=\"form-control\"\n            name=\"fname-icon\"\n            placeholder=\"First Name\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-icon\">Email</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'mail'\"></span></span>\n          </div>\n          <input\n            type=\"email\"\n            id=\"email-id-icon\"\n            class=\"form-control\"\n            name=\"email-id-icon\"\n            placeholder=\"Email\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"contact-info-icon\">Mobile</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'smartphone'\"></span></span>\n          </div>\n          <input\n            type=\"number\"\n            id=\"contact-info-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Mobile\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"password-icon\">Password</label>\n        <div class=\"input-group input-group-merge\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\"><span [data-feather]=\"'lock'\"></span></span>\n          </div>\n          <input\n            type=\"password\"\n            id=\"password-icon\"\n            class=\"form-control\"\n            name=\"contact-icon\"\n            placeholder=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck4\" />\n          <label class=\"custom-control-label\" for=\"customCheck4\">Remember me</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\nexport const snippetCodeMultiple: snippetCode = {\n  html: `\n<form class=\"form\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"first-name-column\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"first-name-column\"\n          class=\"form-control\"\n          placeholder=\"First Name\"\n          name=\"fname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"last-name-column\">Last Name</label>\n        <input\n          type=\"text\"\n          id=\"last-name-column\"\n          class=\"form-control\"\n          placeholder=\"Last Name\"\n          name=\"lname-column\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"city-column\">City</label>\n        <input type=\"text\" id=\"city-column\" class=\"form-control\" placeholder=\"City\" name=\"city-column\" />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"country-floating\">Country</label>\n        <input\n          type=\"text\"\n          id=\"country-floating\"\n          class=\"form-control\"\n          name=\"country-floating\"\n          placeholder=\"Country\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"company-column\">Company</label>\n        <input\n          type=\"text\"\n          id=\"company-column\"\n          class=\"form-control\"\n          name=\"company-column\"\n          placeholder=\"Company\"\n        />\n      </div>\n    </div>\n    <div class=\"col-md-6 col-12\">\n      <div class=\"form-group\">\n        <label for=\"email-id-column\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email-id-column\"\n          class=\"form-control\"\n          name=\"email-id-column\"\n          placeholder=\"Email\"\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" rippleEffect class=\"btn btn-primary mr-1\">Submit</button>\n      <button type=\"reset\" rippleEffect class=\"btn btn-outline-secondary\">Reset</button>\n    </div>\n  </div>\n</form>\n  `\n};\n","import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const repeaterAnimation = trigger('heightIn', [\n  transition(':enter', [\n    style({ opacity: '0', height: '0px' }),\n    animate('.2s ease-out', style({ opacity: '1', height: '*' }))\n  ])\n]);\n","import { Component, OnInit } from '@angular/core';\n\nimport { repeaterAnimation } from 'app/main/forms/form-repeater/form-repeater.animation';\n\nimport * as snippet from 'app/main/forms/form-repeater/form-repeater.snippetcode';\n\n@Component({\n  selector: 'app-form-repeater',\n  templateUrl: './form-repeater.component.html',\n  animations: [repeaterAnimation]\n})\nexport class FormRepeaterComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // snippet code variable\n  public _snippetCodeInvoiceRepeater = snippet.snippetCodeInvoiceRepeater;\n\n  constructor() {}\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Reports',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Reports',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n    <section class=\"form-control-repeater\">\n      <div class=\"row\">\n        <!-- Invoice repeater -->\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInvoiceRepeater\">\n            <h4 class=\"card-title\">Form Repeater</h4>\n            <div class=\"card-body\">\n              <form action=\"#\" class=\"invoice-repeater\">\n                <div *ngFor=\"let item of items; let i = index\" @heightIn>\n                  <div class=\"row d-flex align-items-end\">\n                    <div class=\"col-md-4 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemName{{ i }}\">Item Name</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          [(ngModel)]=\"item.itemName\"\n                          name=\"itemName{{ i }}\"\n                          id=\"itemName{{ i }}\"\n                          placeholder=\"Vuexy Admin Template\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemCost\">Cost</label>\n                        <input\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"itemcost\"\n                          [(ngModel)]=\"item.itemCost\"\n                          name=\"itemCost{{ i }}\"\n                          id=\"itemCost{{ i }}\"\n                          placeholder=\"32\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"itemQuantity{{ i }}\">Quantity</label>\n                        <input\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"itemQuantity{{ i }}\"\n                          name=\"itemQuantity{{ i }}\"\n                          [(ngModel)]=\"item.itemQuantity\"\n                          placeholder=\"1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12\">\n                      <div class=\"form-group\">\n                        <label for=\"staticPrice\">Price</label>\n                        <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n                      </div>\n                    </div>\n\n                    <div class=\"col-md-2 col-12 mb-50\">\n                      <div class=\"form-group\">\n                        <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n                          <i data-feather=\"x\" class=\"mr-25\"></i>\n                          <span>Delete</span>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <hr />\n                </div>\n              </form>\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n                    <i data-feather=\"plus\" class=\"mr-25\"></i>\n                    <span>Add New</span>\n                  </button>\n                </div>\n              </div>\n              <pre class=\"p-1 text-white mt-1\">\n                <div  *ngFor=\"let item of items; let i = index\">\n    Index: {{ i }}\n    Item Name: {{ item.itemName }}\n    Cost: {{ item.itemCost }}\n    Quantity: {{ item.itemQuantity }}</div>\n              </pre>\n            </div>\n          </core-card-snippet>\n        </div>\n        <!--/ Invoice repeater -->\n      </div>\n    </section>\n\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { CoreCommonModule } from '@core/common.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { FormRepeaterComponent } from 'app/main/forms/form-repeater/form-repeater.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-repeater',\n    component: FormRepeaterComponent,\n    data: { animation: 'repeater' }\n  }\n];\n\n@NgModule({\n  declarations: [FormRepeaterComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), CardSnippetModule, FormsModule, CoreCommonModule, ContentHeaderModule]\n})\nexport class FormRepeaterModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeInvoiceRepeater: snippetCode = {\n  html: `\n  <form action=\"#\" class=\"invoice-repeater\">\n  <div *ngFor=\"let item of items; let i = index\" @heightIn>\n    <div class=\"row d-flex align-items-end\">\n      <div class=\"col-md-4 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemName{{ i }}\">Item Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            [(ngModel)]=\"item.itemName\"\n            name=\"itemName{{ i }}\"\n            id=\"itemName{{ i }}\"\n            placeholder=\"Vuexy Admin Template\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemCost\">Cost</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemcost\"\n            [(ngModel)]=\"item.itemCost\"\n            name=\"itemCost{{ i }}\"\n            id=\"itemCost{{ i }}\"\n            placeholder=\"32\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"itemQuantity{{ i }}\">Quantity</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"itemQuantity{{ i }}\"\n            name=\"itemQuantity{{ i }}\"\n            [(ngModel)]=\"item.itemQuantity\"\n            placeholder=\"1\"\n          />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12\">\n        <div class=\"form-group\">\n          <label for=\"staticPrice\">Price</label>\n          <input type=\"text\" readonly class=\"form-control-plaintext\" id=\"staticPrice\" value=\"$32\" />\n        </div>\n      </div>\n\n      <div class=\"col-md-2 col-12 mb-50\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-outline-danger text-nowrap px-1\" (click)=\"deleteItem(i)\" rippleEffect>\n            <i data-feather=\"x\" class=\"mr-25\"></i>\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    <hr />\n  </div>\n</form>\n<div class=\"row\">\n  <div class=\"col-12\">\n    <button class=\"btn btn-icon btn-primary\" type=\"button\" (click)=\"addItem()\" rippleEffect>\n      <i data-feather=\"plus\" class=\"mr-25\"></i>\n      <span>Add New</span>\n    </button>\n  </div>\n</div>\n<pre class=\"p-1 text-white mt-1\">\n  <div  *ngFor=\"let item of items; let i = index\">\nIndex: {{ i }}\nItem Name: {{ item.itemName }}\nCost: {{ item.itemCost }}\nQuantity: {{ item.itemQuantity }}</div>\n</pre>\n`,\n  ts: `\n  // public\n  public items = [{ itemId: '', itemName: '', itemQuantity: '', itemCost: '' }];\n\n  public item = {\n    itemName: '',\n    itemQuantity: '',\n    itemCost: ''\n  };\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Add Item\n   */\n  addItem() {\n    this.items.push({\n      itemId: '',\n      itemName: '',\n      itemQuantity: '',\n      itemCost: ''\n    });\n  }\n\n  /**\n   * DeleteItem\n   *\n   * @param id\n   */\n  deleteItem(id) {\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items.indexOf(this.items[i]) === id) {\n        this.items.splice(i, 1);\n        break;\n      }\n    }\n  }\n`\n};\n","import { UntypedFormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: UntypedFormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\n\nimport * as snippet from 'app/main/forms/form-validation/form-validation.snippetcode';\nimport { MustMatch } from './_helpers/must-match.validator';\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html'\n})\nexport class FormValidationComponent implements OnInit {\n  // public\n  public contentHeader: object;\n\n  public _snippetCodeTDsimpleValidation = snippet.snippetCodeTDsimpleValidation;\n  public _snippetCodeTDMultiRuleValidation = snippet.snippetCodeTDMultiRuleValidation;\n  public _snippetCodeInputValidation = snippet.snippetCodeInputValidation;\n  public _snippetCodeReactiveForms = snippet.snippetCodeReactiveForms;\n\n  public TDNameVar;\n  public TDEmailVar;\n\n  public ReactiveUserDetailsForm: UntypedFormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  constructor(private formBuilder: UntypedFormBuilder) {}\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n    console.log(this.ReactiveUserDetailsForm.value);\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.ReactiveUserDetailsForm.value));\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Validation',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Validation',\n            isLink: false\n          }\n        ]\n      }\n    };\n\n    // Reactive form initialization\n    this.ReactiveUserDetailsForm = this.formBuilder.group(\n      {\n        userName: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confPassword: ['', [Validators.required, Validators.minLength(6)]],\n        country: ['', [Validators.required]],\n        language: ['', [Validators.required]],\n        age: ['', [Validators.required]],\n        phoneNumber: ['', [Validators.required]]\n      },\n      {\n        validator: MustMatch('password', 'confPassword')\n      }\n    );\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <!-- content-header component -->\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <div class=\"row\">\n      <div class=\"col-12 mt-1 mb-1\">\n        <h4 class=\"text-uppercase\">Template Driven Form Validation</h4>\n        <p>\n          Template driven forms are forms where we write\n          <strong>logic, validations, controls etc, in html code</strong>. Template driven forms are suitable for simple\n          scenarios, uses two way data binding using the <code>[(NgModel)]</code> syntax.\n        </p>\n      </div>\n    </div>\n    <!-- Template Driven Simple Validation -->\n    <section id=\"simple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDsimpleValidation\">\n            <h4 class=\"card-title\">Simple Form Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDSimpleForm.form.valid)\" #TDSimpleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDNameRef.invalid\"\n                        [(ngModel)]=\"TDNameVar\"\n                        #TDNameRef=\"ngModel\"\n                        required\n                        id=\"TDName\"\n                        name=\"TDName\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDSimpleForm.submitted && TDEmailRef.invalid\"\n                        [(ngModel)]=\"TDEmailVar\"\n                        #TDEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDEmail\"\n                        name=\"TDEmail\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                      />\n                      <span *ngIf=\"TDSimpleForm.submitted && TDEmailRef.invalid\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n\n              <pre class=\"p-1 text-white mt-1\">\nUsername: {{ TDNameVar }}\n\nEmail: {{ TDEmailVar }}\n            </pre\n              >\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Simple Validation -->\n    <!-- Template Driven Multiple Rules Validation -->\n    <section id=\"multiple-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeTDMultiRuleValidation\">\n            <h4 class=\"card-title\">Validating Multiple Rules</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDMultiRuleForm.form.valid)\" #TDMultiRuleForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\"\n                        ngModel\n                        #TDMultiRuleNameRef=\"ngModel\"\n                        required\n                        id=\"TDMultiRuleName\"\n                        name=\"TDMultiRuleName\"\n                        type=\"text\"\n                        placeholder=\"Your Name\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\"\n                          >This field is required!</small\n                        >\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                        ngModel\n                        #TDMultiRuleEmailRef=\"ngModel\"\n                        required\n                        email\n                        id=\"TDMultiRuleEmail\"\n                        name=\"TDMultiRuleEmail\"\n                        type=\"text\"\n                        placeholder=\"Your Email\"\n                      />\n                      <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                        <small class=\"form-text text-danger\">email must be valid!</small>\n                      </span>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDMultiRulePassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDMultiRulePasswordRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                        id=\"TDMultiRulePassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n                        <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n                      <input\n                        type=\"password\"\n                        class=\"form-control\"\n                        [class.error]=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDMultiRuleConfPassword\"\n                        placeholder=\"Confirm Password\"\n                        class=\"form-control\"\n                        required\n                        ngModel\n                        #TDMultiRuleConfPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n                        id=\"TDMultiRuleConfPassword\"\n                      />\n                      <div\n                        *ngIf=\"TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\">\n                          Confirm password is required.\n                        </small>\n                        <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>\n                  Submit\n                </button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Multiple Rules Validation -->\n    <!-- Template Driven Input Validation -->\n    <section class=\"input-validation\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeInputValidation\">\n            <h4 class=\"card-title\">Inputs Validation</h4>\n            <div class=\"card-body\">\n              <form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n                <div class=\"row\">\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDRequiredFieldRef=\"ngModel\"\n                        required\n                        id=\"TDRequiredField\"\n                        name=\"TDRequiredField\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n                        >This field is required!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDNumberOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[0-9]+\"\n                        id=\"TDNumberOnly\"\n                        name=\"TDNumberOnly\"\n                        type=\"text\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The numeric field may only contain numeric characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n                      <input\n                        class=\"form-control input-md\"\n                        [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        #TDAlphabetOnlyRef=\"ngModel\"\n                        required\n                        pattern=\"[a-zA-Z]+$\"\n                        id=\"TDAlphabetOnly\"\n                        name=\"TDAlphabetOnly\"\n                        type=\"text\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n                        >The alphabetic field may only contain alphabet characters.</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n                      <input\n                        type=\"password\"\n                        name=\"TDPasswordOnly\"\n                        class=\"form-control\"\n                        [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        id=\"TDPasswordOnly\"\n                        placeholder=\"Your Password\"\n                        ngModel\n                        #TDPasswordOnlyRef=\"ngModel\"\n                        required\n                        minlength=\"6\"\n                        pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                      />\n                      <div\n                        *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n                        <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                          Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n                          more characters.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n                      <input\n                        type=\"password\"\n                        id=\"TDRepeatPassword\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        placeholder=\"Confirm Password\"\n                        minlength=\"6\"\n                        name=\"TDRepeatPassword\"\n                        placeholder=\"Confirm Password\"\n                        required\n                        ngModel\n                        #TDRepeatPasswordRef=\"ngModel\"\n                        pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      />\n                      <div\n                        *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n                        class=\"form-text text-danger\"\n                      >\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                        <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                          Password & Confirm Password does not match.</small\n                        >\n                      </div>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n                      <input\n                        type=\"email\"\n                        id=\"TDValidEmail\"\n                        name=\"TDValidEmail\"\n                        class=\"form-control\"\n                        [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        ngModel\n                        required\n                        #TDValidEmailRef=\"ngModel\"\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                        placeholder=\"Email\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid email!</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDNumBtwTenTwenty\"\n                        id=\"TDNumBtwTenTwenty\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"\\b([1][0-9]|2[0])\\b\"\n                        min=\"10\"\n                        max=\"20\"\n                        required\n                        placeholder=\"Enter Number between 10 & 20\"\n                        ngModel\n                        #TDNumBtwTenTwentyRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n                        >Enter Number between 10 & 20!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDRegex\"\n                        >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDRegex\"\n                        class=\"form-control\"\n                        [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^([0-9]+)$\"\n                        id=\"TDRegex\"\n                        placeholder=\"Enter specified regular expression\"\n                        required\n                        ngModel\n                        #TDRegexRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n                        >The regex field format is invalid!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n                        >Length should not be less than the specified length : 3</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDLengthLessThree\"\n                        id=\"TDLengthLessThree\"\n                        class=\"form-control\"\n                        [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        minlength=\"3\"\n                        placeholder=\"Enter minimum 3 characters\"\n                        ngModel\n                        required\n                        #TDLengthLessThreeRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n                        >The min field must be at least 3 characters!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n                        >The digits field must be numeric and exactly contain 3 digits</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDNumThreeDigit\"\n                        id=\"TDNumThreeDigit\"\n                        class=\"form-control\"\n                        [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"[1-9][0-9]{0,2}\"\n                        maxlength=\"3\"\n                        minlength=\"3\"\n                        placeholder=\"Enter Exactly 3 digits\"\n                        ngModel\n                        required\n                        #TDNumThreeDigitRef=\"ngModel\"\n                      />\n                      <small\n                        class=\"form-text text-danger\"\n                        *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n                        >The digits field must be numeric and exactly contain 3 digits!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDCharNumDU\"\n                        >Only alphabetic characters, numbers, dashes or underscores</label\n                      >\n                      <input\n                        type=\"text\"\n                        name=\"TDCharNumDU\"\n                        id=\"TDCharNumDU\"\n                        class=\"form-control\"\n                        [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^[-a-zA-Z_\\d]+$\"\n                        placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n                        required\n                        ngModel\n                        #TDCharNumDURef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n                        >Must Enter Character, Number, Dash or Uderscore!</small\n                      >\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n                      <input\n                        type=\"text\"\n                        name=\"TDUrl\"\n                        id=\"TDUrl\"\n                        class=\"form-control\"\n                        [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n                        placeholder=\"Enter valid url\"\n                        required\n                        ngModel\n                        #TDUrlRef=\"ngModel\"\n                      />\n                      <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n                        >Must be a valid url!</small\n                      >\n                    </div>\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n              </form>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n    <!--/ Template Driven Input Validation -->\n    <section id=\"reactive-forms\">\n      <div class=\"row\">\n        <div class=\"col-12 mt-1 mb-1\">\n          <h4 class=\"text-uppercase\">Reactive Form Validation</h4>\n          <p>\n            Reactive forms provide a model-driven approach to handling form inputs whose values change over time.\n            Validate form values, and create dynamic forms where you can add or remove controls at run time.\n          </p>\n          <p>\n            Reactive forms are more robust: they’re more scalable, reusable, and testable. If forms are a key part of\n            your application, use reactive forms\n          </p>\n        </div>\n        <div class=\"col-12\">\n          <core-card-snippet [snippetCode]=\"_snippetCodeReactiveForms\">\n            <h4 class=\"card-title\">User Details Form with Validation</h4>\n            <div class=\"card-body\">\n              <div class=\"row\">\n                <div class=\"col-12\">\n                  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n                    <h6 class=\"mb-2\">1. Account Details</h6>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDUserName\">Username</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDUserName\"\n                            formControlName=\"userName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.userName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDEmail\">Email</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDEmail\"\n                            formControlName=\"email\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.email.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n                            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPassword\">Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDPassword\"\n                            formControlName=\"password\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.password.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.password.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">\n                              Password must be at least 6 characters\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDConfPassword\">Confirm Password</label>\n                          <input\n                            type=\"password\"\n                            id=\"UDConfPassword\"\n                            formControlName=\"confPassword\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.confPassword.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">\n                              Confirm Password must be at least 6 characters\n                            </div>\n                            <div *ngIf=\"ReactiveUDForm.confPassword.errors.mustMatch\">Passwords must match</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <h6 class=\"mb-2\">2. Personal Info</h6>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDFirstName\">First Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDFirstName\"\n                            formControlName=\"firstName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.firstName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLastName\">Last Name</label>\n                          <input\n                            type=\"text\"\n                            id=\"UDLastName\"\n                            formControlName=\"lastName\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.lastName.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDCountry\">Country</label>\n                          <select\n                            id=\"UDCountry\"\n                            formControlName=\"country\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.country.errors }\"\n                          >\n                            <option value=\"USA\">USA</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"Russia\">Russia</option>\n                            <option value=\"UK\">UK</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.country.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDLanguage\">Language</label>\n                          <select\n                            id=\"UDLanguage\"\n                            formControlName=\"language\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.language.errors }\"\n                          >\n                            <option selected value=\"English\">English</option>\n                            <option value=\"Germany\">Germany</option>\n                            <option value=\"French\">French</option>\n                            <option value=\"Portuguese\">Portuguese</option>\n                          </select>\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.language.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDAge\">Age</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDAge\"\n                            formControlName=\"age\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.age.errors }\"\n                          />\n                          <div *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                          <label for=\"UDPhoneNumber\">Phone Number</label>\n                          <input\n                            type=\"number\"\n                            id=\"UDPhoneNumber\"\n                            formControlName=\"phoneNumber\"\n                            class=\"form-control\"\n                            [ngClass]=\"{ 'is-invalid': ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors }\"\n                          />\n                          <div\n                            *ngIf=\"ReactiveUDFormSubmitted && ReactiveUDForm.phoneNumber.errors\"\n                            class=\"invalid-feedback\"\n                          >\n                            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-12\">\n                        <div class=\"form-group\">\n                          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </core-card-snippet>\n        </div>\n      </div>\n    </section>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\n\nimport { FormValidationComponent } from 'app/main/forms/form-validation/form-validation.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-validation',\n    component: FormValidationComponent,\n    data: { animation: 'validation' }\n  }\n];\n\n@NgModule({\n  declarations: [FormValidationComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    NgbModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FormValidationModule {}\n","import { snippetCode } from '@core/components/card-snippet/card-snippet.component';\n\nexport const snippetCodeTDsimpleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDSimpleForm.form.valid\" #TDSimpleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDNameRef=\"ngModel\" required id=\"TDName\" name=\"TDName\"\n            type=\"text\" placeholder=\"Name\">\n          <span *ngIf=\"TDSimpleForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDEmailRef=\"ngModel\" required email id=\"TDEmail\"\n            name=\"TDEmail\" type=\"text\" placeholder=\"Email\">\n          <span *ngIf=\"TDSimpleForm.submitted\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"!TDEmailRef.valid\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeTDMultiRuleValidation: snippetCode = {\n  html: `\n  <form class=\"form-horizontal\" (ngSubmit)=\"TDMultiRuleForm.form.valid\" #TDMultiRuleForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleName\">Name</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleNameRef=\"ngModel\" required\n            id=\"TDMultiRuleName\" name=\"TDMultiRuleName\" type=\"text\" placeholder=\"Your Name\">\n          <span *ngIf=\"!TDMultiRuleNameRef.valid && TDMultiRuleNameRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\" *ngIf=\"TDMultiRuleNameRef.errors.required\">This\n              field is\n              required!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n          <input class=\"form-control input-md\" ngModel #TDMultiRuleEmailRef=\"ngModel\" required email\n            id=\"TDMultiRuleEmail\" name=\"TDMultiRuleEmail\" type=\"text\" placeholder=\"Your Email\">\n          <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n            <small class=\"form-text text-muted danger\">email must be valid!</small>\n          </span>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRulePassword\">Password</label>\n          <input type=\"password\" name=\"TDMultiRulePassword\" class=\"form-control\" placeholder=\"Your Password\"\n            ngModel #TDMultiRulePasswordRef=\"ngModel\" required minlength=\"6\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" id=\"TDMultiRulePassword\">\n          <div *ngIf=\"TDMultiRulePasswordRef.invalid && TDMultiRulePasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.required\"> Password is required. </small>\n            <small *ngIf=\"TDMultiRulePasswordRef.errors.pattern\"> Must contain at least one number and one\n              uppercase and\n              lowercase letter, and at least 8 or more characters.</small>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-6\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"TDMultiRuleConfPassword\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" minlength=\"6\"\n            name=\"TDMultiRuleConfPassword\" placeholder=\"Confirm Password\" class=\"form-control\" required ngModel\n            #TDMultiRuleConfPasswordRef=\"ngModel\" pattern=\"{{ TDMultiRulePasswordRef.value }}\"\n            id=\"TDMultiRuleConfPassword\">\n          <div *ngIf=\" TDMultiRuleConfPasswordRef.invalid && TDMultiRuleConfPasswordRef.touched\"\n            class=\"form-text text-muted danger\">\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.required\"> Confirm password is required. </small>\n            <small *ngIf=\"TDMultiRuleConfPasswordRef.errors.pattern\"> Password & Confirm Password does not\n              match.</small>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" [disabled]=\"!TDMultiRuleForm.form.valid\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n  </form>\n  `\n};\nexport const snippetCodeInputValidation: snippetCode = {\n  html: `\n<form class=\"form-horizontal\" (ngSubmit)=\"(TDValidationForm.form.valid)\" #TDValidationForm=\"ngForm\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRequiredField\">This field is required</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDRequiredFieldRef=\"ngModel\"\n          required\n          id=\"TDRequiredField\"\n          name=\"TDRequiredField\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDRequiredFieldRef.invalid && TDValidationForm.submitted\"\n          >This field is required!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumberOnly\">Must only consist of numbers</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDNumberOnlyRef=\"ngModel\"\n          required\n          pattern=\"[0-9]+\"\n          id=\"TDNumberOnly\"\n          name=\"TDNumberOnly\"\n          type=\"text\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDNumberOnlyRef.invalid && TDValidationForm.submitted\"\n          >The numeric field may only contain numeric characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDAlphabetOnly\">Only alphabetic characters</label>\n        <input\n          class=\"form-control input-md\"\n          [class.error]=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          #TDAlphabetOnlyRef=\"ngModel\"\n          required\n          pattern=\"[a-zA-Z]+$\"\n          id=\"TDAlphabetOnly\"\n          name=\"TDAlphabetOnly\"\n          type=\"text\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDAlphabetOnlyRef.invalid && TDValidationForm.submitted\"\n          >The alphabetic field may only contain alphabet characters.</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDPasswordOnly\">Password Input Field</label>\n        <input\n          type=\"password\"\n          name=\"TDPasswordOnly\"\n          class=\"form-control\"\n          [class.error]=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          id=\"TDPasswordOnly\"\n          placeholder=\"Your Password\"\n          ngModel\n          #TDPasswordOnlyRef=\"ngModel\"\n          required\n          minlength=\"6\"\n          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n        />\n        <div\n          *ngIf=\"TDPasswordOnlyRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> password is required. </small>\n          <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n            Must contain at least one number and one uppercase and lowercase letter, and at least 8 or\n            more characters.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRepeatPassword\">Repeat password must match</label>\n        <input\n          type=\"password\"\n          id=\"TDRepeatPassword\"\n          class=\"form-control\"\n          [class.error]=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          placeholder=\"Confirm Password\"\n          minlength=\"6\"\n          name=\"TDRepeatPassword\"\n          placeholder=\"Confirm Password\"\n          required\n          ngModel\n          #TDRepeatPasswordRef=\"ngModel\"\n          pattern=\"{{ TDPasswordOnlyRef.value }}\"\n        />\n        <div\n          *ngIf=\"TDRepeatPasswordRef.invalid && TDValidationForm.submitted\"\n          class=\"form-text text-danger\"\n        >\n          <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n          <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n            Password & Confirm Password does not match.</small\n          >\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDValidEmail\">Must be a valid email</label>\n        <input\n          type=\"email\"\n          id=\"TDValidEmail\"\n          name=\"TDValidEmail\"\n          class=\"form-control\"\n          [class.error]=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          ngModel\n          required\n          #TDValidEmailRef=\"ngModel\"\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          placeholder=\"Email\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDValidEmailRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid email!</small\n        >\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumBtwTenTwenty\">Enter Number between 10 & 20</label>\n        <input\n          type=\"text\"\n          name=\"TDNumBtwTenTwenty\"\n          id=\"TDNumBtwTenTwenty\"\n          class=\"form-control\"\n          [class.error]=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          min=\"10\"\n          max=\"20\"\n          required\n          placeholder=\"Enter Number between 10 & 20\"\n          ngModel\n          #TDNumBtwTenTwentyRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumBtwTenTwentyRef.invalid && TDValidationForm.submitted\"\n          >Enter Number between 10 & 20!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDRegex\"\n          >Must match the specified regular expression : ^([0-9]+)$ - numbers only</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDRegex\"\n          class=\"form-control\"\n          [class.error]=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^([0-9]+)$\"\n          id=\"TDRegex\"\n          placeholder=\"Enter specified regular expression\"\n          required\n          ngModel\n          #TDRegexRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDRegexRef.invalid && TDValidationForm.submitted\"\n          >The regex field format is invalid!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDLengthLessThree\"\n          >Length should not be less than the specified length : 3</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDLengthLessThree\"\n          id=\"TDLengthLessThree\"\n          class=\"form-control\"\n          [class.error]=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          minlength=\"3\"\n          placeholder=\"Enter minimum 3 characters\"\n          ngModel\n          required\n          #TDLengthLessThreeRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDLengthLessThreeRef.invalid && TDValidationForm.submitted\"\n          >The min field must be at least 3 characters!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDNumThreeDigit\"\n          >The digits field must be numeric and exactly contain 3 digits</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDNumThreeDigit\"\n          id=\"TDNumThreeDigit\"\n          class=\"form-control\"\n          [class.error]=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          pattern=\"([^0-9]*[0-9]+)+\"\n          maxlength=\"3\"\n          minlength=\"3\"\n          placeholder=\"Enter Exactly 3 digits\"\n          ngModel\n          required\n          #TDNumThreeDigitRef=\"ngModel\"\n        />\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"TDNumThreeDigitRef.invalid && TDValidationForm.submitted\"\n          >The digits field must be numeric and exactly contain 3 digits!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDCharNumDU\"\n          >Only alphabetic characters, numbers, dashes or underscores</label\n        >\n        <input\n          type=\"text\"\n          name=\"TDCharNumDU\"\n          id=\"TDCharNumDU\"\n          class=\"form-control\"\n          [class.error]=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          pattern=\"^[-a-zA-Z_\\d]+$\"\n          placeholder=\"Enter Character, Numbers, Dash, Uderscore\"\n          required\n          ngModel\n          #TDCharNumDURef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDCharNumDURef.invalid && TDValidationForm.submitted\"\n          >Must Enter Character, Number, Dash or Uderscore!</small\n        >\n      </div>\n      <div class=\"form-group\">\n        <label class=\"form-control-label\" for=\"TDUrl\">Must be a valid url</label>\n        <input\n          type=\"text\"\n          name=\"TDUrl\"\n          id=\"TDUrl\"\n          class=\"form-control\"\n          [class.error]=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          pattern=\"^(http(s)?:\\/\\/)?(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n          placeholder=\"Enter valid url\"\n          required\n          ngModel\n          #TDUrlRef=\"ngModel\"\n        />\n        <small class=\"form-text text-danger\" *ngIf=\"TDUrlRef.invalid && TDValidationForm.submitted\"\n          >Must be a valid url!</small\n        >\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" rippleEffect>Submit</button>\n</form>\n  `\n};\nexport const snippetCodeReactiveForms: snippetCode = {\n  html: `\n  <form [formGroup]=\"ReactiveUserDetailsForm\" (ngSubmit)=\"ReactiveUDFormOnSubmit()\">\n    <h6 class=\"mb-2\">1. Account Details</h6>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDUserName\">Username</label>\n          <input type=\"text\" id=\"UDUserName\" [(ngModel)]=\"UDForm.userName\" formControlName=\"userName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.userName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.userName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.userName.errors.required\">Username is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDEmail\">Email</label>\n          <input type=\"text\" id=\"UDEmail\" formControlName=\"email\" [(ngModel)]=\"UDForm.email\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.email.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.email.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.email.errors.required\">Email is required</div>\n            <div *ngIf=\"ReactiveUDForm.email.errors.email\">Email must be a valid email address</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPassword\">Password</label>\n          <input type=\"password\" id=\"UDPassword\" formControlName=\"password\" [(ngModel)]=\"UDForm.password\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.password.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.password.errors.required\">Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.password.errors.minlength\">Password must be at least 6 characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDConfPassword\">Confirm Password</label>\n          <input type=\"password\" id=\"UDConfPassword\" formControlName=\"confPassword\"\n            [(ngModel)]=\"UDForm.confPassword\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.confPassword.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.confPassword.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.required\">Confirm Password is required</div>\n            <div *ngIf=\"ReactiveUDForm.confPassword.errors.minlength\">Confirm Password must be at least 6\n              characters\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <h6 class=\"mb-2\">2. Personal Info</h6>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDFirstName\">First Name</label>\n          <input type=\"text\" id=\"UDFirstName\" [(ngModel)]=\"UDForm.firstName\" formControlName=\"firstName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.firstName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.firstName.errors.required\">First Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLastName\">Last Name</label>\n          <input type=\"text\" id=\"UDLastName\" formControlName=\"lastName\" [(ngModel)]=\"UDForm.lastName\"\n            class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.lastName.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.lastName.errors.required\">Last Name is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDCountry\">Country</label>\n          <select id=\"UDCountry\" formControlName=\"country\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.country.errors }\">\n            <option value=\"USA\">USA</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"Russia\">Russia</option>\n            <option value=\"UK\">UK</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.country.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.country.errors.required\">country is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDLanguage\">Language</label>\n          <select id=\"UDLanguage\" formControlName=\"language\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.language.errors }\">\n            <option selected value=\"English\">English</option>\n            <option value=\"Germany\">Germany</option>\n            <option value=\"French\">French</option>\n            <option value=\"Portuguese\">Portuguese</option>\n          </select>\n          <div *ngIf=\"submitted && ReactiveUDForm.language.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.language.errors.required\">language is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDAge\">Age</label>\n          <input type=\"number\" id=\"UDAge\" formControlName=\"age\" [(ngModel)]=\"UDForm.age\"\n            class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.age.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.age.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.age.errors.required\">Age is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"UDPhoneNumber\">Phone Number</label>\n          <input type=\"text\" id=\"UDPhoneNumber\" formControlName=\"phoneNumber\"\n            [(ngModel)]=\"UDForm.phoneNumber\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && ReactiveUDForm.phoneNumber.errors }\" />\n          <div *ngIf=\"submitted && ReactiveUDForm.phoneNumber.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"ReactiveUDForm.phoneNumber.errors.required\">Phone Number is required</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"form-group\">\n          <button class=\"btn btn-primary\" rippleEffect>Register</button>\n        </div>\n      </div>\n    </div>\n  </form>\n  `,\n  ts: `\n  public ReactiveUserDetailsForm: FormGroup;\n  public ReactiveUDFormSubmitted = false;\n\n  // Reactive User Details form data\n  public UDForm = {\n    userName: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confPassword: '',\n    age: '',\n    phoneNumber: ''\n  };\n\n  // getter for easy access to form fields\n  get ReactiveUDForm() {\n    return this.ReactiveUserDetailsForm.controls;\n  }\n\n  ReactiveUDFormOnSubmit() {\n    this.ReactiveUDFormSubmitted = true;\n\n    // stop here if form is invalid\n    if (this.ReactiveUserDetailsForm.invalid) {\n      return;\n    }\n\n    alert('SUCCESS!! :-)');\n  }\n\n  // Reactive form initialization\n  this.ReactiveUserDetailsForm = this.formBuilder.group({\n    userName: ['', Validators.required],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confPassword: ['', [Validators.required, Validators.minLength(6)]],\n    country: ['', [Validators.required]],\n    language: ['', [Validators.required]],\n    age: ['', [Validators.required]],\n    phoneNumber: ['', [Validators.required]]\n  });\n  `\n};\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FormWizardComponent implements OnInit {\n  // public\n  public contentHeader: object;\n  public TDNameVar;\n  public TDEmailVar;\n  public TDFirstNameVar;\n  public TDLastNameVar;\n  public twitterVar;\n  public facebookVar;\n  public googleVar;\n  public linkedinVar;\n  public landmarkVar;\n  public addressVar;\n\n  public selectBasic = [\n    { name: 'UK' },\n    { name: 'USA' },\n    { name: 'Spain' },\n    { name: 'France' },\n    { name: 'Italy' },\n    { name: 'Australia' }\n  ];\n\n  public selectMulti = [{ name: 'English' }, { name: 'French' }, { name: 'Spanish' }];\n  public selectMultiSelected;\n\n  // private\n  private horizontalWizardStepper: Stepper;\n  private verticalWizardStepper: Stepper;\n  private modernWizardStepper: Stepper;\n  private modernVerticalWizardStepper: Stepper;\n  private bsStepper;\n\n  /**\n   * Horizontal Wizard Stepper Next\n   *\n   * @param data\n   */\n  horizontalWizardStepperNext(data) {\n    if (data.form.valid === true) {\n      this.horizontalWizardStepper.next();\n    }\n  }\n  /**\n   * Horizontal Wizard Stepper Previous\n   */\n  horizontalWizardStepperPrevious() {\n    this.horizontalWizardStepper.previous();\n  }\n\n  /**\n   * Vertical Wizard Stepper Next\n   */\n  verticalWizardNext() {\n    this.verticalWizardStepper.next();\n  }\n  /**\n   * Vertical Wizard Stepper Previous\n   */\n  verticalWizardPrevious() {\n    this.verticalWizardStepper.previous();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Next\n   */\n  modernHorizontalNext() {\n    this.modernWizardStepper.next();\n  }\n  /**\n   * Modern Horizontal Wizard Stepper Previous\n   */\n  modernHorizontalPrevious() {\n    this.modernWizardStepper.previous();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Next\n   */\n  modernVerticalNext() {\n    this.modernVerticalWizardStepper.next();\n  }\n  /**\n   * Modern Vertical Wizard Stepper Previous\n   */\n  modernVerticalPrevious() {\n    this.modernVerticalWizardStepper.previous();\n  }\n\n  /**\n   * On Submit\n   */\n  onSubmit() {\n    alert('Submitted!!');\n    return false;\n  }\n\n  constructor() {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On Init\n   */\n  ngOnInit() {\n    this.horizontalWizardStepper = new Stepper(document.querySelector('#stepper1'), {});\n\n    this.verticalWizardStepper = new Stepper(document.querySelector('#stepper2'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernWizardStepper = new Stepper(document.querySelector('#stepper3'), {\n      linear: false,\n      animation: true\n    });\n\n    this.modernVerticalWizardStepper = new Stepper(document.querySelector('#stepper4'), {\n      linear: false,\n      animation: true\n    });\n\n    this.bsStepper = document.querySelectorAll('.bs-stepper');\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Form Wizard',\n      actionButton: true,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Forms',\n            isLink: true,\n            link: '/'\n          },\n          {\n            name: 'Form Wizard',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n}\n","<div class=\"content-wrapper container-xxl p-0\">\n  <div class=\"content-body\">\n    <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n    <!-- Horizontal Wizard -->\n    <section class=\"horizontal-wizard\">\n      <div id=\"stepper1\" class=\"bs-stepper horizontal-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#personal-info\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#address\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\"><i data-feather=\"chevron-right\" class=\"font-medium-2\"></i></div>\n          <div class=\"step\" data-target=\"#social-links\">\n            <button class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <form (ngSubmit)=\"(HWForm.form.valid)\" #HWForm=\"ngForm\">\n            <div id=\"account-details\" class=\"content\">\n              <form #accountDetailsForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Account Details</h5>\n                  <small class=\"text-muted\">Enter Your Account Details.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"username\">Username</label>\n                    <input\n                      [(ngModel)]=\"TDNameVar\"\n                      #TDNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDNameRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"johndoe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted && TDNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"email\">Email</label>\n                    <input\n                      [(ngModel)]=\"TDEmailVar\"\n                      #TDEmailRef=\"ngModel\"\n                      required\n                      email\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDEmailRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"john.doe@email.com\"\n                      aria-label=\"john.doe\"\n                    />\n                    <span *ngIf=\"accountDetailsForm.submitted\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"!TDEmailRef.valid\">Email must be valid!</small>\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"password\">Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDPasswordOnlyRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      ngModel\n                      #TDPasswordOnlyRef=\"ngModel\"\n                      required\n                      minlength=\"6\"\n                      pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n                    />\n                    <div\n                      *ngIf=\"TDPasswordOnlyRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.required\"> Password is required. </small>\n                      <small *ngIf=\"TDPasswordOnlyRef.errors.pattern\">\n                        Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more\n                        characters.</small\n                      >\n                    </div>\n                  </div>\n                  <div class=\"form-group form-password-toggle col-md-6\">\n                    <label class=\"form-label\" for=\"confirm-password\">Confirm Password</label>\n                    <input\n                      type=\"password\"\n                      name=\"confirm-password\"\n                      id=\"confirm-password\"\n                      class=\"form-control\"\n                      [class.error]=\"!TDRepeatPasswordRef.valid && accountDetailsForm.submitted\"\n                      placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                      required\n                      ngModel\n                      #TDRepeatPasswordRef=\"ngModel\"\n                      pattern=\"{{ TDPasswordOnlyRef.value }}\"\n                      minlength=\"6\"\n                    />\n                    <div\n                      *ngIf=\"TDRepeatPasswordRef.invalid && accountDetailsForm.submitted\"\n                      class=\"form-text text-danger\"\n                    >\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.required\"> Confirm password is required. </small>\n                      <small *ngIf=\"TDRepeatPasswordRef.errors.pattern\">\n                        Password & Confirm Password does not match.</small\n                      >\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-outline-secondary btn-prev\"\n                    disabled\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(accountDetailsForm)\"\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"personal-info\" class=\"content\">\n              <form #personalInfoForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Personal Info</h5>\n                  <small>Enter Your Personal Info.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"first-name\">First Name</label>\n                    <input\n                      [(ngModel)]=\"TDFirstNameVar\"\n                      #TDFirstNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"first-name\"\n                      id=\"first-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDFirstNameRef.invalid\"\n                      placeholder=\"John\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDFirstNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDFirstNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"last-name\">Last Name</label>\n                    <input\n                      [(ngModel)]=\"TDLastNameVar\"\n                      #TDLastNameRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"last-name\"\n                      id=\"last-name\"\n                      class=\"form-control\"\n                      [class.error]=\"personalInfoForm.submitted && TDLastNameRef.invalid\"\n                      placeholder=\"Doe\"\n                    />\n                    <span *ngIf=\"personalInfoForm.submitted && TDLastNameRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"TDLastNameRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"country\">Country</label>\n                    <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"language\">Language</label>\n                    <ng-select\n                      [items]=\"selectMulti\"\n                      [multiple]=\"true\"\n                      [closeOnSelect]=\"false\"\n                      [searchable]=\"false\"\n                      bindLabel=\"name\"\n                      name=\"selectLanguage\"\n                      placeholder=\"Select people\"\n                      [(ngModel)]=\"selectMultiSelected\"\n                    >\n                      <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                        <span class=\"ng-value-label\"> {{ item.name }}</span>\n                        <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                      </ng-template>\n                    </ng-select>\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(personalInfoForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"address\" class=\"content\">\n              <form #addressForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Address</h5>\n                  <small>Enter Your Address.</small>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"address\">Address</label>\n                    <input\n                      [(ngModel)]=\"addressVar\"\n                      #addressRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"address\"\n                      name=\"address\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && addressRef.invalid\"\n                      placeholder=\"98  Borough bridge Road, Birmingham\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && addressRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"addressRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"landmark\">Landmark</label>\n                    <input\n                      [(ngModel)]=\"landmarkVar\"\n                      #landmarkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      name=\"landmark\"\n                      id=\"landmark\"\n                      class=\"form-control\"\n                      [class.error]=\"addressForm.submitted && landmarkRef.invalid\"\n                      placeholder=\"Borough bridge\"\n                    />\n                    <span *ngIf=\"addressForm.submitted && landmarkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"landmarkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"pincode1\">Pincode</label>\n                    <input type=\"text\" id=\"pincode1\" class=\"form-control\" placeholder=\"658921\" />\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"city1\">City</label>\n                    <input type=\"text\" id=\"city1\" class=\"form-control\" placeholder=\"Birmingham\" />\n                  </div>\n                </div>\n\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button\n                    (click)=\"horizontalWizardStepperNext(addressForm)\"\n                    class=\"btn btn-primary btn-next\"\n                    rippleEffect\n                  >\n                    <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                    <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n            <div id=\"social-links\" class=\"content\">\n              <form #socialLinkForm=\"ngForm\">\n                <div class=\"content-header\">\n                  <h5 class=\"mb-0\">Social Links</h5>\n                  <small>Enter Your Social Links.</small>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"twitter\">Twitter</label>\n                    <input\n                      [(ngModel)]=\"twitterVar\"\n                      #twitterkRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"twitter\"\n                      name=\"twitter\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && twitterkRef.invalid\"\n                      placeholder=\"https://twitter.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && twitterkRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"twitterkRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"facebook\">Facebook</label>\n                    <input\n                      [(ngModel)]=\"facebookVar\"\n                      #facebookRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"facebook\"\n                      name=\"facebook\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && facebookRef.invalid\"\n                      placeholder=\"https://facebook.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && facebookRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"facebookRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"google\">Google+</label>\n                    <input\n                      [(ngModel)]=\"googleVar\"\n                      #googleRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"google\"\n                      name=\"google\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && googleRef.invalid\"\n                      placeholder=\"https://plus.google.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && googleRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"googleRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                  <div class=\"form-group col-md-6\">\n                    <label class=\"form-label\" for=\"linkedin\">Linkedin</label>\n                    <input\n                      [(ngModel)]=\"linkedinVar\"\n                      #linkedinRef=\"ngModel\"\n                      required\n                      type=\"text\"\n                      id=\"linkedin\"\n                      name=\"linkedin\"\n                      class=\"form-control\"\n                      [class.error]=\"socialLinkForm.submitted && linkedinRef.invalid\"\n                      placeholder=\"https://linkedin.com/abc\"\n                    />\n                    <span *ngIf=\"socialLinkForm.submitted && linkedinRef.invalid\" class=\"invalid-form\">\n                      <small class=\"form-text text-danger\" *ngIf=\"linkedinRef.errors.required\"\n                        >This field is required!</small\n                      >\n                    </span>\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-between\">\n                  <button\n                    type=\"button\"\n                    (click)=\"horizontalWizardStepperPrevious()\"\n                    class=\"btn btn-primary btn-prev\"\n                    rippleEffect\n                  >\n                    <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                    <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n                  </button>\n                  <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n                </div>\n              </form>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n    <!--/ Horizontal Wizard -->\n\n    <!-- Vertical Wizard -->\n    <section class=\"vertical-wizard\">\n      <div id=\"stepper2\" class=\"bs-stepper vertical vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">1</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">2</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">3</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">4</span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-username\">Username</label>\n                <input type=\"text\" id=\"vertical-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode2\">Pincode</label>\n                <input type=\"text\" id=\"pincode2\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city2\">City</label>\n                <input type=\"text\" id=\"city2\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"verticalWizardNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-twitter\">Twitter</label>\n                <input type=\"text\" id=\"vertical-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-facebook\">Facebook</label>\n                <input type=\"text\" id=\"vertical-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"vertical-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"verticalWizardPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Vertical Wizard -->\n\n    <!-- Modern Horizontal Wizard -->\n    <section class=\"modern-horizontal-wizard\">\n      <div id=\"stepper3\" class=\"bs-stepper wizard-modern modern-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"line\">\n            <i data-feather=\"chevron-right\" class=\"font-medium-2\"></i>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-username\">Username</label>\n                <input type=\"text\" id=\"modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode3\">Pincode</label>\n                <input type=\"text\" id=\"pincode3\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city3\">City</label>\n                <input type=\"text\" id=\"city3\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernHorizontalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-twitter\">Twitter</label>\n                <input type=\"text\" id=\"modern-twitter\" class=\"form-control\" placeholder=\"https://twitter.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-facebook\">Facebook</label>\n                <input type=\"text\" id=\"modern-facebook\" class=\"form-control\" placeholder=\"https://facebook.com/abc\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-google\">Google+</label>\n                <input type=\"text\" id=\"modern-google\" class=\"form-control\" placeholder=\"https://plus.google.com/abc\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"modern-linkedin\">Linkedin</label>\n                <input type=\"text\" id=\"modern-linkedin\" class=\"form-control\" placeholder=\"https://linkedin.com/abc\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernHorizontalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Horizontal Wizard -->\n\n    <!-- Modern Vertical Wizard -->\n    <section class=\"modern-vertical-wizard\">\n      <div id=\"stepper4\" class=\"bs-stepper vertical wizard-modern modern-vertical-wizard-example\">\n        <div class=\"bs-stepper-header\">\n          <div class=\"step\" data-target=\"#account-details-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"file-text\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Account Details</span>\n                <span class=\"bs-stepper-subtitle\">Setup Account Details</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#personal-info-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"user\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Personal Info</span>\n                <span class=\"bs-stepper-subtitle\">Add Personal Info</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#address-step-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"map-pin\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Address</span>\n                <span class=\"bs-stepper-subtitle\">Add Address</span>\n              </span>\n            </button>\n          </div>\n          <div class=\"step\" data-target=\"#social-links-vertical-modern\">\n            <button type=\"button\" class=\"step-trigger\">\n              <span class=\"bs-stepper-box\">\n                <i data-feather=\"link\" class=\"font-medium-3\"></i>\n              </span>\n              <span class=\"bs-stepper-label\">\n                <span class=\"bs-stepper-title\">Social Links</span>\n                <span class=\"bs-stepper-subtitle\">Add Social Links</span>\n              </span>\n            </button>\n          </div>\n        </div>\n        <div class=\"bs-stepper-content\">\n          <div id=\"account-details-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Account Details</h5>\n              <small class=\"text-muted\">Enter Your Account Details.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-username\">Username</label>\n                <input type=\"text\" id=\"vertical-modern-username\" class=\"form-control\" placeholder=\"johndoe\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-email\">Email</label>\n                <input\n                  type=\"email\"\n                  id=\"vertical-modern-email\"\n                  class=\"form-control\"\n                  placeholder=\"john.doe@email.com\"\n                  aria-label=\"john.doe\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n              <div class=\"form-group form-password-toggle col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-confirm-password\">Confirm Password</label>\n                <input\n                  type=\"password\"\n                  id=\"vertical-modern-confirm-password\"\n                  class=\"form-control\"\n                  placeholder=\"&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;&#xb7;\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-outline-secondary btn-prev\" disabled rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"personal-info-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Personal Info</h5>\n              <small>Enter Your Personal Info.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-first-name\">First Name</label>\n                <input type=\"text\" id=\"vertical-modern-first-name\" class=\"form-control\" placeholder=\"John\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-last-name\">Last Name</label>\n                <input type=\"text\" id=\"vertical-modern-last-name\" class=\"form-control\" placeholder=\"Doe\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-country\">Country</label>\n                <ng-select [items]=\"selectBasic\" bindLabel=\"name\"> </ng-select>\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-language\">Language</label>\n                <ng-select\n                  [items]=\"selectMulti\"\n                  [multiple]=\"true\"\n                  [closeOnSelect]=\"false\"\n                  [searchable]=\"false\"\n                  bindLabel=\"name\"\n                  name=\"selectLanguage\"\n                  placeholder=\"Select people\"\n                  [(ngModel)]=\"selectMultiSelected\"\n                >\n                  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                    <span class=\"ng-value-label\"> {{ item.name }}</span>\n                    <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n                  </ng-template>\n                </ng-select>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"address-step-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Address</h5>\n              <small>Enter Your Address.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-address\">Address</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-address\"\n                  class=\"form-control\"\n                  placeholder=\"98  Borough bridge Road, Birmingham\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-landmark\">Landmark</label>\n                <input type=\"text\" id=\"vertical-modern-landmark\" class=\"form-control\" placeholder=\"Borough bridge\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"pincode4\">Pincode</label>\n                <input type=\"text\" id=\"pincode4\" class=\"form-control\" placeholder=\"658921\" />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"city4\">City</label>\n                <input type=\"text\" id=\"city4\" class=\"form-control\" placeholder=\"Birmingham\" />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-primary btn-next\" (click)=\"modernVerticalNext()\" rippleEffect>\n                <span class=\"align-middle d-sm-inline-block d-none\">Next</span>\n                <i data-feather=\"arrow-right\" class=\"align-middle ml-sm-25 ml-0\"></i>\n              </button>\n            </div>\n          </div>\n          <div id=\"social-links-vertical-modern\" class=\"content\">\n            <div class=\"content-header\">\n              <h5 class=\"mb-0\">Social Links</h5>\n              <small>Enter Your Social Links.</small>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-twitter\">Twitter</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-twitter\"\n                  class=\"form-control\"\n                  placeholder=\"https://twitter.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-facebook\">Facebook</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-facebook\"\n                  class=\"form-control\"\n                  placeholder=\"https://facebook.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-google\">Google+</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-google\"\n                  class=\"form-control\"\n                  placeholder=\"https://plus.google.com/abc\"\n                />\n              </div>\n              <div class=\"form-group col-md-6\">\n                <label class=\"form-label\" for=\"vertical-modern-linkedin\">Linkedin</label>\n                <input\n                  type=\"text\"\n                  id=\"vertical-modern-linkedin\"\n                  class=\"form-control\"\n                  placeholder=\"https://linkedin.com/abc\"\n                />\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-between\">\n              <button class=\"btn btn-primary btn-prev\" (click)=\"modernVerticalPrevious()\" rippleEffect>\n                <i data-feather=\"arrow-left\" class=\"align-middle mr-sm-25 mr-0\"></i>\n                <span class=\"align-middle d-sm-inline-block d-none\">Previous</span>\n              </button>\n              <button class=\"btn btn-success btn-submit\" rippleEffect (click)=\"onSubmit()\">Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <!-- /Modern Vertical Wizard -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { CoreCommonModule } from '@core/common.module';\nimport { CardSnippetModule } from '@core/components/card-snippet/card-snippet.module';\nimport { ContentHeaderModule } from 'app/layout/components/content-header/content-header.module';\nimport { CoreDirectivesModule } from '@core/directives/directives';\n\nimport { FormWizardComponent } from 'app/main/forms/form-wizard/form-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: 'form-wizard',\n    component: FormWizardComponent,\n    data: { animation: 'wizard' }\n  }\n];\n\n@NgModule({\n  declarations: [FormWizardComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CoreCommonModule,\n    ContentHeaderModule,\n    CardSnippetModule,\n    FormsModule,\n    CoreDirectivesModule,\n    NgSelectModule\n  ]\n})\nexport class FormWizardModule {}\n","import { NgModule } from '@angular/core';\n\nimport { FormRepeaterModule } from 'app/main/forms/form-repeater/form-repeater.module';\nimport { FormElementsModule } from 'app/main/forms/form-elements/form-elements.module';\nimport { FormLayoutModule } from 'app/main/forms/form-layout/form-layout.module';\nimport { FormValidationModule } from 'app/main/forms/form-validation/form-validation.module';\nimport { FormWizardModule } from 'app/main/forms/form-wizard/form-wizard.module';\n\n@NgModule({\n  declarations: [],\n  imports: [FormElementsModule, FormLayoutModule, FormWizardModule, FormValidationModule, FormRepeaterModule]\n})\nexport class FormsModule {}\n","import { InjectionToken, Injectable, Inject, ElementRef, Renderer2, Directive, forwardRef, Input, HostListener, Pipe, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nconst config = new InjectionToken('config');\nconst NEW_CONFIG = new InjectionToken('NEW_CONFIG');\nconst INITIAL_CONFIG = new InjectionToken('INITIAL_CONFIG');\nconst initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: '.',\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    allowNegativeNumbers: false,\n    validation: true,\n    // tslint:disable-next-line: quotemark\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    leadZeroDateTime: false,\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\nconst timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\nconst withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\nclass MaskApplierService {\n    constructor(_config) {\n        this._config = _config;\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (str, thousandSeparatorChar, decimalChar, precision) => {\n            const x = str.split(decimalChar);\n            const decimals = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n            let res = x[0];\n            const separatorLimit = this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                if (res[0] === '-') {\n                    res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\n                }\n                else {\n                    res = res.slice(0, separatorLimit.length);\n                }\n            }\n            const rgx = /(\\d+)(\\d{3})/;\n            while (thousandSeparatorChar && rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substr(0, precision + 1);\n        };\n        this.percentage = (str) => {\n            return Number(str) >= 0 && Number(str) <= 100;\n        };\n        this.getPrecision = (maskExpression) => {\n            const x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        };\n        this.checkAndRemoveSuffix = (inputValue) => {\n            var _a, _b, _c;\n            for (let i = ((_a = this.suffix) === null || _a === void 0 ? void 0 : _a.length) - 1; i >= 0; i--) {\n                const substr = this.suffix.substr(i, (_b = this.suffix) === null || _b === void 0 ? void 0 : _b.length);\n                if (inputValue.includes(substr) &&\n                    (i - 1 < 0 || !inputValue.includes(this.suffix.substr(i - 1, (_c = this.suffix) === null || _c === void 0 ? void 0 : _c.length)))) {\n                    return inputValue.replace(substr, '');\n                }\n            }\n            return inputValue;\n        };\n        this.checkInputPrecision = (inputValue, precision, decimalMarker) => {\n            if (precision < Infinity) {\n                const precisionRegEx = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\n                const precisionMatch = inputValue.match(precisionRegEx);\n                if (precisionMatch && precisionMatch[0].length - 1 > precision) {\n                    const diff = precisionMatch[0].length - 1 - precision;\n                    inputValue = inputValue.substring(0, inputValue.length - diff);\n                }\n                if (precision === 0 && inputValue.endsWith(decimalMarker)) {\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        };\n        this._shift = new Set();\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.maskSpecialCharacters = this._config.specialCharacters;\n        this.maskAvailablePatterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.hiddenInput = this._config.hiddenInput;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n        this.allowNegativeNumbers = this._config.allowNegativeNumbers;\n        this.leadZeroDateTime = this._config.leadZeroDateTime;\n    }\n    applyMaskWithPattern(inputValue, maskAndPattern) {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (inputValue === undefined || inputValue === null || maskExpression === undefined) {\n            return '';\n        }\n        let cursor = 0;\n        let result = '';\n        let multi = false;\n        let backspaceShift = false;\n        let shift = 1;\n        let stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && (inputValue === null || inputValue === void 0 ? void 0 : inputValue.length) > 0) {\n            inputValue = this.checkAndRemoveSuffix(inputValue);\n        }\n        const inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            this.ipError = !!(inputArray.filter((i) => i === '.').length < 3 && inputArray.length < 7);\n            maskExpression = '099.099.099.099';\n        }\n        const arr = [];\n        for (let i = 0; i < inputValue.length; i++) {\n            if (inputValue[i].match('\\\\d')) {\n                arr.push(inputValue[i]);\n            }\n        }\n        if (maskExpression === 'CPF_CNPJ') {\n            this.cpfCnpjError = !!(arr.length !== 11 && arr.length !== 14);\n            if (arr.length > 11) {\n                maskExpression = '00.000.000/0000-00';\n            }\n            else {\n                maskExpression = '000.000.000-00';\n            }\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') || inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\n                inputValue = this._stripToDecimal(inputValue);\n                const precision = this.getPrecision(maskExpression);\n                inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            }\n            if (inputValue.indexOf('.') > 0 && !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                const base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\[\\]:\";<>.?\\/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            inputValue =\n                inputValue.length > 1 && inputValue[0] === '0' && inputValue[1] !== this.decimalMarker && !backspaced\n                    ? inputValue.slice(1, inputValue.length)\n                    : inputValue;\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            const thousandSeperatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            const decimalMarkerEscaped = this._charToRegExpExpression(this.decimalMarker);\n            const invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'\n                .replace(thousandSeperatorCharEscaped, '')\n                .replace(decimalMarkerEscaped, '');\n            const invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp)) {\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision = this.getPrecision(maskExpression);\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            const strForSep = inputValue.replace(new RegExp(thousandSeperatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            const commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 && position > 0 && !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // tslint:disable-next-line\n            let i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i]) {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor]) && maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2])) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    const daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if ((Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\n                            Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\n                            inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        const monthsCount = 12;\n                        // mask without day\n                        const withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        const day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\n                                inputValue[cursor] !== '/') ||\n                                inputValue[cursor] === '/' ||\n                                (inputValue[cursor - 3] === '/' &&\n                                    Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\n                                    inputValue[cursor - 1] !== '/') ||\n                                inputValue[cursor - 1] === '/');\n                        // 10<day<31 && month<12 for input\n                        const day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount || inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        const day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            !inputValue.slice(cursor - 2, cursor).includes('/') &&\n                            Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\n                        // 10<day<31 && month<12 for paste whole data\n                        const day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if ((Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\n                            withoutDays ||\n                            day1monthInput ||\n                            day2monthInput ||\n                            day1monthPaste ||\n                            day2monthPaste) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    this._shiftStep(maskExpression, cursor, inputArray.length);\n                    i--;\n                }\n                else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.maskAvailablePatterns[maskExpression[cursor]] &&\n                    this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n                    if (!!inputArray[cursor] &&\n                        maskExpression !== '099.099.099.099' &&\n                        maskExpression !== '000.000.000-00' &&\n                        maskExpression !== '00.000.000/0000-00') {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2]) &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped &&\n                    this.maskSpecialCharacters.indexOf(inputSymbol) < 0 &&\n                    inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        let newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        let actualShift = justPasted ? cursor : this._shift.has(position) ? shift : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let onlySpecial = false;\n        if (backspaced) {\n            onlySpecial = inputArray.every((char) => this.maskSpecialCharacters.includes(char));\n        }\n        let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    _findSpecialChar(inputSymbol) {\n        return this.maskSpecialCharacters.find((val) => val === inputSymbol);\n    }\n    _checkSymbolMask(inputSymbol, maskSymbol) {\n        this.maskAvailablePatterns = this.customPattern ? this.customPattern : this.maskAvailablePatterns;\n        return (this.maskAvailablePatterns[maskSymbol] &&\n            this.maskAvailablePatterns[maskSymbol].pattern &&\n            this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol));\n    }\n    _stripToDecimal(str) {\n        return str\n            .split('')\n            .filter((i, idx) => {\n            return (i.match('^-?\\\\d') ||\n                i.match('\\\\s') ||\n                i === '.' ||\n                i === ',' ||\n                (i === '-' && idx === 0 && this.allowNegativeNumbers));\n        })\n            .join('');\n    }\n    _charToRegExpExpression(char) {\n        if (char) {\n            const charsToEscape = '[\\\\^$.|?*+()';\n            return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? '\\\\' + char : char;\n        }\n        return char;\n    }\n    _shiftStep(maskExpression, cursor, inputLength) {\n        const shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor)) ? inputLength : cursor;\n        this._shift.add(shiftStep + this.prefix.length || 0);\n    }\n}\nMaskApplierService.ɵfac = function MaskApplierService_Factory(t) { return new (t || MaskApplierService)(ɵngcc0.ɵɵinject(config)); };\nMaskApplierService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskApplierService, factory: MaskApplierService.ɵfac });\nMaskApplierService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskApplierService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, null); })();\n\nclass MaskService extends MaskApplierService {\n    constructor(document, _config, _elementRef, _renderer) {\n        super(_config);\n        this.document = document;\n        this._config = _config;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this.maskExpression = '';\n        this.isNumberValue = false;\n        this.placeHolderCharacter = '_';\n        this.maskIsShown = '';\n        this.selStart = null;\n        this.selEnd = null;\n        /**\n         * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\n         * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\n         */\n        this.writingValue = false;\n        this.maskChanged = false;\n        this.onChange = (_) => { };\n    }\n    // tslint:disable-next-line:cyclomatic-complexity\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, cb = () => { }) {\n        if (!maskExpression) {\n            return inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol = !!inputValue && typeof this.selStart === 'number' ? inputValue[this.selStart] : '';\n        let newInputValue = '';\n        if (this.hiddenInput && !this.writingValue) {\n            let actualResult = this.actualValue.split('');\n            // tslint:disable no-unused-expression\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            // tslint:enable no-unused-expression\n            newInputValue =\n                this.actualValue.length && actualResult.length <= inputValue.length\n                    ? this.shiftTypedSymbols(actualResult.join(''))\n                    : inputValue;\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.maskSpecialCharacters = this.maskSpecialCharacters.filter((item) => item !== this.decimalMarker);\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length ? this.hideInput(result, this.maskExpression) : result;\n            }\n            return result;\n        }\n        const resLen = result.length;\n        const prefNmask = this.prefix + this.maskIsShown;\n        if (this.maskExpression.includes('H')) {\n            const countSkipedSymbol = this._numberSkipedSymbols(result);\n            return result + prefNmask.slice(resLen + countSkipedSymbol);\n        }\n        else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\n            return result + prefNmask;\n        }\n        return result + prefNmask.slice(resLen);\n    }\n    // get the number of characters that were shifted\n    _numberSkipedSymbols(value) {\n        const regex = /(^|\\D)(\\d\\D)/g;\n        let match = regex.exec(value);\n        let countSkipedSymbol = 0;\n        while (match != null) {\n            countSkipedSymbol += 1;\n            match = regex.exec(value);\n        }\n        return countSkipedSymbol;\n    }\n    applyValueChanges(position = 0, justPasted, backspaced, cb = () => { }) {\n        const formElement = this._elementRef.nativeElement;\n        formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\n        if (formElement === this.document.activeElement) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n    hideInput(inputValue, maskExpression) {\n        return inputValue\n            .split('')\n            .map((curr, index) => {\n            if (this.maskAvailablePatterns &&\n                this.maskAvailablePatterns[maskExpression[index]] &&\n                this.maskAvailablePatterns[maskExpression[index]].symbol) {\n                return this.maskAvailablePatterns[maskExpression[index]].symbol;\n            }\n            return curr;\n        })\n            .join('');\n    }\n    // this function is not necessary, it checks result against maskExpression\n    getActualValue(res) {\n        const compare = res\n            .split('')\n            .filter((symbol, i) => this._checkSymbolMask(symbol, this.maskExpression[i]) ||\n            (this.maskSpecialCharacters.includes(this.maskExpression[i]) && symbol === this.maskExpression[i]));\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n    shiftTypedSymbols(inputValue) {\n        let symbolToReplace = '';\n        const newInputValue = (inputValue &&\n            inputValue.split('').map((currSymbol, index) => {\n                if (this.maskSpecialCharacters.includes(inputValue[index + 1]) &&\n                    inputValue[index + 1] !== this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    const replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            })) ||\n            [];\n        return newInputValue.join('');\n    }\n    showMaskInInput(inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                if (this.maskExpression === 'IP') {\n                    return this._checkForIp(inputVal);\n                }\n                if (this.maskExpression === 'CPF_CNPJ') {\n                    return this._checkForCpfCnpj(inputVal);\n                }\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    }\n    clearIfNotMatchFn() {\n        const formElement = this._elementRef.nativeElement;\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(formElement.value, this.maskExpression);\n        }\n    }\n    set formElementProperty([name, value]) {\n        Promise.resolve().then(() => this._renderer.setProperty(this._elementRef.nativeElement, name, value));\n    }\n    checkSpecialCharAmount(mask) {\n        const chars = mask.split('').filter((item) => this._findSpecialChar(item));\n        return chars.length;\n    }\n    removeMask(inputValue) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.maskSpecialCharacters.concat('_').concat(this.placeHolderCharacter));\n    }\n    _checkForIp(inputVal) {\n        if (inputVal === '#') {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n    _checkForCpfCnpj(inputVal) {\n        const cpf = `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        const cnpj = `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        if (inputVal === '#') {\n            return cpf;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            if (inputVal[i].match('\\\\d')) {\n                arr.push(inputVal[i]);\n            }\n        }\n        if (arr.length <= 3) {\n            return cpf.slice(arr.length, cpf.length);\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return cpf.slice(arr.length + 1, cpf.length);\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return cpf.slice(arr.length + 2, cpf.length);\n        }\n        if (arr.length > 9 && arr.length < 11) {\n            return cpf.slice(arr.length + 3, cpf.length);\n        }\n        if (arr.length === 11) {\n            return '';\n        }\n        if (arr.length === 12) {\n            if (inputVal.length === 17) {\n                return cnpj.slice(16, cnpj.length);\n            }\n            return cnpj.slice(15, cnpj.length);\n        }\n        if (arr.length > 12 && arr.length <= 14) {\n            return cnpj.slice(arr.length + 4, cnpj.length);\n        }\n        return '';\n    }\n    /**\n     * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\n     * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\n     * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\n     * model value too. Therefore, we don't trigger onChange in this scenario.\n     * @param inputValue the current form input value\n     */\n    formControlResult(inputValue) {\n        if (this.writingValue || this.maskChanged) {\n            this.maskChanged = false;\n            return;\n        }\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._toNumber(this._checkSymbols(inputValue)));\n        }\n        else {\n            this.onChange(this._removeSuffix(inputValue));\n        }\n    }\n    _toNumber(value) {\n        if (!this.isNumberValue || value === '') {\n            return value;\n        }\n        const num = Number(value);\n        return Number.isNaN(num) ? value : num;\n    }\n    _removeMask(value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n    _removePrefix(value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n    _removeSuffix(value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n    _retrieveSeparatorValue(result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.maskSpecialCharacters);\n    }\n    _regExpForRemove(specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((item) => `\\\\${item}`).join('|'), 'gi');\n    }\n    _checkSymbols(result) {\n        if (result === '') {\n            return result;\n        }\n        const separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        let separatorValue = this._retrieveSeparatorValue(result);\n        if (this.decimalMarker !== '.') {\n            separatorValue = separatorValue.replace(this.decimalMarker, '.');\n        }\n        if (!this.isNumberValue) {\n            return separatorValue;\n        }\n        if (separatorPrecision) {\n            if (result === this.decimalMarker) {\n                return null;\n            }\n            return this._checkPrecision(this.maskExpression, separatorValue);\n        }\n        else {\n            return Number(separatorValue);\n        }\n    }\n    // TODO should think about helpers or separting decimal precision to own property\n    _retrieveSeparatorPrecision(maskExpretion) {\n        const matcher = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n    _checkPrecision(separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    }\n}\nMaskService.ɵfac = function MaskService_Factory(t) { return new (t || MaskService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(config), ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(ɵngcc0.Renderer2)); };\nMaskService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: MaskService, factory: MaskService.ɵfac });\nMaskService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, null); })();\n\n// tslint:disable deprecation\n// tslint:disable no-input-rename\nclass MaskDirective {\n    constructor(document, _maskService, _config) {\n        this.document = document;\n        this._maskService = _maskService;\n        this._config = _config;\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this.allowNegativeNumbers = null;\n        this.leadZeroDateTime = null;\n        this._maskValue = '';\n        this._position = null;\n        this._maskExpressionArray = [];\n        this._justPasted = false;\n        this.onChange = (_) => { };\n        this.onTouch = () => { };\n    }\n    ngOnChanges(changes) {\n        const { maskExpression, specialCharacters, patterns, prefix, suffix, thousandSeparator, decimalMarker, dropSpecialCharacters, hiddenInput, showMaskTyped, placeHolderCharacter, shownMaskExpression, showTemplate, clearIfNotMatch, validation, separatorLimit, allowNegativeNumbers, leadZeroDateTime, } = changes;\n        if (maskExpression) {\n            if (maskExpression.currentValue !== maskExpression.previousValue && !maskExpression.firstChange) {\n                this._maskService.maskChanged = true;\n            }\n            this._maskValue = maskExpression.currentValue || '';\n            if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\n                this._maskExpressionArray = maskExpression.currentValue.split('||').sort((a, b) => {\n                    return a.length - b.length;\n                });\n                this._maskValue = this._maskExpressionArray[0];\n                this.maskExpression = this._maskExpressionArray[0];\n                this._maskService.maskExpression = this._maskExpressionArray[0];\n            }\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.maskSpecialCharacters = specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.maskAvailablePatterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        if (allowNegativeNumbers) {\n            this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\n            if (this._maskService.allowNegativeNumbers) {\n                this._maskService.maskSpecialCharacters = this._maskService.maskSpecialCharacters.filter((c) => c !== '-');\n            }\n        }\n        if (leadZeroDateTime) {\n            this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\n        }\n        this._applyMask();\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    validate({ value }) {\n        if (!this._maskService.validation || !this._maskValue) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskService.cpfCnpjError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt = 0;\n            for (const key in this._maskService.maskAvailablePatterns) {\n                if (this._maskService.maskAvailablePatterns[key].optional &&\n                    this._maskService.maskAvailablePatterns[key].optional === true) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt = this._maskValue\n                            .split('')\n                            .filter((i) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 && value.toString().length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length === this._maskValue.length + Number(this._maskValue.split('{')[1].split('}')[0]) - 4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 && value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 && value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return this._createValidationError(value);\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length - this._maskService.checkSpecialCharAmount(this._maskValue) - counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return this._createValidationError(value);\n                }\n            }\n        }\n        return null;\n    }\n    onPaste() {\n        this._justPasted = true;\n    }\n    onInput(e) {\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        const position = el.selectionStart === 1\n            ? el.selectionStart + this._maskService.prefix.length\n            : el.selectionStart;\n        let caretShift = 0;\n        let backspaceShift = false;\n        this._maskService.applyValueChanges(position, this._justPasted, this._code === 'Backspace' || this._code === 'Delete', (shift, _backspaceShift) => {\n            this._justPasted = false;\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this.document.activeElement !== el) {\n            return;\n        }\n        this._position = this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        let positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        if (positionToApply > this._getActualInputLength()) {\n            positionToApply = this._getActualInputLength();\n        }\n        if (positionToApply < 0) {\n            positionToApply = 0;\n        }\n        el.setSelectionRange(positionToApply, positionToApply);\n        this._position = null;\n    }\n    onBlur() {\n        if (this._maskValue) {\n            this._maskService.clearIfNotMatchFn();\n        }\n        this.onTouch();\n    }\n    onFocus(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        const el = e.target;\n        const posStart = 0;\n        const posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // tslint:disable-next-line\n            e.keyCode !== 38) {\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange && this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        }\n        const nextValue = !el.value || el.value === this._maskService.prefix\n            ? this._maskService.prefix + this._maskService.maskIsShown\n            : el.value;\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if ((el.selectionStart || el.selectionEnd) <= this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n        /** select only inserted text */\n        if (el.selectionEnd > this._getActualInputLength()) {\n            el.selectionEnd = this._getActualInputLength();\n        }\n    }\n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown(e) {\n        var _a;\n        if (!this._maskValue) {\n            return;\n        }\n        this._code = e.code ? e.code : e.key;\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && el.selectionStart !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = ((_a = this.specialCharacters) === null || _a === void 0 ? void 0 : _a.length)\n                    ? this.specialCharacters\n                    : this._config.specialCharacters;\n                if (this.prefix.length > 1 && el.selectionStart <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, this.prefix.length);\n                }\n                else {\n                    if (this._inputValue.length !== el.selectionStart && el.selectionStart !== 1) {\n                        while (this.specialCharacters.includes(this._inputValue[el.selectionStart - 1].toString()) &&\n                            ((this.prefix.length >= 1 && el.selectionStart > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n                        }\n                    }\n                    this.suffixCheckOnPressDelete(e.keyCode, el);\n                }\n            }\n            this.suffixCheckOnPressDelete(e.keyCode, el);\n            if (this._maskService.prefix.length &&\n                el.selectionStart <= this._maskService.prefix.length &&\n                el.selectionEnd <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            const cursorStart = el.selectionStart;\n            // this.onFocus(e);\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < el.selectionStart) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        else if ((e.keyCode === 65 && e.ctrlKey === true) || // Ctrl+ A\n            (e.keyCode === 65 && e.metaKey === true) // Cmd + A (Mac)\n        ) {\n            el.setSelectionRange(0, this._getActualInputLength());\n            e.preventDefault();\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    }\n    /** It writes the value in the input */\n    writeValue(inputValue) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\n                if ('disable' in inputValue) {\n                    this.setDisabledState(Boolean(inputValue.disable));\n                }\n                inputValue = inputValue.value;\n            }\n            if (inputValue === undefined) {\n                inputValue = '';\n            }\n            if (typeof inputValue === 'number') {\n                inputValue = String(inputValue);\n                inputValue = this.decimalMarker !== '.' ? inputValue.replace('.', this.decimalMarker) : inputValue;\n                this._maskService.isNumberValue = true;\n            }\n            this._inputValue = inputValue;\n            this._setMask();\n            if ((inputValue && this._maskService.maskExpression) ||\n                (this._maskService.maskExpression && (this._maskService.prefix || this._maskService.showMaskTyped))) {\n                // Let the service we know we are writing value so that triggering onChange function wont happen during applyMask\n                this._maskService.writingValue = true;\n                this._maskService.formElementProperty = [\n                    'value',\n                    this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n                ];\n                // Let the service know we've finished writing value\n                this._maskService.writingValue = false;\n            }\n            else {\n                this._maskService.formElementProperty = ['value', inputValue];\n            }\n            this._inputValue = inputValue;\n        });\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n        this._maskService.onChange = this.onChange;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n    suffixCheckOnPressDelete(keyCode, el) {\n        if (keyCode === 46 && this.suffix.length > 0) {\n            if (this._inputValue.length - this.suffix.length <= el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n        }\n        if (keyCode === 8) {\n            if (this.suffix.length > 1 && this._inputValue.length - this.suffix.length < el.selectionStart) {\n                el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n            }\n            if (this.suffix.length === 1 && this._inputValue.length === el.selectionStart) {\n                el.setSelectionRange(el.selectionStart - 1, el.selectionStart - 1);\n            }\n        }\n    }\n    /** It disables the input element */\n    setDisabledState(isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n    _repeatPatternSymbols(maskExp) {\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp.split('').reduce((accum, currval, index) => {\n                this._start = currval === '{' ? index : this._start;\n                if (currval !== '}') {\n                    return this._maskService._findSpecialChar(currval) ? accum + currval : accum;\n                }\n                this._end = index;\n                const repeatNumber = Number(maskExp.slice(this._start + 1, this._end));\n                const replaceWith = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                return accum + replaceWith;\n            }, '')) ||\n            maskExp);\n    }\n    // tslint:disable-next-line:no-any\n    _applyMask() {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n    _validateTime(value) {\n        const rowMaskLen = this._maskValue.split('').filter((s) => s !== ':').length;\n        if (!value) {\n            return null; // Don't validate empty values to allow for optional form control\n        }\n        if ((+value[value.length - 1] === 0 && value.length < rowMaskLen) || value.length <= rowMaskLen - 2) {\n            return this._createValidationError(value);\n        }\n        return null;\n    }\n    _getActualInputLength() {\n        return (this._maskService.actualValue.length || this._maskService.actualValue.length + this._maskService.prefix.length);\n    }\n    _createValidationError(actualValue) {\n        return {\n            mask: {\n                requiredMask: this._maskValue,\n                actualValue,\n            },\n        };\n    }\n    _setMask() {\n        if (this._maskExpressionArray.length > 0) {\n            this._maskExpressionArray.some((mask) => {\n                var _a, _b;\n                const test = ((_a = this._maskService.removeMask(this._inputValue)) === null || _a === void 0 ? void 0 : _a.length) <= ((_b = this._maskService.removeMask(mask)) === null || _b === void 0 ? void 0 : _b.length);\n                if (this._inputValue && test) {\n                    this._maskValue = mask;\n                    this.maskExpression = mask;\n                    this._maskService.maskExpression = mask;\n                    return test;\n                }\n                else {\n                    this._maskValue = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                    this._maskService.maskExpression = this._maskExpressionArray[this._maskExpressionArray.length - 1];\n                }\n            });\n        }\n    }\n}\nMaskDirective.ɵfac = function MaskDirective_Factory(t) { return new (t || MaskDirective)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(MaskService), ɵngcc0.ɵɵdirectiveInject(config)); };\nMaskDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaskDirective, selectors: [[\"input\", \"mask\", \"\"], [\"textarea\", \"mask\", \"\"]], hostBindings: function MaskDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"paste\", function MaskDirective_paste_HostBindingHandler() { return ctx.onPaste(); })(\"input\", function MaskDirective_input_HostBindingHandler($event) { return ctx.onInput($event); })(\"blur\", function MaskDirective_blur_HostBindingHandler() { return ctx.onBlur(); })(\"click\", function MaskDirective_click_HostBindingHandler($event) { return ctx.onFocus($event); })(\"keydown\", function MaskDirective_keydown_HostBindingHandler($event) { return ctx.onKeyDown($event); });\n    } }, inputs: { maskExpression: [\"mask\", \"maskExpression\"], specialCharacters: \"specialCharacters\", patterns: \"patterns\", prefix: \"prefix\", suffix: \"suffix\", thousandSeparator: \"thousandSeparator\", decimalMarker: \"decimalMarker\", dropSpecialCharacters: \"dropSpecialCharacters\", hiddenInput: \"hiddenInput\", showMaskTyped: \"showMaskTyped\", placeHolderCharacter: \"placeHolderCharacter\", shownMaskExpression: \"shownMaskExpression\", showTemplate: \"showTemplate\", clearIfNotMatch: \"clearIfNotMatch\", validation: \"validation\", separatorLimit: \"separatorLimit\", allowNegativeNumbers: \"allowNegativeNumbers\", leadZeroDateTime: \"leadZeroDateTime\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: forwardRef(() => MaskDirective),\n                multi: true\n            },\n            MaskService,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaskDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: MaskService },\n    { type: undefined, decorators: [{ type: Inject, args: [config,] }] }\n];\nMaskDirective.propDecorators = {\n    maskExpression: [{ type: Input, args: ['mask',] }],\n    specialCharacters: [{ type: Input }],\n    patterns: [{ type: Input }],\n    prefix: [{ type: Input }],\n    suffix: [{ type: Input }],\n    thousandSeparator: [{ type: Input }],\n    decimalMarker: [{ type: Input }],\n    dropSpecialCharacters: [{ type: Input }],\n    hiddenInput: [{ type: Input }],\n    showMaskTyped: [{ type: Input }],\n    placeHolderCharacter: [{ type: Input }],\n    shownMaskExpression: [{ type: Input }],\n    showTemplate: [{ type: Input }],\n    clearIfNotMatch: [{ type: Input }],\n    validation: [{ type: Input }],\n    separatorLimit: [{ type: Input }],\n    allowNegativeNumbers: [{ type: Input }],\n    leadZeroDateTime: [{ type: Input }],\n    onPaste: [{ type: HostListener, args: ['paste',] }],\n    onInput: [{ type: HostListener, args: ['input', ['$event'],] }],\n    onBlur: [{ type: HostListener, args: ['blur',] }],\n    onFocus: [{ type: HostListener, args: ['click', ['$event'],] }],\n    onKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskDirective, [{\n        type: Directive,\n        args: [{\n                selector: 'input[mask], textarea[mask]',\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    {\n                        provide: NG_VALIDATORS,\n                        useExisting: forwardRef(() => MaskDirective),\n                        multi: true\n                    },\n                    MaskService,\n                ]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MaskService }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [config]\n            }] }]; }, { maskExpression: [{\n            type: Input,\n            args: ['mask']\n        }], specialCharacters: [{\n            type: Input\n        }], patterns: [{\n            type: Input\n        }], prefix: [{\n            type: Input\n        }], suffix: [{\n            type: Input\n        }], thousandSeparator: [{\n            type: Input\n        }], decimalMarker: [{\n            type: Input\n        }], dropSpecialCharacters: [{\n            type: Input\n        }], hiddenInput: [{\n            type: Input\n        }], showMaskTyped: [{\n            type: Input\n        }], placeHolderCharacter: [{\n            type: Input\n        }], shownMaskExpression: [{\n            type: Input\n        }], showTemplate: [{\n            type: Input\n        }], clearIfNotMatch: [{\n            type: Input\n        }], validation: [{\n            type: Input\n        }], separatorLimit: [{\n            type: Input\n        }], allowNegativeNumbers: [{\n            type: Input\n        }], leadZeroDateTime: [{\n            type: Input\n        }], onPaste: [{\n            type: HostListener,\n            args: ['paste']\n        }], onInput: [{\n            type: HostListener,\n            args: ['input', ['$event']]\n        }], onBlur: [{\n            type: HostListener,\n            args: ['blur']\n        }], onFocus: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    // tslint:disable-next-line: cyclomatic-complexity\n    onKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }] }); })();\n\nclass MaskPipe {\n    constructor(_maskService) {\n        this._maskService = _maskService;\n    }\n    transform(value, mask, thousandSeparator = null) {\n        if (!value && typeof value !== 'number') {\n            return '';\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator;\n        }\n        if (typeof mask === 'string') {\n            return this._maskService.applyMask(`${value}`, mask);\n        }\n        return this._maskService.applyMaskWithPattern(`${value}`, mask);\n    }\n}\nMaskPipe.ɵfac = function MaskPipe_Factory(t) { return new (t || MaskPipe)(ɵngcc0.ɵɵdirectiveInject(MaskApplierService, 16)); };\nMaskPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"mask\", type: MaskPipe, pure: true });\nMaskPipe.ctorParameters = () => [\n    { type: MaskApplierService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaskPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'mask',\n                pure: true\n            }]\n    }], function () { return [{ type: MaskApplierService }]; }, null); })();\n\nclass NgxMaskModule {\n    static forRoot(configValue) {\n        return {\n            ngModule: NgxMaskModule,\n            providers: [\n                {\n                    provide: NEW_CONFIG,\n                    useValue: configValue,\n                },\n                {\n                    provide: INITIAL_CONFIG,\n                    useValue: initialConfig,\n                },\n                {\n                    provide: config,\n                    useFactory: _configFactory,\n                    deps: [INITIAL_CONFIG, NEW_CONFIG],\n                },\n                MaskApplierService,\n            ],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxMaskModule,\n        };\n    }\n}\nNgxMaskModule.ɵfac = function NgxMaskModule_Factory(t) { return new (t || NgxMaskModule)(); };\nNgxMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxMaskModule });\nNgxMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxMaskModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MaskDirective, MaskPipe],\n                declarations: [MaskDirective, MaskPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMaskModule, { declarations: [MaskDirective, MaskPipe], exports: [MaskDirective, MaskPipe] }); })();\n/**\n * @internal\n */\nfunction _configFactory(initConfig, configValue) {\n    return configValue instanceof Function ? Object.assign(Object.assign({}, initConfig), configValue()) : Object.assign(Object.assign({}, initConfig), configValue);\n}\n\nconst commonjsGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : typeof self !== 'undefined'\n                ? self\n                : {};\n(function () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        commonjsGlobal.KeyboardEvent = function (_eventType, _init) { };\n    }\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_CONFIG, MaskApplierService, MaskDirective, MaskPipe, MaskService, NEW_CONFIG, NgxMaskModule, _configFactory, config, initialConfig, timeMasks, withoutValidation };\n\n"],"names":["i0","ctx_r18","SelectComponent","constructor","dataService","modalService","name","country","id","icon","selectIcon","selectBasicMethod","selectBasicLoading","getPeople","subscribe","x","selectBasic","multiLimitedClearModel","selectMultiLimitedSelected","selectAddTagMethod","tag","customHeaderFooterSelectAll","selectCustomHeaderFooterSelected","selectCustomHeaderFooter","map","customHeaderFooterUnselectAll","modalSelectOpen","modalSelect","open","windowClass","ngOnInit","selectMulti","customTagNames","forEach","c","i","customTag","push","multiIconGithubUsers","getGithubAccounts","items","MultiLarge","MultiDefault","MultiSmall","contentHeader","headerTitle","actionButton","breadcrumb","type","links","isLink","link","selectors","decls","vars","consts","template","ctx","InjectionToken","Injectable","Inject","ElementRef","Renderer2","Directive","forwardRef","Input","HostListener","Pipe","NgModule","__awaiter","NG_VALUE_ACCESSOR","NG_VALIDATORS","DOCUMENT","ɵngcc0","config","NEW_CONFIG","INITIAL_CONFIG","initialConfig","suffix","prefix","thousandSeparator","decimalMarker","clearIfNotMatch","showTemplate","showMaskTyped","placeHolderCharacter","dropSpecialCharacters","hiddenInput","undefined","shownMaskExpression","separatorLimit","allowNegativeNumbers","validation","specialCharacters","leadZeroDateTime","patterns","pattern","RegExp","optional","X","symbol","A","S","d","m","M","H","h","s","timeMasks","withoutValidation","MaskApplierService","_config","maskExpression","actualValue","_formatWithSeparators","str","thousandSeparatorChar","decimalChar","precision","split","decimals","length","res","replace","slice","rgx","test","substr","percentage","Number","getPrecision","Infinity","checkAndRemoveSuffix","inputValue","_a","_b","_c","includes","checkInputPrecision","precisionRegEx","_charToRegExpExpression","precisionMatch","match","diff","substring","endsWith","_shift","Set","maskSpecialCharacters","maskAvailablePatterns","applyMaskWithPattern","maskAndPattern","mask","customPattern","applyMask","position","justPasted","backspaced","cb","cursor","result","multi","backspaceShift","shift","stepBack","inputArray","toString","ipError","filter","arr","cpfCnpjError","startsWith","_stripToDecimal","indexOf","base","thousandSeperatorCharEscaped","decimalMarkerEscaped","invalidChars","invalidCharRegexp","strForSep","commaShift","shiftStep","add","clear","inputSymbol","_checkSymbolMask","_shiftStep","daysCount","monthsCount","withoutDays","day1monthInput","day2monthInput","day1monthPaste","day2monthPaste","_findSpecialChar","newPosition","has","actualShift","onlySpecial","every","char","find","val","maskSymbol","idx","join","charsToEscape","inputLength","ɵfac","MaskApplierService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","decorators","args","ngDevMode","ɵsetClassMetadata","MaskService","document","_elementRef","_renderer","isNumberValue","maskIsShown","selStart","selEnd","writingValue","maskChanged","onChange","_","showMaskInInput","formControlResult","getSymbol","newInputValue","actualResult","splice","shiftTypedSymbols","Boolean","getActualValue","item","hideInput","resLen","prefNmask","countSkipedSymbol","_numberSkipedSymbols","value","regex","exec","applyValueChanges","formElement","nativeElement","activeElement","clearIfNotMatchFn","curr","index","compare","symbolToReplace","currSymbol","replaceSymbol","inputVal","Error","_checkForIp","_checkForCpfCnpj","formElementProperty","Promise","resolve","then","setProperty","checkSpecialCharAmount","chars","removeMask","_removeMask","_removeSuffix","_removePrefix","concat","cpf","cnpj","Array","isArray","_toNumber","_checkSymbols","num","isNaN","specialCharactersForRemove","_regExpForRemove","_retrieveSeparatorValue","separatorPrecision","_retrieveSeparatorPrecision","separatorValue","_checkPrecision","maskExpretion","matcher","separatorExpression","toFixed","MaskService_Factory","MaskDirective","_maskService","_maskValue","_position","_maskExpressionArray","_justPasted","onTouch","ngOnChanges","changes","currentValue","previousValue","firstChange","sort","a","b","_applyMask","validate","_createValidationError","_validateTime","counterOfOpt","key","lastIndexOf","opt","onPaste","onInput","e","el","target","_inputValue","_setMask","selectionStart","caretShift","_code","_backspaceShift","positionToApply","_getActualInputLength","setSelectionRange","onBlur","onFocus","posStart","posEnd","selectionEnd","keyCode","focus","nextValue","onKeyDown","code","preventDefault","suffixCheckOnPressDelete","cursorStart","readOnly","ctrlKey","metaKey","writeValue","setDisabledState","disable","String","registerOnChange","fn","registerOnTouched","isDisabled","_repeatPatternSymbols","maskExp","reduce","accum","currval","_start","_end","repeatNumber","replaceWith","rowMaskLen","requiredMask","some","MaskDirective_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","hostBindings","MaskDirective_HostBindings","rf","ɵɵlistener","MaskDirective_paste_HostBindingHandler","MaskDirective_input_HostBindingHandler","$event","MaskDirective_blur_HostBindingHandler","MaskDirective_click_HostBindingHandler","MaskDirective_keydown_HostBindingHandler","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵNgOnChangesFeature","propDecorators","selector","providers","MaskPipe","transform","MaskPipe_Factory","ɵpipe","ɵɵdefinePipe","pure","NgxMaskModule","forRoot","configValue","ngModule","useValue","useFactory","_configFactory","deps","forChild","NgxMaskModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","initConfig","Function","Object","assign","commonjsGlobal","globalThis","window","global","self","KeyboardEvent","_eventType","_init"],"sourceRoot":"webpack:///","x_google_ignoreList":[78]}