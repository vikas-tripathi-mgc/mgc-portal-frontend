{"version":3,"file":"src_app_main_apps_email_email_module_ts.js","mappings":"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","sources":["./src/app/main/apps/email/email-compose/email-compose.component.ts","./src/app/main/apps/email/email-compose/email-compose.component.html","./src/app/main/apps/email/email-details/email-details.component.ts","./src/app/main/apps/email/email-details/email-details.component.html","./src/app/main/apps/email/email-list/email-list-item/email-list-item.component.ts","./src/app/main/apps/email/email-list/email-list-item/email-list-item.component.html","./src/app/main/apps/email/email-list/email-list.component.ts","./src/app/main/apps/email/email-list/email-list.component.html","./src/app/main/apps/email/email-sidebar/email-sidebar.component.ts","./src/app/main/apps/email/email-sidebar/email-sidebar.component.html","./src/app/main/apps/email/email.component.ts","./src/app/main/apps/email/email.component.html","./src/app/main/apps/email/email.module.ts","./src/app/main/apps/email/email.service.ts"],"sourcesContent":["import { Component, HostListener, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'app-email-compose',\n  templateUrl: './email-compose.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmailComposeComponent implements OnInit {\n  // Decorator\n  @HostListener('keydown.escape') fn() {\n    this.closeCompose();\n  }\n  @ViewChild('selectRef') private _selectRef: any;\n\n  // Public\n  public emailToSelect = [\n    { name: 'Jane Foster', avatar: 'assets/images/portrait/small/avatar-s-3.jpg' },\n    { name: 'Donna Frank', avatar: 'assets/images/portrait/small/avatar-s-1.jpg' },\n    { name: 'Gabrielle Robertson', avatar: 'assets/images/portrait/small/avatar-s-4.jpg' },\n    { name: 'Lori Spears', avatar: 'assets/images/portrait/small/avatar-s-6.jpg' }\n  ];\n\n  public emailCCSelect = [\n    { name: 'Jane Foster', avatar: 'assets/images/portrait/small/avatar-s-3.jpg' },\n    { name: 'Donna Frank', avatar: 'assets/images/portrait/small/avatar-s-1.jpg' },\n    { name: 'Gabrielle Robertson', avatar: 'assets/images/portrait/small/avatar-s-4.jpg' },\n    { name: 'Lori Spears', avatar: 'assets/images/portrait/small/avatar-s-6.jpg' }\n  ];\n\n  public emailBCCSelect = [\n    { name: 'Jane Foster', avatar: 'assets/images/portrait/small/avatar-s-3.jpg' },\n    { name: 'Donna Frank', avatar: 'assets/images/portrait/small/avatar-s-1.jpg' },\n    { name: 'Gabrielle Robertson', avatar: 'assets/images/portrait/small/avatar-s-4.jpg' },\n    { name: 'Lori Spears', avatar: 'assets/images/portrait/small/avatar-s-6.jpg' }\n  ];\n\n  public emailCCSelected = [];\n  public emailBCCSelected = [];\n\n  public isOpenCC = false;\n  public isOpenBCC = false;\n\n  public isComposeOpen: boolean = false;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   *\n   * @param {EmailService} _emailService\n   */\n  constructor(private _emailService: EmailService) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle CC & BCC\n   *\n   * @param toggleRef\n   */\n  togglCcBcc(toggleRef) {\n    if (toggleRef == 'cc') {\n      this.isOpenCC = !this.isOpenCC;\n    } else {\n      this.isOpenBCC = !this.isOpenBCC;\n    }\n  }\n\n  /**\n   * Close Compose\n   */\n  closeCompose() {\n    this.isComposeOpen = false;\n    this._emailService.composeEmail(this.isComposeOpen);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to Compose Model Changes\n    this._emailService.composeEmailChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.isComposeOpen = response;\n      if (this.isComposeOpen) {\n        setTimeout(() => {\n          this._selectRef.searchInput.nativeElement.focus();\n        }, 0);\n      }\n    });\n  }\n\n  /**\n   * On destroy\n   */\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<!-- compose email -->\n<ng-container *ngIf=\"isComposeOpen === true\">\n  <div class=\"modal modal-sticky d-block\" id=\"compose-mail\">\n    <div class=\"modal-dialog modal-lg modal-dialog-scrollable\">\n      <div class=\"modal-content p-0\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">Compose Mail</h5>\n          <div class=\"modal-actions\">\n            <a href=\"javascript:void(0);\" class=\"text-body mr-75\" (click)=\"closeCompose()\"\n              ><i data-feather=\"minus\"></i\n            ></a>\n            <a href=\"javascript:void(0);\" class=\"text-body mr-75\"><i data-feather=\"maximize-2\"></i></a>\n            <a class=\"text-body\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeCompose()\"\n              ><i data-feather=\"x\"></i\n            ></a>\n          </div>\n        </div>\n        <div class=\"modal-body flex-grow-1 p-0\">\n          <form class=\"compose-form\">\n            <div class=\"compose-mail-form-field select2-primary\">\n              <label for=\"email-to\" class=\"form-label\">To: </label>\n              <div class=\"flex-grow-1\">\n                <div class=\"form-group\">\n                  <ng-select\n                    #selectRef\n                    [items]=\"emailToSelect\"\n                    [multiple]=\"true\"\n                    [closeOnSelect]=\"false\"\n                    [searchable]=\"false\"\n                    bindLabel=\"name\"\n                    placeholder=\"Select people\"\n                    name=\"selectTo\"\n                  >\n                    <ng-template ng-option-tmp let-item=\"item\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                      </div>\n                    </ng-template>\n                    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                        <span class=\"ng-value-icon right\" aria-hidden=\"true\">×</span>\n                      </div>\n                    </ng-template>\n                  </ng-select>\n                </div>\n              </div>\n              <div>\n                <a class=\"toggle-cc text-body mr-1\" (click)=\"togglCcBcc('cc')\">Cc</a>\n                <a class=\"toggle-bcc text-body\" (click)=\"togglCcBcc('bcc')\">Bcc</a>\n              </div>\n            </div>\n            <div class=\"compose-mail-form-field cc-wrapper\" *ngIf=\"isOpenCC === true\">\n              <label for=\"emailCC\">Cc: </label>\n              <div class=\"flex-grow-1\">\n                <div class=\"form-group\">\n                  <ng-select\n                    [items]=\"emailCCSelect\"\n                    [multiple]=\"true\"\n                    [closeOnSelect]=\"false\"\n                    [searchable]=\"false\"\n                    bindLabel=\"name\"\n                    placeholder=\"Select people\"\n                    name=\"selectTo\"\n                  >\n                    <ng-template ng-option-tmp let-item=\"item\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                      </div>\n                    </ng-template>\n                    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                        <span class=\"ng-value-icon right\" aria-hidden=\"true\">×</span>\n                      </div>\n                    </ng-template>\n                  </ng-select>\n                </div>\n              </div>\n              <a class=\"text-body toggle-cc\" href=\"javascript:void(0);\" (click)=\"togglCcBcc('cc')\"\n                ><i data-feather=\"x\"></i\n              ></a>\n            </div>\n            <div class=\"compose-mail-form-field bcc-wrapper\" *ngIf=\"isOpenBCC === true\">\n              <label for=\"emailBCC\">Bcc: </label>\n              <div class=\"flex-grow-1\">\n                <div class=\"form-group\">\n                  <ng-select\n                    [items]=\"emailBCCSelect\"\n                    [multiple]=\"true\"\n                    [closeOnSelect]=\"false\"\n                    [searchable]=\"false\"\n                    bindLabel=\"name\"\n                    placeholder=\"Select people\"\n                    name=\"selectTo\"\n                  >\n                    <ng-template ng-option-tmp let-item=\"item\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                      </div>\n                    </ng-template>\n                    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n                      <div class=\"media align-items-center p-25\">\n                        <img\n                          class=\"d-block rounded-circle mr-50\"\n                          [src]=\"item.avatar\"\n                          height=\"24\"\n                          width=\"24\"\n                          [alt]=\"item.name\"\n                        />\n                        <div class=\"media-body\">\n                          <p class=\"mb-0\">{{ item.name }}</p>\n                        </div>\n                        <span class=\"ng-value-icon right\" aria-hidden=\"true\">×</span>\n                      </div>\n                    </ng-template>\n                  </ng-select>\n                </div>\n              </div>\n              <a class=\"text-body toggle-bcc\" href=\"javascript:void(0);\" (click)=\"togglCcBcc('bcc')\"\n                ><i data-feather=\"x\"></i\n              ></a>\n            </div>\n            <div class=\"compose-mail-form-field\">\n              <label for=\"emailSubject\">Subject: </label>\n              <input type=\"text\" id=\"emailSubject\" class=\"form-control\" placeholder=\"Subject\" name=\"emailSubject\" />\n            </div>\n            <div class=\"form-group\">\n              <quill-editor\n                name=\"addDescription\"\n                customToolbarPosition=\"'bottom'\"\n                class=\"border-bottom-0\"\n                placeholder=\"Message\"\n              >\n                <div quill-editor-toolbar>\n                  <div class=\"desc-toolbar border-top-0\">\n                    <span class=\"ql-formats mr-0\">\n                      <button class=\"ql-bold\"></button>\n                      <button class=\"ql-italic\"></button>\n                      <button class=\"ql-underline\"></button>\n                      <button class=\"ql-align\"></button>\n                      <button class=\"ql-link\"></button>\n                    </span>\n                  </div>\n                </div>\n              </quill-editor>\n            </div>\n            <div class=\"compose-footer-wrapper\">\n              <div class=\"btn-wrapper d-flex align-items-center\">\n                <div class=\"btn-group dropup mr-1\" ngbDropdown>\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeCompose()\" rippleEffect>Send</button>\n                  <button\n                    type=\"button\"\n                    ngbDropdownToggle\n                    class=\"btn btn-primary dropdown-toggle-split\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    data-reference=\"parent\"\n                    rippleEffect\n                  >\n                    <span class=\"sr-only\">Toggle Dropdown</span>\n                  </button>\n                  <div ngbDropdownMenu>\n                    <a ngbDropdownItem href=\"javascript:void(0);\"> Schedule Send</a>\n                  </div>\n                </div>\n                <!-- add attachment -->\n                <div class=\"email-attachement\">\n                  <label for=\"file-input\">\n                    <i data-feather=\"paperclip\" width=\"17\" height=\"17\" class=\"ml-50\"></i>\n                  </label>\n\n                  <input id=\"file-input\" type=\"file\" class=\"d-none\" />\n                </div>\n              </div>\n              <div class=\"footer-action d-flex align-items-center\">\n                <div ngbDropdown>\n                  <a ngbDropdownToggle class=\"hide-arrow\">\n                    <i\n                      class=\"cursor-pointer mr-50\"\n                      data-feather=\"more-vertical\"\n                      [size]=\"18\"\n                      role=\"button\"\n                      id=\"composeActions\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                    </i>\n                  </a>\n                  <div ngbDropdownMenu aria-labelledby=\"composeActions\">\n                    <a ngbDropdownItem href=\"javascript:void(0);\">\n                      <span class=\"align-middle\">Add Label</span>\n                    </a>\n                    <a ngbDropdownItem href=\"javascript:void(0);\">\n                      <span class=\"align-middle\">Plain text mode</span>\n                    </a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a ngbDropdownItem href=\"javascript:void(0);\">\n                      <span class=\"align-middle\">Print</span>\n                    </a>\n                    <a ngbDropdownItem href=\"javascript:void(0);\">\n                      <span class=\"align-middle\">Check Spelling</span>\n                    </a>\n                  </div>\n                </div>\n                <button type=\"reset\" class=\"btn p-0\" (click)=\"closeCompose()\">\n                  <i data-feather=\"trash\" [size]=\"18\" class=\"cursor-pointer\" data-dismiss=\"modal\"></i>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<!--/ compose email -->\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Email } from 'app/main/apps/email/email.model';\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'app-email-details',\n  templateUrl: './email-details.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmailDetailsComponent implements OnInit {\n  // Public\n  public openedEmail: Email;\n  public isOpen = false;\n  public emailAppDetailReplies = false;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   *\n   * @param {EmailService} _emailService\n   */\n  constructor(private _emailService: EmailService) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Open Replies\n   */\n  openReplies() {\n    this.emailAppDetailReplies = true;\n  }\n\n  /**\n   *  Toggle Details\n   */\n  toggleDetails() {\n    this._emailService.closeEmailDetails();\n    this._emailService.deselectEmails();\n  }\n\n  /**\n   * Update Folder on Selected Emails\n   *\n   * @param folderRef\n   */\n  updateFolderOnSelectedMails(folderRef) {\n    this._emailService.updateFolderOnSelectedEmails(folderRef);\n  }\n\n  /**\n   * Update Labels On Selected Emails\n   *\n   * @param labelRef\n   */\n  updateLabelOnSelectedEmails(labelRef) {\n    this._emailService.updateLabelOnSelectedEmails(labelRef);\n  }\n\n  /**\n   * Un-read Email\n   */\n  unRead() {\n    this._emailService.markAsUnread();\n  }\n\n  /**\n   * Toggle Starred\n   */\n  /**\n   * Toggle Starred\n   */\n  toggleStarred() {\n    this._emailService.toggleStarred(this.openedEmail);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n\n  ngOnInit(): void {\n    // Subscribe to Email Close\n    this._emailService.onEmailDetailChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      setTimeout(() => {\n        this.isOpen = response;\n        // this._emailService.deselectEmails();\n      });\n    });\n\n    // Subscribe to Email Open & Details\n    this._emailService.onOpenedEmailChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(email => {\n      this.openedEmail = email;\n      if (Object.keys(this.openedEmail).length > 0) {\n        this.isOpen = true;\n        this._emailService.setOpenedEmail(this.openedEmail);\n      }\n    });\n  }\n\n  /**\n   * On destroy\n   */\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<!-- Detailed Email View -->\n<ng-container *ngIf=\"isOpen === true\">\n  <div class=\"email-app-details\" [class.show]=\"isOpen === true\">\n    <!-- Detailed Email Header starts -->\n    <div class=\"email-detail-header\">\n      <div class=\"email-header-left d-flex align-items-center\">\n        <button class=\"btn go-back p-0 mr-1\" (click)=\"toggleDetails()\">\n          <i data-feather=\"chevron-left\" [size]=\"21\"></i>\n        </button>\n        <h4 class=\"email-subject mb-0\">{{ openedEmail.subject }}</h4>\n      </div>\n      <div class=\"email-header-right ml-2 pl-1\">\n        <ul class=\"list-inline m-0\">\n          <li class=\"list-inline-item mr-75\">\n            <button class=\"action-icon btn p-0\" (click)=\"toggleStarred(); $event.stopPropagation()\">\n              <i\n                class=\"fa font-medium-3\"\n                [ngClass]=\"{\n                  'fa-star text-warning': openedEmail.isStarred === true,\n                  'fa-star-o': openedEmail.isStarred !== true\n                }\"\n              ></i>\n            </button>\n          </li>\n          <li class=\"list-inline-item mr-75\">\n            <div ngbDropdown class=\"no-arrow\">\n              <a\n                href=\"javascript:void(0);\"\n                ngbDropdownToggle\n                id=\"folder\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i data-feather=\"folder\" [size]=\"18\"></i>\n              </a>\n              <div ngbDropdownMenu aria-labelledby=\"folder\">\n                <a\n                  ngbDropdownItem\n                  (click)=\"updateFolderOnSelectedMails('draft')\"\n                  class=\"d-flex align-items-center\"\n                  href=\"javascript:void(0);\"\n                >\n                  <i data-feather=\"edit-2\" class=\"font-small-4 mr-50\"></i>\n                  <span>Draft</span>\n                </a>\n                <a\n                  ngbDropdownItem\n                  (click)=\"updateFolderOnSelectedMails('spam')\"\n                  class=\"d-flex align-items-center\"\n                  href=\"javascript:void(0);\"\n                >\n                  <i data-feather=\"info\" class=\"font-small-4 mr-50\"></i>\n                  <span>Spam</span>\n                </a>\n                <a\n                  ngbDropdownItem\n                  (click)=\"updateFolderOnSelectedMails('trash')\"\n                  class=\"d-flex align-items-center\"\n                  href=\"javascript:void(0);\"\n                >\n                  <i data-feather=\"trash\" class=\"font-small-4 mr-50\"></i>\n                  <span>Trash</span>\n                </a>\n              </div>\n            </div>\n          </li>\n          <li class=\"list-inline-item mr-75\">\n            <div ngbDropdown class=\"no-arrow\">\n              <a\n                href=\"javascript:void(0);\"\n                ngbDropdownToggle\n                id=\"tag\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <i data-feather=\"tag\" [size]=\"18\"></i>\n              </a>\n              <div ngbDropdownMenu aria-labelledby=\"tag\">\n                <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('personal')\" href=\"javascript:void(0);\"\n                  ><span class=\"mr-50 bullet bullet-success bullet-sm\"></span>Personal</a\n                >\n                <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('company')\" href=\"javascript:void(0);\"\n                  ><span class=\"mr-50 bullet bullet-primary bullet-sm\"></span>Company</a\n                >\n                <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('important')\" href=\"javascript:void(0);\"\n                  ><span class=\"mr-50 bullet bullet-warning bullet-sm\"></span>Important</a\n                >\n                <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('private')\" href=\"javascript:void(0);\"\n                  ><span class=\"mr-50 bullet bullet-danger bullet-sm\"></span>Private</a\n                >\n              </div>\n            </div>\n          </li>\n          <li class=\"list-inline-item mr-75\">\n            <button (click)=\"unRead()\" class=\"btn action-icon p-0\"><i data-feather=\"mail\" [size]=\"18\"></i></button>\n          </li>\n          <li class=\"list-inline-item mr-75\">\n            <button (click)=\"updateFolderOnSelectedMails('trash')\" class=\"btn action-icon p-0\">\n              <i data-feather=\"trash\" [size]=\"18\"></i>\n            </button>\n          </li>\n          <li class=\"list-inline-item mr-75 email-prev\">\n            <span class=\"action-icon\"><i data-feather=\"chevron-left\" [size]=\"18\"></i></span>\n          </li>\n          <li class=\"list-inline-item mr-75 email-next\">\n            <span class=\"action-icon\"><i data-feather=\"chevron-right\" [size]=\"18\"></i></span>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!-- Detailed Email Header ends -->\n\n    <!-- Detailed Email Content starts -->\n    <div class=\"email-scroll-area\" [perfectScrollbar]>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"email-label\">\n            <span\n              class=\"mail-label badge badge-pill mr-50\"\n              *ngFor=\"let label of openedEmail.labels\"\n              [ngClass]=\"{\n                'badge-light-success': label === 'personal',\n                'badge-light-primary': label === 'company',\n                'badge-light-warning': label === 'important',\n                'badge-light-danger': label === 'private'\n              }\"\n              >{{ label }}</span\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"row mb-1\" *ngIf=\"currentMail?.replies.length > 0 && emailAppDetailReplies === false\">\n        <div class=\"col-12\">\n          <a (click)=\"openReplies()\" href=\"javascript:void(0);\" class=\"font-weight-bold\"> View 2 Earlier Messages </a>\n        </div>\n      </div>\n      <!-- replies -->\n      <ng-container *ngIf=\"currentMail?.replies.length > 0 && emailAppDetailReplies === true\">\n        <div class=\"row\" *ngFor=\"let replie of currentMail?.replies\">\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-header email-detail-head\">\n                <div class=\"user-details d-flex justify-content-between align-items-center flex-wrap\">\n                  <div class=\"avatar mr-75\">\n                    <img [src]=\"replie.from.avatar\" alt=\"avatar img holder\" width=\"48\" height=\"48\" />\n                  </div>\n                  <div class=\"mail-items\">\n                    <h5 class=\"mb-0\">{{ replie.from.name }}</h5>\n                    <div ngbDropdown class=\"email-info-dropup\">\n                      <span\n                        role=\"button\"\n                        class=\"font-small-3 text-muted\"\n                        id=\"card_top01\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                        ngbDropdownToggle\n                      >\n                        {{ replie.from.email }}\n                      </span>\n                      <div ngbDropdownMenu aria-labelledby=\"card_top01\">\n                        <table class=\"table table-sm table-borderless\">\n                          <tbody>\n                            <tr>\n                              <td class=\"text-right\">From:</td>\n                              <td>{{ replie.from.email }}</td>\n                            </tr>\n                            <tr>\n                              <td class=\"text-right\">To:</td>\n                              <ng-container *ngFor=\"let emailToRef of replie.to\">\n                                <td>{{ emailToRef.email }}</td>\n                              </ng-container>\n                            </tr>\n                            <tr>\n                              <td class=\"text-right\">Date:</td>\n                              <td>{{ replie.time | date: 'short':'UTC' }}</td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"mail-meta-item d-flex align-items-center\">\n                  <small class=\"mail-date-time text-muted\">{{ replie.time | date: 'short':'UTC' }}</small>\n                  <div ngbDropdown class=\"ml-50\">\n                    <div\n                      role=\"button\"\n                      class=\"hide-arrow\"\n                      id=\"email_more\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      ngbDropdownToggle\n                    >\n                      <i data-feather=\"more-vertical\" [size]=\"18\"></i>\n                    </div>\n                    <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"email_more\">\n                      <div ngbDropdownItem><i data-feather=\"corner-up-left\" class=\"mr-50\"></i>Reply</div>\n                      <div ngbDropdownItem><i data-feather=\"corner-up-right\" class=\"mr-50\"></i>Forward</div>\n                      <div ngbDropdownItem><i data-feather=\"trash-2\" class=\"mr-50\"></i>Delete</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"card-body mail-message-wrapper pt-2\">\n                <div class=\"mail-message\" [innerHTML]=\"replie.message\"></div>\n              </div>\n              <div class=\"card-footer\" *ngIf=\"replie.attachments.length > 0\">\n                <div class=\"mail-attachments\">\n                  <div class=\"d-flex align-items-center mb-1\">\n                    <i data-feather=\"paperclip\" [size]=\"16\" class=\"mr-50\"></i>\n                    <h5 class=\"font-weight-bolder text-body mb-0\">{{ replie.attachments.length }} Attachments</h5>\n                  </div>\n                  <div class=\"d-flex flex-column\">\n                    <a href=\"javascript:void(0);\" class=\"mb-50\" *ngFor=\"let attachment of replie.attachments\">\n                      <img [src]=\"attachment.thumbnail\" class=\"mr-25\" alt=\"png\" height=\"18\" />\n                      <small class=\"text-muted font-weight-bolder\">{{ attachment.fileName }}</small>\n                      <span class=\"text-muted font-small-2 ml-25\">({{ attachment.size }})</span>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n      <!-- replies -->\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-header email-detail-head\">\n              <div class=\"user-details d-flex justify-content-between align-items-center flex-wrap\">\n                <div class=\"avatar mr-75\">\n                  <img [src]=\"openedEmail.from.avatar\" alt=\"avatar img holder\" width=\"48\" height=\"48\" />\n                </div>\n                <div class=\"mail-items\">\n                  <h5 class=\"mb-0\">{{ openedEmail.from.name }}</h5>\n                  <div ngbDropdown class=\"email-info-dropup\">\n                    <span\n                      role=\"button\"\n                      class=\"font-small-3 text-muted\"\n                      id=\"card_top01\"\n                      data-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                      ngbDropdownToggle\n                    >\n                      {{ openedEmail.from.email }}\n                    </span>\n                    <div ngbDropdownMenu aria-labelledby=\"card_top01\">\n                      <table class=\"table table-sm table-borderless\">\n                        <tbody>\n                          <tr>\n                            <td class=\"text-right\">From:</td>\n                            <td>{{ openedEmail.from.email }}</td>\n                          </tr>\n                          <tr>\n                            <td class=\"text-right\">To:</td>\n                            <ng-container *ngFor=\"let emailToRef of openedEmail.to\">\n                              <td>{{ emailToRef.email }}</td>\n                            </ng-container>\n                          </tr>\n                          <tr>\n                            <td class=\"text-right\">Date:</td>\n                            <td>{{ openedEmail.time | date: 'short':'UTC' }}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"mail-meta-item d-flex align-items-center\">\n                <small class=\"mail-date-time text-muted\">{{ openedEmail.time | date: 'short':'UTC' }}</small>\n                <div ngbDropdown class=\"ml-50\">\n                  <div\n                    role=\"button\"\n                    class=\"hide-arrow\"\n                    id=\"email_more\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    ngbDropdownToggle\n                  >\n                    <i data-feather=\"more-vertical\" [size]=\"18\"></i>\n                  </div>\n                  <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"email_more\">\n                    <div ngbDropdownItem><i data-feather=\"corner-up-left\" class=\"mr-50\"></i>Reply</div>\n                    <div ngbDropdownItem><i data-feather=\"corner-up-right\" class=\"mr-50\"></i>Forward</div>\n                    <div ngbDropdownItem><i data-feather=\"trash-2\" class=\"mr-50\"></i>Delete</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"card-body mail-message-wrapper pt-2\">\n              <div class=\"mail-message\" [innerHTML]=\"openedEmail.message\"></div>\n            </div>\n            <div class=\"card-footer\" *ngIf=\"openedEmail.attachments.length > 0\">\n              <div class=\"mail-attachments\">\n                <div class=\"d-flex align-items-center mb-1\">\n                  <i data-feather=\"paperclip\" [size]=\"16\" class=\"mr-50\"></i>\n                  <h5 class=\"font-weight-bolder text-body mb-0\">{{ openedEmail.attachments.length }} Attachments</h5>\n                </div>\n                <div class=\"d-flex flex-column\">\n                  <a href=\"javascript:void(0);\" class=\"mb-50\" *ngFor=\"let attachment of openedEmail.attachments\">\n                    <img [src]=\"attachment.thumbnail\" class=\"mr-25\" alt=\"png\" height=\"18\" />\n                    <small class=\"text-muted font-weight-bolder\">{{ attachment.fileName }}</small>\n                    <span class=\"text-muted font-small-2 ml-25\">({{ attachment.size }})</span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex justify-content-between\">\n                <h5 class=\"mb-0\">\n                  Click here to\n                  <a href=\"javascript:void(0);\">Reply</a>\n                  or\n                  <a href=\"javascript:void(0);\">Forward</a>\n                </h5>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Detailed Email Content ends -->\n  </div>\n</ng-container>\n<!--/ Detailed Email View -->\n","import { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Email } from 'app/main/apps/email/email.model';\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'email-list-item',\n  templateUrl: './email-list-item.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmailListItemComponent implements OnInit {\n  // Public\n  public selected;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  // Input Decorator\n  @Input() email: Email;\n\n  /**\n   *\n   * @param {EmailService} _emailService\n   */\n  constructor(private _emailService: EmailService) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  /**\n   * On Checkbox Change\n   */\n  onSelectedChange() {\n    this._emailService.toggleSelectedMail(this.email.id);\n  }\n\n  /**\n   * Toggle Starred\n   */\n  toggleStarred() {\n    this._emailService.toggleStarred(this.email);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to update on selected email change\n    this._emailService.onSelectedEmailsChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(selectedMails => {\n      this.selected = false;\n\n      if (selectedMails.length > 0) {\n        for (const email of selectedMails) {\n          if (email.id === this.email.id) {\n            this.selected = true;\n            break;\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * On destroy\n   */\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<li class=\"media\" [ngClass]=\"{ 'mail-read': email.isRead === true, 'selected-row-bg': selected === true }\">\n  <div class=\"media-left pr-50\">\n    <div class=\"avatar\">\n      <img [src]=\"email.from.avatar\" alt=\"avatar img holder\" />\n    </div>\n    <div class=\"user-action\">\n      <div class=\"custom-control custom-checkbox\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          id=\"customCheck{{ email.id }}\"\n          name=\"customCheck{{ email.id }}\"\n          [(ngModel)]=\"selected\"\n          (ngModelChange)=\"onSelectedChange()\"\n          (click)=\"$event.stopPropagation()\"\n        />\n        <label class=\"custom-control-label\" for=\"customCheck{{ email.id }}\"></label>\n      </div>\n      <button class=\"email-favorite btn p-0\" (click)=\"toggleStarred(); $event.stopPropagation()\">\n        <i\n          class=\"fa\"\n          [ngClass]=\"{ 'fa-star text-warning': email.isStarred === true, 'fa-star-o': email.isStarred === false }\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"media-body\">\n    <div class=\"mail-details\">\n      <div class=\"mail-items\">\n        <h5 class=\"mb-25\">{{ email.from.name }}</h5>\n        <span class=\"text-truncate\">{{ email.subject }}</span>\n      </div>\n      <div class=\"mail-meta-item\">\n        <ng-container *ngIf=\"email.attachments.length > 0\">\n          <i data-feather=\"paperclip\"></i>\n        </ng-container>\n        <span\n          class=\"mx-50 bullet bullet-sm\"\n          *ngFor=\"let label of email.labels\"\n          [ngClass]=\"{\n            'bullet-success': label === 'personal',\n            'bullet-primary': label === 'company',\n            'bullet-warning': label === 'important',\n            'bullet-danger': label === 'private'\n          }\"\n        ></span>\n        <span class=\"mail-date\">{{ email.time | date: 'short':'UTC' }}</span>\n      </div>\n    </div>\n    <div class=\"mail-message\">\n      <p class=\"text-truncate mb-0\">{{ email.message | striphtml }}</p>\n    </div>\n  </div>\n</li>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { Email } from 'app/main/apps/email/email.model';\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'app-email-list',\n  templateUrl: './email-list.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmailListComponent implements OnInit {\n  // Public\n  public emails: Email[];\n  public hasSelectedMails;\n  public isIndeterminate;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   *\n   * @param {EmailService} _emailService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _emailService: EmailService, private _coreSidebarService: CoreSidebarService) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Toggle the sidebar\n   *\n   * @param name\n   */\n  toggleSidebar(name): void {\n    this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n  }\n\n  /**\n   * Toggle Select All\n   */\n  toggleSelectAll() {\n    this._emailService.toggleSelectAll();\n  }\n\n  /**\n   * Update Folder On Selected Emails\n   *\n   * @param folderRef\n   */\n  updateFolderOnSelectedMails(folderRef) {\n    this._emailService.updateFolderOnSelectedEmails(folderRef);\n  }\n\n  /**\n   * Updated Labels On Selected Emails\n   *\n   * @param labelRef\n   */\n  updateLabelOnSelectedEmails(labelRef) {\n    this._emailService.updateLabelOnSelectedEmails(labelRef);\n  }\n\n  /**\n   * Open Email\n   *\n   * @param id\n   */\n  openEmail(id) {\n    this._emailService.openEmailDetails(id);\n  }\n\n  /**\n   * Un-Read\n   */\n  unRead() {\n    this._emailService.markAsUnread();\n  }\n\n  /**\n   * Query Update\n   *\n   * @param queryValue\n   */\n  queryUpdate(queryValue) {\n    this._emailService.updateSearchText(queryValue.target.value);\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n\n  ngOnInit(): void {\n    // Subscribe to Selected Emails changes\n    this._emailService.onSelectedEmailsChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(selectedMails => {\n      setTimeout(() => {\n        this.hasSelectedMails = selectedMails.length > 0;\n        this.isIndeterminate = selectedMails.length !== this._emailService.emails.length && selectedMails.length > 0;\n      }, 0);\n    });\n\n    // Subscribe to update Emails on changes\n    this._emailService.onEmailsChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(emails => {\n      this.emails = emails;\n    });\n  }\n\n  /**\n   * On destroy\n   */\n\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<!-- Email list Area -->\n<div class=\"email-app-list\">\n  <!-- Email search starts -->\n  <div class=\"app-fixed-search d-flex align-items-center\">\n    <div class=\"sidebar-toggle d-block d-lg-none ml-1\">\n      <button class=\"btn p-0\" (click)=\"toggleSidebar('email-sidebar')\"><i data-feather=\"menu\" [size]=\"21\"></i></button>\n    </div>\n    <div class=\"d-flex align-content-center justify-content-between w-100\">\n      <div class=\"input-group input-group-merge\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\"><i data-feather=\"search\" class=\"text-muted\"></i></span>\n        </div>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          id=\"email-search\"\n          placeholder=\"Search email\"\n          aria-label=\"Search...\"\n          aria-describedby=\"email-search\"\n          (keyup)=\"queryUpdate($event)\"\n        />\n      </div>\n    </div>\n  </div>\n  <!-- Email search ends -->\n\n  <!-- Email actions starts -->\n  <div class=\"app-action\">\n    <div class=\"action-left\">\n      <div class=\"custom-control custom-checkbox selectAll\">\n        <input\n          type=\"checkbox\"\n          class=\"custom-control-input\"\n          id=\"selectAllCheck\"\n          [checked]=\"hasSelectedMails\"\n          [indeterminate]=\"isIndeterminate\"\n          (click)=\"toggleSelectAll()\"\n        />\n        <label class=\"custom-control-label font-weight-bolder pl-25\" for=\"selectAllCheck\">Select All</label>\n      </div>\n    </div>\n    <div class=\"action-right\" *ngIf=\"hasSelectedMails > 0\">\n      <ul class=\"list-inline m-0\">\n        <li class=\"list-inline-item\">\n          <div ngbDropdown>\n            <a\n              href=\"javascript:void(0);\"\n              ngbDropdownToggle\n              id=\"folder\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"folder\" [size]=\"18\"></i>\n            </a>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"folder\">\n              <a\n                ngbDropdownItem\n                (click)=\"updateFolderOnSelectedMails('draft')\"\n                class=\"d-flex align-items-center\"\n                href=\"javascript:void(0);\"\n              >\n                <i data-feather=\"edit-2\" class=\"font-small-4 mr-50\"></i>\n                <span>Draft</span>\n              </a>\n              <a\n                ngbDropdownItem\n                (click)=\"updateFolderOnSelectedMails('spam')\"\n                class=\"d-flex align-items-center\"\n                href=\"javascript:void(0);\"\n              >\n                <i data-feather=\"info\" class=\"font-small-4 mr-50\"></i>\n                <span>Spam</span>\n              </a>\n              <a\n                ngbDropdownItem\n                (click)=\"updateFolderOnSelectedMails('trash')\"\n                class=\"d-flex align-items-center\"\n                href=\"javascript:void(0);\"\n              >\n                <i data-feather=\"trash\" class=\"font-small-4 mr-50\"></i>\n                <span>Trash</span>\n              </a>\n            </div>\n          </div>\n        </li>\n        <li class=\"list-inline-item\">\n          <div ngbDropdown>\n            <a\n              href=\"javascript:void(0);\"\n              ngbDropdownToggle\n              id=\"tag\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"tag\" [size]=\"18\"></i>\n            </a>\n            <div ngbDropdownMenu class=\"dropdown-menu-right\" aria-labelledby=\"tag\">\n              <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('personal')\" href=\"javascript:void(0);\"\n                ><span class=\"mr-50 bullet bullet-success bullet-sm\"></span>Personal</a\n              >\n              <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('company')\" href=\"javascript:void(0);\"\n                ><span class=\"mr-50 bullet bullet-primary bullet-sm\"></span>Company</a\n              >\n              <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('important')\" href=\"javascript:void(0);\"\n                ><span class=\"mr-50 bullet bullet-warning bullet-sm\"></span>Important</a\n              >\n              <a ngbDropdownItem (click)=\"updateLabelOnSelectedEmails('private')\" href=\"javascript:void(0);\"\n                ><span class=\"mr-50 bullet bullet-danger bullet-sm\"></span>Private</a\n              >\n            </div>\n          </div>\n        </li>\n        <li class=\"list-inline-item mail-unread\">\n          <button class=\"action-icon btn p-0\" (click)=\"unRead()\"><i data-feather=\"mail\" [size]=\"18\"></i></button>\n        </li>\n        <li class=\"list-inline-item mail-delete\">\n          <button class=\"action-icon btn p-0\" (click)=\"updateFolderOnSelectedMails('trash')\">\n            <i data-feather=\"trash-2\" [size]=\"18\"></i>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <!-- Email actions ends -->\n\n  <!-- Email list starts -->\n  <div class=\"email-user-list\" [perfectScrollbar]>\n    <ul class=\"email-media-list\">\n      <email-list-item\n        [email]=\"email\"\n        *ngFor=\"let email of emails; let i = index\"\n        (click)=\"openEmail(email.id); $event.stopPropagation()\"\n      ></email-list-item>\n      <ng-container *ngIf=\"emails.length; else noResults\"></ng-container>\n    </ul>\n    <ng-template #noResults>\n      <div class=\"no-results show\">\n        <h5>No Items Found</h5>\n      </div>\n    </ng-template>\n  </div>\n  <!-- Email list ends -->\n</div>\n<!--/ Email list Area -->\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { CoreSidebarService } from '@core/components/core-sidebar/core-sidebar.service';\n\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'app-email-sidebar',\n  templateUrl: './email-sidebar.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class EmailSidebarComponent implements OnInit {\n  // Public\n  public folders;\n  public labels;\n  public openComposeRef;\n  public draftCount;\n  public unReadInboxCount;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   *\n   * @param {EmailService} _emailService\n   * @param {CoreSidebarService} _coreSidebarService\n   */\n  constructor(private _emailService: EmailService, private _coreSidebarService: CoreSidebarService) {\n    this._unsubscribeAll = new Subject();\n  }\n\n  // Public Methods\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * Open Compose & Update Value in Service\n   */\n  openCompose() {\n    this.openComposeRef = true;\n    this._emailService.composeEmail(this.openComposeRef);\n    this._coreSidebarService.getSidebarRegistry('email-sidebar').toggleOpen();\n  }\n\n  /**\n   * Toggle Sidebar\n   *\n   * @param nameRef\n   */\n  toggleSidebar(nameRef): void {\n    this._coreSidebarService.getSidebarRegistry(nameRef).toggleOpen();\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Subscribe to Folder\n    this._emailService.onFoldersChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.folders = response;\n    });\n\n    // Subscribe to Labels\n    this._emailService.onLabelsChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.labels = response;\n    });\n\n    // Subscribe to Draft and Unread Mail Count\n    this._emailService.onDraftCountChanged\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(response => (this.draftCount = response));\n\n    this._emailService.onUnreadInboxCountChanged\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(response => (this.unReadInboxCount = response));\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n}\n","<!-- email-sidebar -->\n<div class=\"sidebar\">\n  <div class=\"sidebar-content email-app-sidebar\" [perfectScrollbar]>\n    <div class=\"email-app-menu\">\n      <div class=\"form-group-compose text-center compose-btn\">\n        <button\n          type=\"button\"\n          class=\"compose-email btn btn-primary btn-block\"\n          data-target=\"#compose-mail\"\n          (click)=\"openCompose()\"\n          rippleEffect\n        >\n          Compose\n        </button>\n      </div>\n      <div class=\"sidebar-menu-list\">\n        <div class=\"list-group list-group-messages\">\n          <a\n            *ngFor=\"let folder of folders\"\n            [routerLink]=\"'/apps/email/' + folder.handle\"\n            [routerLinkActive]=\"'active'\"\n            class=\"list-group-item list-group-item-action\"\n            (click)=\"toggleSidebar('email-sidebar')\"\n          >\n            <i [data-feather]=\"folder.icon\" [size]=\"18\" class=\"mr-75\"></i>\n            <span class=\"align-middle\">{{ folder.title }}</span>\n            <span\n              *ngIf=\"folder.handle === 'draft' || folder.handle === 'inbox'\"\n              class=\"badge badge-pill float-right\"\n              [ngClass]=\"{\n                'badge-light-warning': folder.handle === 'draft',\n                'badge-light-primary': folder.handle === 'inbox'\n              }\"\n              >{{\n                folder.handle === 'draft' ? draftCount : folder.handle === 'inbox' ? unReadInboxCount : unReadInboxCount\n              }}</span\n            >\n          </a>\n        </div>\n        <!-- <hr /> -->\n        <h6 class=\"section-label mt-3 mb-1 px-2\">Labels</h6>\n        <div class=\"list-group list-group-labels\">\n          <a\n            *ngFor=\"let label of labels\"\n            [routerLink]=\"'/apps/email/label/' + label.handle\"\n            [routerLinkActive]=\"'active'\"\n            class=\"list-group-item list-group-item-action\"\n            (click)=\"toggleSidebar('email-sidebar')\"\n            ><span class=\"bullet bullet-sm mr-1 {{ label.color }}\"></span>{{ label.title }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--/ email-sidebar -->\n","import { DOCUMENT } from '@angular/common';\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'email-application' }\n})\nexport class EmailComponent {\n  /**\n   *\n   * @param {DOCUMENT} document\n   * @param {ActivatedRoute} route\n   * @param {EmailService} _emailService\n   */\n  constructor(@Inject(DOCUMENT) private document, private route: ActivatedRoute, private _emailService: EmailService) {}\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    // Update Search Text on QueryParams Change\n    this.route.queryParams.subscribe(val => {\n      this._emailService.updateSearchText(val.q);\n    });\n  }\n}\n","<div class=\"content-area-wrapper container-xxl p-0\">\n  <!-- sidebar Left -->\n  <core-sidebar\n    class=\"sidebar-left\"\n    name=\"email-sidebar\"\n    overlayClass=\"body-content-overlay\"\n    collapsibleSidebar=\"bs-gt-lg\"\n  >\n    <app-email-sidebar></app-email-sidebar>\n  </core-sidebar>\n\n  <!--/ sidebar Left -->\n\n  <!-- content-right -->\n  <div class=\"content-right\">\n    <app-email-compose></app-email-compose>\n    <div class=\"content-wrapper container-xxl p-0\">\n      <div class=\"content-body\">\n        <!-- email list -->\n        <app-email-list></app-email-list>\n        <!-- email list -->\n\n        <!-- email details -->\n        <app-email-details></app-email-details>\n        <!-- email details -->\n      </div>\n    </div>\n  </div>\n  <!--/ content-right -->\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSidebarModule } from '@core/components';\nimport { CorePipesModule } from '@core/pipes/pipes.module';\nimport { CoreCommonModule } from '@core/common.module';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { QuillModule } from 'ngx-quill';\n\nimport { EmailComposeComponent } from 'app/main/apps/email/email-compose/email-compose.component';\nimport { EmailDetailsComponent } from 'app/main/apps/email/email-details/email-details.component';\nimport { EmailListComponent } from 'app/main/apps/email/email-list/email-list.component';\nimport { EmailListItemComponent } from 'app/main/apps/email/email-list/email-list-item/email-list-item.component';\nimport { EmailSidebarComponent } from 'app/main/apps/email/email-sidebar/email-sidebar.component';\n\nimport { EmailComponent } from 'app/main/apps/email/email.component';\nimport { EmailService } from 'app/main/apps/email/email.service';\n\n// routing\nconst routes: Routes = [\n  {\n    path: ':folder',\n    component: EmailComponent,\n    resolve: {\n      email: EmailService\n    },\n    data: { animation: 'EmailComponent' }\n  },\n  {\n    path: 'label/:label',\n    component: EmailComponent,\n    resolve: {\n      email: EmailService\n    },\n    data: { animation: 'EmailComponent' }\n  },\n  {\n    path: '**',\n    redirectTo: 'inbox',\n    data: { animation: 'EmailComponent' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    EmailComponent,\n    EmailSidebarComponent,\n    EmailComposeComponent,\n    EmailListComponent,\n    EmailDetailsComponent,\n    EmailListItemComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    PerfectScrollbarModule,\n    CoreCommonModule,\n    NgbModule,\n    NgSelectModule,\n    QuillModule.forRoot(),\n    CorePipesModule,\n    CoreSidebarModule\n  ],\n  providers: [EmailService]\n})\nexport class EmailModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { Email } from 'app/main/apps/email/email.model';\n\n@Injectable()\nexport class EmailService implements Resolve<any> {\n  // Public\n  public emails: Email[];\n  public selectedEmails: Email[];\n  public openedEmail;\n  public searchText = '';\n  public composeEmailRef: boolean;\n  public draftEmailsCount;\n  public unReadInboxCount;\n  public isEmailDetailOpen;\n  public labelHandle;\n  public folderHandle;\n\n  public folders: any[];\n  public labels: any[];\n  public tempEmails: any[];\n\n  public onEmailsChanged: BehaviorSubject<any>;\n  public onSelectedEmailsChanged: BehaviorSubject<any>;\n  public onOpenedEmailChanged: BehaviorSubject<any>;\n  public onFoldersChanged: BehaviorSubject<any>;\n  public onLabelsChanged: BehaviorSubject<any>;\n  public composeEmailChanged: BehaviorSubject<boolean>;\n  public onSearchTextChanged: BehaviorSubject<any>;\n  public onDraftCountChanged: BehaviorSubject<any>;\n  public onUnreadInboxCountChanged: BehaviorSubject<any>;\n  public onEmailDetailChanged: BehaviorSubject<boolean>;\n\n  // Private\n  private routeParams: any;\n\n  /**\n   *\n   * @param {HttpClient} _httpClient\n   * @param {Router} router\n   */\n  constructor(private _httpClient: HttpClient, private router: Router) {\n    this.folderHandle = 'inbox';\n    this.labelHandle = '';\n    this.selectedEmails = [];\n    this.isEmailDetailOpen = false;\n    this.onEmailsChanged = new BehaviorSubject([]);\n    this.onSelectedEmailsChanged = new BehaviorSubject([]);\n    this.onOpenedEmailChanged = new BehaviorSubject([]);\n    this.onFoldersChanged = new BehaviorSubject([]);\n    this.onLabelsChanged = new BehaviorSubject([]);\n    this.composeEmailChanged = new BehaviorSubject(false);\n    this.onSearchTextChanged = new BehaviorSubject('');\n    this.onDraftCountChanged = new BehaviorSubject([]);\n    this.onUnreadInboxCountChanged = new BehaviorSubject([]);\n    this.onEmailDetailChanged = new BehaviorSubject(false);\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    this.routeParams = route.params;\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([\n        this.getFolders(),\n        this.getLabels(),\n        this.getEmails(),\n        this.updateDraftCount(),\n        this.updateUnreadCount()\n      ]).then(() => {\n        // close Opened email on router change\n        this.closeEmailDetails();\n\n        // deselect Selected emails on router change\n        this.deselectEmails();\n\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Emails\n   */\n  getEmails() {\n    if (this.routeParams.label) {\n      return this.getEmailsByLabel(this.routeParams.label);\n    }\n    return this.getEmailsByFolder(this.routeParams.folder);\n  }\n\n  /**\n   * Get Emails By Folder\n   *\n   * @param folderHandle\n   * @returns {Promise<Email[]>}\n   */\n  getEmailsByFolder(folderHandle) {\n    const apiUrl = 'api/emails-data?folder=' + folderHandle;\n\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(apiUrl).subscribe((response: any) => {\n        this.folderHandle = folderHandle;\n        this.labelHandle = '';\n        this.emails = response;\n        this.tempEmails = response;\n        this.onEmailsChanged.next(this.emails);\n        if (folderHandle === 'inbox') {\n          this.updateUnreadCount();\n        }\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Emails By Label\n   *\n   * @param labelHandle\n   * @returns {Promise<Email[]>}\n   */\n  getEmailsByLabel(labelHandle) {\n    const apiUrl = 'api/emails-data?labels=' + labelHandle;\n\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(apiUrl).subscribe((response: any) => {\n        this.labelHandle = labelHandle;\n        this.folderHandle = '';\n        this.emails = response;\n        this.tempEmails = response;\n        this.onEmailsChanged.next(this.emails);\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get Folders\n   *\n   * @returns {Promise<Email[]>}\n   */\n  getFolders() {\n    const apiUrl = 'api/email-folders';\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(apiUrl).subscribe((response: any) => {\n        this.folders = response;\n        this.onFoldersChanged.next(this.folders);\n\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get  Labels\n   *\n   * @returns {Promise<any>}\n   */\n  getLabels(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._httpClient.get('api/email-labels').subscribe((response: any) => {\n        this.labels = response;\n        this.onLabelsChanged.next(this.labels);\n        resolve(this.labels);\n      }, reject);\n    });\n  }\n\n  /**\n   * Compose Email\n   *\n   * @param value\n   */\n  composeEmail(value) {\n    this.composeEmailRef = value;\n    this.composeEmailChanged.next(this.composeEmailRef);\n  }\n\n  /**\n   * Set/Update Folder On Selected Emails\n   *\n   * @param folderId\n   */\n  updateFolderOnSelectedEmails(folderRef): void {\n    this.selectedEmails.map(email => {\n      email.folder = folderRef;\n      this.updateEmail(email);\n    });\n    this.deselectEmails();\n\n    // close Opened email\n    this.closeEmailDetails();\n  }\n\n  /**\n   * Set/Update Labels On Selected Emails\n   *\n   * @param labelRef\n   */\n  updateLabelOnSelectedEmails(labelRef) {\n    this.selectedEmails.map(email => {\n      if (email.labels.indexOf(labelRef) === -1) {\n        // If labelRef isn't in email labels add it\n        email.labels.push(labelRef);\n      } else {\n        // If labelRef is in email labels remove it\n        email.labels.splice(email.labels.indexOf(labelRef), 1);\n      }\n      this.updateEmail(email);\n    });\n  }\n\n  /**\n   * Get Draft Count\n   *\n   * @returns {Promise<Email[]>}\n   */\n  updateDraftCount() {\n    const apiUrl = 'api/emails-data?folder=draft';\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(apiUrl).subscribe((response: any) => {\n        this.draftEmailsCount = response.length;\n        this.onDraftCountChanged.next(this.draftEmailsCount);\n\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Update Un-read Emails Count\n   *\n   * @returns {Promise<Email[]>}\n   */\n  updateUnreadCount() {\n    const apiUrl = 'api/emails-data?folder=inbox';\n\n    return new Promise<void>((resolve, reject) => {\n      this._httpClient.get(apiUrl).subscribe((response: any) => {\n        const emails = response;\n        const unReadEmails = emails.filter(email => email.isRead === false);\n        this.unReadInboxCount = unReadEmails.length;\n        this.onUnreadInboxCountChanged.next(this.unReadInboxCount);\n\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Toggle select all\n   */\n  toggleSelectAll(): void {\n    if (this.selectedEmails.length > 0) {\n      this.deselectEmails();\n    } else {\n      this.selectEmails();\n    }\n  }\n\n  /**\n   * Select Emails\n   *\n   * @param filterParameter\n   * @param filterValue\n   */\n  selectEmails(): void {\n    this.selectedEmails = JSON.parse(JSON.stringify(this.emails));\n    this.onSelectedEmailsChanged.next(this.selectedEmails);\n  }\n\n  /**\n   * Deselect Emails\n   */\n  deselectEmails(): void {\n    this.selectedEmails = [];\n\n    // Trigger the next event\n    this.onSelectedEmailsChanged.next(this.selectedEmails);\n  }\n\n  /**\n   * Toggle Selected Email By Id\n   *\n   * @param id\n   */\n  toggleSelectedMail(id): void {\n    // First, check if we already have that Email as selected...\n    if (this.selectedEmails.length > 0) {\n      for (const email of this.selectedEmails) {\n        // ...delete the unselected Email\n        if (email.id === id) {\n          const index = this.selectedEmails.indexOf(email);\n\n          if (index !== -1) {\n            this.selectedEmails.splice(index, 1);\n\n            // Trigger the next event\n            this.onSelectedEmailsChanged.next(this.selectedEmails);\n\n            // Return\n            return;\n          }\n        }\n      }\n    }\n\n    // If we don't have it, push as selected\n    this.selectedEmails.push(\n      this.emails.find(email => {\n        return email.id === id;\n      })\n    );\n\n    // Trigger the next event\n    this.onSelectedEmailsChanged.next(this.selectedEmails);\n  }\n\n  /**\n   * Toggle Starred\n   *\n   * @param email\n   */\n  toggleStarred(email) {\n    if (email.isStarred === false) {\n      email.isStarred = true;\n    } else {\n      email.isStarred = false;\n    }\n    this.updateEmail(email);\n  }\n\n  /**\n   * Update Email\n   *\n   * @param email\n   * @returns {Promise<any>}\n   */\n  updateEmail(email): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._httpClient.post('api/emails-data/' + email.id, { ...email }).subscribe(response => {\n        this.getEmails().then(emails => {\n          this.updateDraftCount();\n          resolve(emails);\n        }, reject);\n      });\n    });\n  }\n\n  /**\n   * Set/Update Opened Email\n   *\n   * @param openedEmail\n   */\n  setOpenedEmail(openedEmail) {\n    this.selectedEmails = [];\n    this.selectedEmails[0] = openedEmail;\n    this.onSelectedEmailsChanged.next(this.selectedEmails);\n  }\n\n  /**\n   * Set/Update Opened Email by id\n   *\n   * @param id\n   */\n  openEmailDetails(id): void {\n    this.openedEmail = this.emails.find(email => {\n      return email.id === id;\n    });\n    this.onOpenedEmailChanged.next(this.openedEmail);\n    // Set opened mail mark as read\n    this.markAsRead(id);\n  }\n\n  /**\n   * Close Email Details\n   */\n  closeEmailDetails() {\n    this.isEmailDetailOpen = false;\n    this.onEmailDetailChanged.next(this.isEmailDetailOpen);\n  }\n\n  /**\n   * Read Email\n   *\n   * @param id\n   */\n  markAsRead(id) {\n    this.selectedEmails.map(email => {\n      if (email.id === id) {\n        email.isRead = true;\n      }\n\n      this.updateEmail(email);\n    });\n  }\n\n  /**\n   * Un-read Email\n   *\n   */\n  markAsUnread() {\n    this.selectedEmails.map(email => {\n      email.isRead = false;\n      this.updateEmail(email);\n      this.deselectEmails();\n\n      // close Opened email\n      this.closeEmailDetails();\n    });\n  }\n\n  /**\n   * Update SearchText & Route\n   *\n   * @param value\n   */\n  updateSearchText(value: string) {\n    if (value !== undefined && value !== null) {\n      if (this.labelHandle === '') {\n        this.router.navigate(['apps/email/' + this.folderHandle], { queryParams: { q: value } });\n      } else {\n        this.router.navigate(['apps/email/label/' + this.labelHandle], { queryParams: { q: value } });\n      }\n      if (value === '' && this.labelHandle === '') {\n        this.router.navigate(['apps/email/' + this.folderHandle], {});\n      } else if (value === '' && this.labelHandle !== '') {\n        this.router.navigate(['apps/email/label/' + this.labelHandle], {});\n      }\n      this.searchText = value.toLowerCase();\n      this.getMailOnQuery(value);\n    }\n  }\n\n  /**\n   * Get Email On Query\n   */\n  getMailOnQuery(value) {\n    const filteredMail = this.tempEmails.filter(email => {\n      return email.subject.toLowerCase().includes(value);\n    });\n\n    this.emails = filteredMail;\n    this.onEmailsChanged.next(this.emails);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}